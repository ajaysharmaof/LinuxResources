
1 ❑ Interrupt the boot process to Set the root password as password.
rd.break=ram disk break
▪ Wait for GRUB menu to appear and then press e to edit.
▪ Find the line starting with linux and ctrl+e end of line. enter the rd.break at the end.
▪ Press Ctrl+x to boot the system with these Kernel boot parameters. system is started  in emergency state or emergency shell
▪ At this stage, root file system is mounted in read only mode to /sysroot and must be remounted with r/w permissions.

$ mount

▪ To mount the root file system with r/w permissions
$ mount -o remount,rw /sysroot

chrooted shell started with this
▪ Switch /sysroot to / file system
$ chroot /sysroot
▪ To set the root password
# passwd

▪ To relabel the Selinux contexts
# touch /.autorelabel

exit
exit



2 ❑ Set the SELinux on System in enforcing mode.(security enhance linux selinux)

$ getenforce 			To check SELinux mode
$ vim /etc/selinux/config			 Set the variable SELINUX=enforcing
$ systemctl reboot
$ sestatus or getenforce
$ man sestatus
$ id




3 ❑ Set up local yum (dnf) repositories ,BaseOS and AppStream at location /repo/BaseOS and /repo/AppStream on System.

• Repo should be created with yum group information to use yum group.
$ dnf repolist 			To list repositories configured on system
	or
$ yum repolist

$ dnf grouplist hidden			 To list available group packages

$ mkdir -p /repo/BaseOS /repo/AppStream		 To create directories for repositori

$ cp -irv /run/media/pbajaj/CentOS*/BaseOS/* /repo/BaseOS 			Copy packages and repodata for BaseOS
$ cp -irv /run/media/pbajaj/CentOS*/AppStream/* /repo/AppStream 		Copy packages and repodata for AppStream

i- for interactiv r-recursive v-verbose


# mkdir -p /repo/BaseOS /repo/AppStream

$ scp /home/ajay/Downloads/CentOS-8.4.2105-x86_64-boot.iso ajay@192.168.0.9:/home/ajay/Downloads/

#mount iso first

# mkdir /media/ISO/CentOS
# mount -t iso9660 -o loop /home/ajay/Downloads/CentOS-8.4.2105-x86_64-boot.iso /media/ISO/CentOS

cd BaseOs
repodata Packages
repodata 	in repodata  .xml file content repo meta data   about package or yum
all rpm packages
Packages
repo meta data require for yum  require to run

## mount -t iso9660 -o loop /home/ajay/Downloads/CentOS-8.4.2105-x86_64-boot.iso /media/ISO/CentOS

# cp -irv /run/media/ajay/CentOS/BaseOS/* /repo/BaseOS 
# cp -irv /run/media/ISO/CentOS/AppStream/* /repo/AppStream


#or mount iso file 
vm ->storage->Controller:IDE->add iso file it will automatically mount iso file in /media/ajay/ 

check with iso file mounted on
$ df -h		you see iso mouted file
$ man dnf








4 ❑ Configure System to use BaseOS & AppStream repositories present at /repo/BaseOS and /repo/AppStream respectively.
	
/etc/yum.conf
# vim /etc/yum.repos.d/system.repo	Creating .repo file to configure System to use repos.

# cd /etc/yum.repos.d/
# ls -lrt
# mkdir /backup			create all .repo file in backup folder
# mv * /backup/

baseurl = http://
baseurl = ftp://
baseurl = file:///repo/BaseOS		local repo

[BaseOS]
name = BaseOS
baseurl = ///repo/BaseOS   	#local base repo enable(1) gpgcheck(gnu privacy gurard check)
gpgcheck = 0			gpgcheck=1 then also gpgkey=pubkey
enabled =1			enabled(1) repo
[AppStream]
name = AppStream
baseurl = ///repo/AppStream
gpgcheck = 0			gpgcheck=disable(0)
enabled = 1

:wq

or

[BaseOS]
name = BaseOS
baseurl = file:///repo/BaseOS
gpgcheck = 0
enabled = 1

[AppStream]
name = AppStream
baseurl = file:///repo/AppStream
gpgcheck = 0
enabled = 1

# more /etc/yum.conf 
[main]
gpgcheck=1
installonly_limit=3
clean_requirements_on_remove=True
best=True
skip_if_unavailable=False


# dnf/yum clean all			 To clear cache


# yum/dnf repolist			To list repositories configured on System
baseos appstream

#dnf grouplist hidden			 To list group available packages

# man yum.conf				 Manual page for yum.conf


disable subscription manager warning
# vim /etc/yum/pluginconf.d/subscription-manager.conf
enabled=0			set to 0 disable warning
# yum repolist


subscription-manager:-

#subscription-manager register --serverurl SERVER_URL

default severurl=subscription.rhsm.redhat.com		
	
specifiy in hostname directive in /etc/rhscm/rhsm.conf file under server section

# vim /etc/rhsm/rhsm.conf
# subscription-manger attach --auto		to subscribe the redhat
	a file redhat.repo under /etc/yum.repo.d/ created automatcy
	by default baseurl of redhat.repo on subcription baseurl=https://cdn.redhat.com	 in rhsm.conf

In exam baseurl povided
--baseurl=
# subscription-manger register --baseurl BaseURL



#more /etc/rhscm/rhsm.conf
[server]			
hostname= subscription.rhscm.redhat.com		default to register

[rhsm]
baseurl = https://cdn.redhat.com	 if you subscribe


#subscription-manger --help
register,remove,list,status,unregister,release,attach(for subscribe)

# subscription-manger register --help
--serverurl=SERVER_URL	to override default server url hostname= in rhsm.conf file

# subscription-manager register
restering subscription.rhsm.redhat.com:443/subscription
username:
password
	or
# subscription-manager register --serverurl subscription.rhsm.redhat.com
restering subscription.rhsm.redhat.com:443/subscription
username:
password

# cd /etc/yum.repos.d/
# ls	nofile	redhat.repo file now create one file

# subscription-manger attach --help
	--auto to attach subscription

## subscription-manger attach --auto
subscribed
# ls
redhat.repo

# more redhat.repo	all repo info

# yum/dnf repolist
	baseos appstream

# dnf install httpd
# subscription-manger list	
subscribe expire date version etc

# subscription-manger unregister	to unregister

yum.repos.d #ls
redhat.repo	empty file unregister

# dnf repolist
not regiseter system 


#IPA SERVER

#Services configured on IPA Server
IPA Server machine is pre-configured to provide below services:


▪ DNS Server – To provide Hostname resolution
▪ Forward DNS lookup 			Result (Output)
#host system.example.com		192.168.99.10
#host ipaserver.example.com		 192.168.99.254


▪ Reverse DNS lookup 			 Result (Output)
# host 192.168.99.10			 system.example.com
# host 192.168.99.254			 ipaserver.example.com

We can also use #nslookup or #dig for same purpose.

$ id
$ hostname 	ipaserver.example.com
$ ip addr show
192.168.99.254

forward lookup in dns server
# host ipaserver.example.com
ipaserver.example.com has address 192.168.99.254

# host system.example.com
system.example.com has address 192.168.99.10

Reverselookup
# host 192.168.99.254
243.99.168.192 domain name pointer (dns) ipaserver.example.com

# host 192.168.99.10
10.99.168.192 domain name pointer (dns)   server.example.co

▪ 389 Directory Server – Provides LDAP functionality to host LDAP users. Four users have been created on Directory Server.

Username			 Home Directory
ldap 				 /home/ldapuser/ldap
ldap1				 /ldap/home/ldap1
ldap2 				 /ldap/home/ldap2
smb1				 /home/smbf1


$ id ldap
$ id ldap1
$ id ldap2
$ id smb1
ipaserver@ipaserver$
$ su - ldap 
ldap$ id 	ldapuser

$ pwd	/home/ldapuser/ldap
$ exit

$ id	ipaserver



▪ NTP Server -To provide time services

Command 			Action/Description

#vim /etc/chrony.conf		To allow network to use time services
allow 192.168.99.0/24
:wq				

#systemctl restart chronyd 	  Restarting chronyd to make changes effective

#firewall-cmd –add-service=ntp --permanent		 Configuring firewall to accept inbound traffic


NTP server
$ systermctl status chronyd	active
$ more /etc/chrony.conf
alllow 192.168.99.0/24		allow NTP client access from local network


▪ NFS Server -To export LDAP user’s Home Directories and one more NFS share

#dnf install nfs-utils 			Installing nfs-server package(s)

# systemctl nfs-server --now enabled	 Starting and configuring service to start at boot

#vim /etc/exports			Defining exports in exports file
/nfsshare *(rw)
/home/ldapuser *(rw)
/ldap/home *(rw)
:wq


#exportfs -arv				 Exporting NFS exports
#firewall-cmd --add-service={nfs,rpc-bind,mound} --permanent		 Configuring firewall to accept inbound NFS traffic

#firewall-cmd --reload		 Reloading firewall to make configs effective



NFS Service / Samba service
$ systermctl status nfs-server			active
$ more /etc/exports		list of nfs		nfs exports
/nfsshare *(rw)
/home/ldapuser *(rw)
/ldap/home *(rw)

$ systemctl status smb		active
$ more /etc/samba/smb.conf
[samba]			->share name
comment = samba_share
path = /samba
writeable = yes


▪ Samba Server
#dnf install samba cifs-utils
#systemctl smb --now enabled Starting/enabling smb.service

#vim /etc/samba/smb.conf
[samba]
comment = samba_share
path = /samba
writable = yes
:wq

# systemctl restart samba 	Restarting smb.service to make changes effective
#smbpasswd -a smb1		 Creating samba user profile for smb1 user

#firewall-cmd --add-service=samba --permanent		 Configuring firewall to accept inbound traffic from client(s)

#firewall-cmd --reload

#semanage fcontext -a -t samba_share_t “/samba(/.*)?”		 Setting correct SELinux context type

#restorecon -Rv /samba		Restoring context



$ls -ldZ /samba				 samba  selinux context type check
samba_share_t		correcct context

$ getsebool -a | grep nfs	check selinux context on nfs
nfs_export_all_ro --> on	 by default its on by selinux bool
nfs_export_all_rw --> on

$ getsebool -a | grep samba	check on samba
samba_export_all_ro --> off        by default its off by selinux bool
samba_export_all_rw --> off  if we on this bool then no need to set selinux context type on samba share

$ su - root
root@ipaserver# pdbedit -L	list samba user
smb1	 user
#exit

$ firwall-cmd --list-all 
dns http https kerberos ldap ldaps mountd nfs ntp rpc-bind samba ssh




Importing IPASERVER appliance
▪ Download IPA Server.zip file from One drive link as mentioned below. You need to use any existing Microsoft account to
download same or create new account.
https://1drv.ms/u/s!AlfVvq2Yryd6l9gN9MfddX_136c8zA?e=hNg7Dp
Unzip and import the IPA Server.ova file in VirtualBox. You can do this by opening file and it will be automatically imported.
▪ Wait for 3-4 minutes for import to complete and the start VM.
▪ Login to IPA Server using password as password Verify different services provided by IPA Server.


12) ❑ Assign hostname system.example.com to System machine.

# hostnamectl or hostname 								To display current hostname assigned to System

# hostnamectl set-hostname system.example.com 			To assign new hostname to System

# man hostnamectl 										To check manual page for hostnamectl

Note : It I also possible to set hostname in /etc/hostname file. Set hostname in file and the reboot System but I suggest to
use hostnamectl utility for this task.

# sudo hostnamectl set-hostname ipaserver.example.com
[sudo] password for ajay: 
[ajay@ajaycentos ~]$ logout
$ su - root
Password: 
[root@ipaserver ~]# 

# hostnamectl
   Static hostname: ipaserver.example.com
         Icon name: computer-vm
           Chassis: vm
        Machine ID: a3ea3ebf9fd9443d94c33e762ae49c0b
           Boot ID: 62d80efff790483693c33960d6128a0b
    Virtualization: oracle
  Operating System: CentOS Linux 8
       CPE OS Name: cpe:/o:centos:centos:8
            Kernel: Linux 4.18.0-305.25.1.el8_4.x86_64
      Architecture: x86-64






13) ❑ List the AppStream modules available in repository.

• List the different Streams available for perl module.
• Install Stream 5.26 of perl module.

Command 														Action/Description

# dnf module list or yum module list 							To list available module in AppStream repository

# dnf module info perl or yum module info perl 					To list different streams for perl module

# dnf module info --profile perl:5.26 							To list specific perl stream

# dnf install @perl:5.26 										To install stream 5.26 of perl module



# dnf module list				to list all module in in Appsteam repo
Name stream
perl 5.24
perl 5.26

# dnf module info perl				to get info about perl module

# dnf module info perl | grep Stream
Stream           : 5.24
Stream           : 5.26 [d][a]
Stream           : 5.30


]# dnf module info --profile perl:5.26					info about particular module
Last metadata expiration check: 0:57:28 ago on Wed 24 Nov 2021 12:17:27 AM IST.
Name    : perl:5.26:8000020190628020724:55190bc5:x86_64
common  : perl
minimal : perl-interpreter


]# dnf install @perl:5.26			install specific steam in perl module

]# dnf remove @perl:5.26



14) ❑ Modify GRUB2(Bootloader) not to boot the System with GUI Mode booting screen(rhgb).

• Also all boot messages should be shown on the screen.
• Make sure interface names(eth*) should be used.

Command Action/Description

# vim /etc/default/grub										Open GRUB settings file in editing mode

Add biosdevname=0 and net.ifnames=0 to variable GRUB_CMDLINE_LINUX
Remove rhgb and quiet
:wq 


net.ifnames=0  -> to disable devices naming scheme


# grub2-mkconfig -o /boot/grub2/grub.cfg 						Rebuild GRUB config file, System on BIOS firmware

-o ->to specifc output file

# grub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg 				Rebuild GRUB config file, System on UEFI firmware


# systemctl reboot 											To reboot the System


rhgb (redhat graphical boot) - This is a GUI mode booting screen with most of the information hidden while the user sees a rotating activity icon spinning and brief information as to what the computer is doing.


quiet -hides most boot messages before rhgb starts. These are supposed to make the common user more comfortable.


rhgb 	-> to disable redhat graphical boot remove in grub file
quiet 	-> to show all boot message on sceen
 
biosdevname=0 => 
net.ifnames=0 =>  to disable devices naming scheme




# more /etc/default/grub 
GRUB_CMDLINE_LINUX="crashkernel=auto resume=/dev/mapper/cl-swap rd.lvm.lv=cl/root rd.lvm.lv=cl/swap rhgb quiet"

# vim /etc/default/grub
add biosdevname=0 and net.ifname=0 and remove rhgb quiet

GRUB_CMDLINE_LINUX="crashkernel=auto resume=/dev/mapper/cl-swap rd.lvm.lv=cl/root rd.lvm.lv=cl/swap biosdevname=0 net.ifnames=0"

# man grub2-mkconfig


when we made changes in grub config then we need rebuild grub config  using grub2-mkconfig

# grub2-mkconfig -o /boot/grub2/grub.cfg 			generating grub config bios system
Generating grub configuration file ...

# systemctl reboot
it will show all boot messages during starting

check etherface interface name , starting with "eth"


# ip a
interface name change from enp0s3 to eth0
and ip is also not assign

# nmcli connection show
enp0s3
system

# nmcli connection up enp0s3
error connection activation failed no suitable device found for this connection (device eth0 not available becaue profile is not compatible with device (mismatching interface name))


# vim /etc/sysconfig/netw  ork-scripts/ifcfg-system
change DEVICE from enp0s3 to eth
DEVICE=eth0

# nmcli connection reload ifcfg-system

# ip a
you will get ip of intrface eth0


# check your system is bios or UEFI

# sudo apt install efibootmgr
# sudo efibootmgr
IF BIOS THEN SHOW MESSAGE  saying EFI variables are not supported
			OR
 look for a folder /sys/firmware/efi. The folder will be missing if your system is using BIOS.




16) ❑ Establish SSH connection to ipaserver.example.com from system.example.com.

• Use user ldap to make this connection.


Command 								Action/Description
# systemctl status sshd 				To check status of sshd service on IPA Server

# ssh ldap@ipaserver.example.com 			To establish ssh connection as user(username) ldap
Enter password for ldap :****** 				Enter password for user ldap

# hostnamectl 								Verify user ldap is connected to IPA Server

#man ssh 									Manual page for openSSH SSH client

# man sshd 									Manual page for openSSH daemon



check on ipa server first
freeipa# systemctl status sshd
active,enable,running vender preset enabled

freeipa # firewall-cmd --list-all
ssh

freeipa # id ldap 			-> user ldap present

freeipa # netstat -an | grep :22
tcp 0:0:0:0:22 listen


system machine
system # id 			->root
		# hostname
		system.example.com
		# man ssh					/etc/ssh/ssh_known_hosts
			/ssh_auto			~/.ssh/known_hosts
		# ssh --help
			-l -> specific username to connect on remote host
system	# ssh -l ldap freeipa.example.com
					or
system # ssh ldap@freeipa.example.com			add identiy in known_host file
			adding fingreprint? yes
			passwored of ldap user

ldap@freeipa $ id		->ldap

ldap@freeipa $ hostname		->freeipa.example.com

ldap@freeipa $ netstat -an | grep :22
			tcp 192.168.0.10:54666 ESTABLISHED
ldap@freeipa $ more /etc/ssh/ssh_host_ecdsa_key.pub				PUBLIC KEY STORE ON FREEIPA SERVER
			PUB_KEY_IPA_SERVER				DOWN KEY SAME AS THIS ONE
ldap@freeipa $ exit

root@system # cd /root/.ssh
	.ssh	# more known_hosts
			freeipa.example.com 192.168.0.254 ecdssa-sha2 key
			HOSTNAME IPADDRESS PUBLIC_KEY_OF_FREE_IPA_SERVER		ITS CALLED Triplet format hostname ip pubkey

	
	
17) ❑ Securely copy /root/process.txt file from system.example.com to /tmp directory on ipaserver.example.com.

• Use the password password for this task.

Command Action/Description

# scp /root/process.txt ipaserver.example.com:/tmp/ 				To transfer files securely with scp
password : ****** Enter password

# man scp 															Manual page for SCP
scp — secure copy (remote file copy program)
scp copies files between hosts on a network.


root@system # scp process.txt ldap@freeipa.example.com:/tmp
must have user ldap user to write permission on /tmp


root@system # scp process.txt root@freeipa.example.com:/tmp
				or
root@system # ssh root@freeipa.example.com

root@freeipa # cd /tmp/
root@freeipa # ls -lrt		last modify file
process.txt			at the end

# exit

root@system # scp process.txt root@freeipa.example.com:/dir			dir	doesn't exit then it will create that file output on dir name file add / at end

root@system # ssh root@freeipa.example.com

root@freeipa # cd /
root@freeipa #  ls -lrt		last modify file
dir 			file at the end output of process file store in dir file
			 # more dir
			 hii scp
root@freeipa # exit

root@system # scp process.txt root@freeipa.example.com:/dir/
give error /dir directory not created




18) ❑ Copy all lines starting with word "Sed" or "sed" from /file.txt and copy to file /root/file.

# man grep 														To display manual page for grep

# egrep ‘^Sed|^sed’ /file.txt > /root/file 						Copy lines starting with Sed or sed

# more /root/file 												To verify if lines are copied

# more /file.txt

# more /file.txt | wc -l					to count the lines in fil
34 ->lines

# man grep

-E	--extnded-regexp		extend regular expratision

-G --basic-regexp			basi regular expration(by default basic uses if we didn't mention)

matching control
		-e pattern			search multiple pattern 	can be uer -e
		-f file  			search pattern from file input line by line can be user -e

		-i --ignore-case		ignore case distinctions
		-v --invert-match		select non-matching lines
		
		-x 	--line-regexp		-x use to match complete line
		
		General Output Control
       -c, --count
              Suppress  normal output; instead print a count of matching lines
              for each input file.  With the -v,  --invert-match  option  (see
              below), count non-matching lines.

		  Output Line Prefix
			-n, --line-number
             		 Prefix each line of output with the 1-based line  number  within its input file.



		Anchoring		^ search sting at begging $ match string at the end
       The caret ^ and the dollar sign $ are meta-characters that respectively
       match the empty string at the beginning and end of a line.


 Basic vs Extended Regular Expressions
       In basic regular expressions the meta-characters ?, +, {, |, (,  and  )
       lose  their  special  meaning; instead use the backslashed versions \?,
       \+, \{, \|, \(, and \).


$ grep -E '^Sed|^sed' demo.txt 					^ search pattern line starting word sed/Sed
sed line1
sed line2
Sed line

-E -> Extended regular expresion
| -> logical or

egrep 	-> extended grep == ($ grep -E)
			
			or
$ egrep '^Sed|^sed' demo.txt 			same output extended grep(egrep) or use grep -E
sed line1
sed line2
Sed line



]$ grep -E 'Sed|sed' demo.txt 
sed line1
sed line2
Sed line
no line sed
no line Sed


$ egrep -n '^Sed|^sed' demo.txt 					print line number matching pattern
2:sed line1
3:sed line2
5:Sed line

			or
$ grep -n '^Sed\|^sed' demo.txt 			use	\ before | to give meaning to |
2:sed line1
3:sed line2
5:Sed line


$ egrep '^Sed|^sed' demo.txt 
sed line1
sed line2
Sed line


solution saving output in file /root/file
$ egrep '^Sed|^sed' demo.txt > /root/file

# more /root/file
sed line1
sed line2
Sed line




19) ❑ Copy all lines not containing sEd or SeD from file /file.txt to /root/invert file.

# egrep -v ‘sEd|SeD’ /file.txt > /root/invert 			 To copy required lines

# more /root/invert										 To verify if lines are copied

# man grep 												 To check manual page for grep

  -v, --invert-match
              Invert the sense of matching, to select non-matching lines.

							
$ egrep -v 'sEd|SeD' demo.txt 											-v invert shows lines not containg sEd SeD 
hii scp	
sed line1
sed line2
extra
Sed line
no line sed
no line Sed


$ egrep -v -c 'sEd|SeD' demo.txt 					7 lines doesn't have this pattern
7

$ egrep -v -n 'sEd|SeD' demo.txt 					show line numbers also whose pattern doesn't match 
1:hii scp
2:sed line1
3:sed line2
4:extra
5:Sed line
6:no line sed
7:no line Sed

solution
$ egrep -v 'sEd|SeD' demo.txt > /root/invert 
[ajay@system Desktop]$ more invert 
hii scp
sed line1
sed line2
extra
Sed line
no line sed
no line Sed



20) ❑ Save all the files(regular files) owned by user lisa in /root/lisa_files.


# find / -user lisa -type f > /root/lisa_files 				To find lisa’s files and copy

# more /root/lisa_files 									To verify results

# man find 													To check manual page for find

-user -> files find by user lisa

-type f -> only find regular file


# man find
/EXPRESSION
/TESTS

	-amin n
              File was last accessed n minutes ago.

	-user uname
              File is owned by user uname (numeric user ID allowed).

 -type f
              File is of type f:
              d      directory
              f      regular file
              
              
# find / -user lisa -type f							->show error messages also

find: ‘/proc/13438/task/13438/fdinfo/6’: No such file or directory
find: ‘/proc/13438/fdinfo/7’: No such file or directory
find: ‘/run/user/1000/gvfs’: Permission denied
/var/spool/mail/lisa
/home/lisa/.bash_logout
/home/lisa/.bash_profile
/home/lisa/.bashrc


-type f ->    for regular file
-user lisa -> seach for specfic user lisa own file

# find / -user lisa -type f 2> /dev/null		2> redirect  errors to /dev/null
/var/spool/mail/lisa
/home/lisa/.bash_logout
/home/lisa/.bash_profile
/home/lisa/.bashrc


# find / -user lisa -type f > /root/lisa_file						redirect only standard output only (>) or 1>
find: ‘/proc/13453/task/13453/fdinfo/7’: No such file or directory
find: ‘/proc/13453/fdinfo/8’: No such file or directory
find: ‘/run/user/1000/gvfs’: Permission denied
					
					or		same 1> or > standard output redirect
					
# find / -user lisa -type f 1> /root/lisa_file
find: ‘/proc/13453/task/13453/fdinfo/7’: No such file or directory
find: ‘/proc/13453/fdinfo/8’: No such file or directory
find: ‘/run/user/1000/gvfs’: Permission denied

# more /root/lisa_file 
/var/spool/mail/lisa
/home/lisa/.bash_logout
/home/lisa/.bash_profile
/home/lisa/.bashrc



21) ❑ Locate the file smb.conf searching through / and save the output in /conf file.

• STDERR should not be saved.

# find / -name smb.conf -type f > /conf 							To find and save file on indicated location

# more /conf 														To verify results


# men find
/search  ->n
-name pattern
              Base  of  file  name 

# find / -name smb.conf -type f
find: ‘/run/user/1000/gvfs’: Permission denied
/etc/samba/smb.conf

# find / -name smb.conf -type f 2> /dev/null 					redirect error
/etc/samba/smb.conf

]# find / -name smb.conf -type f > /home/ajay/Desktop/conf
find: ‘/run/user/1000/gvfs’: Permission denied

$ more /conf 
/etc/samba/smb.conf



22) ❑ Locate the files with extension .txt searching through / and save the output in /text file.

• STDERR should also be copied.


# find / -name “*.txt” -type f > /text 2>&1 					To find files with extension .txt and copy files

# more /text 													To verify results


# find / -name "*.txt" -type f -print					find .txt extension file action is print(default)
/usr/share/libtimezonemap/admin1Codes.txt
/usr/share/libtimezonemap/citiesInfo.txt
/usr/share/libtimezonemap/countryInfo.txt
....

# find / -name "*.txt" -type f -print > /dev/null		  to check error we redirect output and it will show error
find: ‘/run/user/1000/gvfs’: Permission denied

# find / -name "*.txt" -type f -print > /text 2>&1

> ->redirect the output in text file
2>&1 -> redirect error also in /txt file

#more /text



23) ❑ Find all the directories owned by user bob and save the output to /bob_dir.

# find / -user bob -type d > /bob_dir 								To find directories owned by bob and copy them

# more /bob_dir 													To verify results

# find / -user bob -type d -print			(default action is print), (other action -delete all files of bob)
			or
# find / -user bob -type d 							

# find / -user bob -type f -print 			->find regulat file of bob

# find / -user bob -type d > /home/ajay/Desktop/bob_dir					
find: ‘/run/user/1000/gvfs’: Permission denied

# more /home/ajay/Desktop/bob_dir
/home/bob
/home/bob/.mozilla
/home/bob/.mozilla/extensions
/home/bob/.mozilla/plugins



24) ❑ Find all the directories and files owned by user with userid 1002 and save the output to /uid1002.

• STDERR should not be copied.

# find / -uid 1002 > /uid1002 										To find required files and copy them

# more /uid1002 													To verify results

# man find 															To check manual page for find



# id bob
uid=1002(bob) gid=1002(bob) groups=1002(bob)

# find / -uid 1002									output and error both show
/home/bob/.bash_logout
/home/bob/.bash_profile
/home/bob/.bashrc
find: ‘/proc/14473/task/14473/fd/5’: No such file or directory

]# find / -uid 1002 > /home/ajay/Desktop/uid					redirect the output to a uid file and show error
find: ‘/proc/14527/task/14527/fd/5’: No such file or directory

# more /uid
/var/spool/mail/bob
/home/bob
/home/bob/.bash_logout
/home/bob/.bash_profile



24) ❑ Use tar command to archive all contents of /home directory in /root/home.tar file.
tar->tap archive
• Compress the archived files using bzip2.

# tar -cjvf home.tar.bz2 /home 									To archive and compress contents of /home

# ls -l --block-size=MB 									    To verify gain after compression

# man tar 														To check manual page for tar



# man tar
tar -c [-f ARCHIVE] [OPTIONS] [FILE...]
-A, --catenate, --concatenate
              Append archive to the end of another archive.
       -c, --create
              Create a new archive
              
-d, --diff, --compare
              Find differences between archive and file system
--delete
              Delete from the archive.
             
 -r, --append
              Append  files to the end of an archive

-t, --list
              List the contents of an archive.
            
-x, --extract, --get
              Extract  files  from  an archive.
              
  Compression options
	-j, --bzip2
              Filter the archive through bzip2(1).
     -z, --gzip, --gunzip, --ungzip
              Filter the archive through gzip(1)


# tar -cvf hom.tar /home/ajay/Desktop/					first we archive without j option then compreess bzip2
c - creating archive
j - bzip2 compressing archive using bzip3 
v - verbose
f - specific file name .tar.bz2


$ ls -l --block-size=MB						display file block size in mb
-rw-rw-r--. 1 ajay ajay 84MB Nov 25 09:06 home.tar

$ bzip3 home.tar

$ ls -l --block-size=MB						display file block size in mb
-rw-rw-r--. 1 ajay ajay 50MB Nov 25 09:06 home.tar

$ tar -cjvf home.tar.bz2 ../Desktop 					creating and comprssing archiving

$ ls -l --block-size=MB						display file block size in mb
-rw-rw-r--. 1 ajay ajay 50MB Nov 25 09:06 home.tar




25) ❑ Use tar command to extract the contents of home.tar.bz2 to / directory.

• Delete contents of /home directory before extracting the data.

# tar -xvf home.tar.bz2 -C / 						To extract contents of home.tar.bz2 in /

# cd /home 											Navigate to /home directory

# ls -l 											List the contents to verify


home # rm -rf *
~ # tar -xvf /root/home.tar.bz2 -C /					/ extract content on this path

home $ ls -l 				content is back

				or 

# rm -rf *									remove all files
	
# Downloads]$ tar -xvf /home/ajay/Desktop/home.tar.bz2 -C /home/ajay/Desktop/


x- extract all files from archive file
v - verbose 
f - specific archive file name
C - extract content on this path
-C, --directory=DIR
              Change to DIR before performing any operations.  This option  is
              order-sensitive, i.e. it affects all options that follow

# ls
bob  conf  demo.txt  file  home.tar.bz2  invert  lisa_file  text  uid




26) ❑ Use tar command to archive all contents of /etc directory in /root/etc.tar file.

• Compress the archived files using gzip.

# tar -czvf etc.tar.gz /etc 								To archive and compress using gzip

# ls -lrt 													To verify results


z - for gzip 	tar.gz extension
v - verbose 
f - specific archive file name
c - creating archive
-z, --gzip, --gunzip, --ungzip
              Filter the archive through gzip(1).

# tar -cvzf /root/etc.tar.gz /etc

~]# ls -l
-rw-r--r--. 1 root root 6465822 Nov 25 10:02 etc.tar.gz



 Desktop]# tar -cvzf /home/ajay/Desktop/etc.tar.gz /etc

Desktop]# ls -l --block-size=MB etc.tar.gz 
-rw-r--r--. 1 root root 7MB Nov 25 10:05 etc.tar.gz



27) ❑ Use gunzip command to decompress contents of /root/etc.tar.gz.

• Use bunzip2 command to decompress contents of /root/home.tar.bz2.

# gunzip /root/etc.tar.gz 						To decompress contents of /root/etc.tar.gz

# bunzip2 /root/home.tar.bz2 					To decompress contents of /root/home.tar.bz2

# man gunzip 									To check manual page for gunzip

# man bunzip2 									To check manual page for bunzip2


/root/etc.tar.gz					file compress using gzip
/root/home.tar.bz2					file compress using bzip2

# ls
etc.tar.gz  home.tar.bz2 

# gunzip etc.tar.gz 
# ls
etc.tar

# gunzip etc.tar.gz 
# ls
home.tar




# Different Types of Permissions

Permission Type 		File 											Directory

read 			Allows a user only to read the contents of file 	Allows a user to list files under directory

write 			Allows a user to read and write(modify) to file 	Allows a user to create new files under directory and list all files

execute 		Allows a user to execute binary code in the file 	Allows a user to navigate or move to directory






Introducing Important Commands

# chown 							To set user owner and Group ownership of filesystem

# chmod 							To configure permissions using permission mode bits

# setfacl 							To configure ACL's (Access control lists) for additional user Access


# ls -l demo.txt 
-rw-rw-r--. 1 ajay ajay 79 Nov 25 07:29 demo.txt
^ ^  ^  ^ ^		^   ^
| |  |  | |		|	|____________Group Ownership
| |  |  | | 	|_____________user Owner	
| |  |  | |______________dit indicating Selinux contex
| |  |  |_____________three permission mode bits configure access for other users
| |  |____________three permission mod bits to configure group level access
| |_____________three permission bits to configure user access
|____________first bit indicating type of file (-)->regular file , (d) -> for directory




# Symbolic Representation Method

chmod command Usage Examples 		Action

# chmod u+rwx FILE_NAME 		    Provides read/write/execute permissions to user owner on file

# chmod g-w FILE_NAME 				Removes write permission for file at group level without changing other existing permissions

# chmod o+r DIR_NAME 				Provides read permission to others on directory without affecting other permissions

# chmod a+r DIR_NAME 				Provides all system users with read right on directory without affecting other permissions

# chmod ug-x FILE_NAME 				Removes execute permissions on file for user and at group level

# chmod ugo+x FILE_NAME 				Provides execution permissions on file to user, group members and others




#Numeric Mode Representation Method

Permission Set 			read (4)	write (2) 	Execute (1) 		Octal Number
read only				4			0				0				4+0+0=4
write only				0			2				0				0+2+0=2
execution only			0			0				1				0+0+1=1
read, write				4			2				0				4+2+0=6
read, execution			4			0				1				4+0+1=5
write, execution		0			2				1				0+2+1=3
read, write, execution	4			2				1				4+2+1=7



# chmod Examples 			Action

# chmod 0600 FILE_NAME 		Provides read/write permissions on file to user owner and removes all other permissions for group and others if they exist.

# chmod 0001 DIR_NAME 		Provides read permission to others on directory and removes all other permissions for group and user owners if they exist.

# chmod 0766 DIR_NAME 		Provides all permissions to user owner and read/write permissions to group and others.

0766
starting extra 0 is setuid -4, setgid-2 and sticky bit -1

Note : Absolute paths or Relatives paths of files and directories should be used with all commands




# Access Control Lists

❖ Access control lists are to used to configure additional user access.

❖ Access control list Types
• Access ACL’s – To configure access on files and directories
(access acl's not apply on if new file created in directory )

• Default ACL’s – To configure access on directories
(default acl's rules appley also new file created after define acl)



28) ❑ Create directory /test and set the user ownership to lisa and Group ownership to group (Create Group).
• Remove all the permissions for others on this directory.
• Configure full permissions at group level.


# mkdir /test To create directory /test

# groupadd group 				To create group group

# chown lisa:group /test 		To set user and group ownership

# chmod 770 /test 				To configure permissions as per requirements

# chmod g+w,o-rx /test 			Alternate way to configure permissions

# ls -ld /test 					To verify permissions

# man chown 					To check manual page for chown

# man chmod 					To check manual page for chmod


]# mkdir /test

# ls -ld /test
drwxr-xr-x. 2 root root 6 Nov 25 11:26 /test
dir755

# groupadd group

# id lisa
uid=1001(lisa) gid=1001(lisa) groups=1001(lisa)

# man chown
chown - change file owner and group

-c, --changes
              like verbose but report only when a change is made
-v, --verbose
              output a diagnostic for every file processed
  -R, --recursive
              operate on files and directories recursively

# chown lisa:group /test
# chown -v lisa:group /test					verbose
# chown -c lisa:group /test					to see what changes made 


# man chmod
chmod - change file mode bits
       chmod [OPTION]... OCTAL-MODE FILE..
 -c, --changes
              like verbose but report only when a change is made
  -v, --verbose
              output a diagnostic for every file processed
  -R, --recursive
              change files and directories recursively


# chmod -c 770 /test
mode of '/test' changed from 0755 (rwxr-xr-x) to 0770 (rwxrwx---)

# chmod -c 770 /test		nothing change

]# chmod -v 770 /test			verbose
mode of '/test' retained as 0770 (rwxrwx---)

]# ls -ld /test
drwxrwx---. 2 lisa group 6 Nov 25 11:26 /test




29) ❑ Create file named private and directory bob_dir under /acl directory.

• Configure full access for user lisa on this file.
• Configure full access for user bob on directory and all files(and Directories) under this directory.
• bob should have same access on future files and directories under same directory.


# mkdir /acl and touch /acl/private 							To create directory /acl and file under this

# setfacl -m u:lisa:rwx /acl/private 							To provide full access to user lisa

# mkdir /acl/bob_dir 											To create directory

# setfacl -R -m u:bob:rwx /root/bob_dir 						To configure full access for user bob on directory and anything under this

# setfacl -m d:u:bob:rwx /root/bob_dir 							To configure default access control list to apply ACL to future files and directories under this directory

# getfacl /root/private and /root/bob_dir 						To verify results



# mkdir /acl
[root@system Desktop]# touch /acl/private

# ls -l /acl/private 
-rw-r--r--. 1 root root 0 Nov 25 11:54 /acl/private
644

# su - lisa
$ vim /acl/private 
permission read only not allow write in file

$ exit

# setfacl -m u:lisa:rwx /acl/private 
-m -> to modify access control 
-u -> specify user and gice rwx permission

# getfacl /acl/private 
getfacl: Removing leading '/' from absolute path names
# file: acl/private
# owner: root
# group: root
user::rw-
user:lisa:rwx				->user lisa have full access on file
group::r--
mask::rwx
other::r--

# su - lisa
[lisa@system ~]$ vim /acl/private			lisa can now write

# mkdir /acl/bob_dir

[root@system ~]# su - bob
[bob@system ~]$ cd /acl/bob_dir/
[bob@system bob_dir]$ touch file
touch: cannot touch 'file': Permission denied
755		bob don't have write permission 

[bob@system bob_dir]$ ls -ld /acl/bob_dir
drwxr-xr-x. 2 root root 6 Nov 25 12:00 /acl/bob_dir
755		other have read and execute permission on bob_dir

# cd /acl/bob_dir/
[root@system bob_dir]# touch testfile

# cd
# setfacl -R -m u:bob:rwx /acl/bob_dir/

# getfacl /acl/bob_dir/
getfacl: Removing leading '/' from absolute path names
# file: acl/bob_dir/
# owner: root
# group: root
user::rwx
user:bob:rwx					-->user bob have full access on bob_dir
group::r-x
mask::rwx
other::r-x

]# cd /acl/bob_dir/

bob_dir]# ls -l
total 0
-rw-rwxr--+ 1 root root 0 Nov 25 12:04 testfile
+ -> acl apply recurisvely

]# ls -ld /acl/bob_dir/				+ access contrl list apply on dir as well as fille due to -R
drwxrwxr-x+ 2 root root 22 Nov 25 12:04 /acl/bob_dir/


bob_dir]# touch testfille1
[root@system bob_dir]# ls -l			testfile1 did't have + because we didn't apply default acl in bob_dir
total 0
-rw-rwxr--+ 1 root root 0 Nov 25 12:04 testfile
-rw-r--r--. 1 root root 0 Nov 25 12:13 testfille1

# su - bob
[bob@system ~]$ cd /acl/bob_dir/
[bob@system bob_dir]$ touch bob_file					user bob allow to create file
[bob@system bob_dir]$ ls -l 
total 0
-rw-rw-r--. 1 bob  bob  0 Nov 25 12:15 bob_file
-rw-rwxr--+ 1 root root 0 Nov 25 12:04 testfile
-rw-r--r--. 1 root root 0 Nov 25 12:13 testfille1
[bob@system bob_dir]$ exit
logout


# setfacl -m d:u:bob:rwx /acl/bob_dir/
-d->for apply default acl 
-m -> to modify
-u -> for user
[root@system bob_dir]# getfacl /acl/bob_dir/
getfacl: Removing leading '/' from absolute path names
# file: acl/bob_dir/
# owner: root
# group: root
user::rwx
user:bob:rwx
group::r-x
mask::rwx
other::r-x
default:user::rwx
default:user:bob:rwx			->user bob has rwx permission
default:group::r-x
default:mask::rwx
default:other::r-x

	^
	|__default acl apply 


# cd /acl/bob_dir/
[root@system bob_dir]# touch testfile2
[root@system bob_dir]# ls -l		->testfile2 apply default acl(+)
total 0
-rw-rw-r--. 1 bob  bob  0 Nov 25 12:15 bob_file
-rw-rwxr--+ 1 root root 0 Nov 25 12:04 testfile
-rw-rw-r--+ 1 root root 0 Nov 25 12:18 testfile2
-rw-r--r--. 1 root root 0 Nov 25 12:13 testfille1


30) ❑ Create symbolic link for file /test/sym/link/sym_link in /root directory.

# mkdir -p /test/sym/link 					To create directory path

# touch /test/sym/link/sym_link 			To create empty file file on path

# cd /root Navigate 						to root directory

# ln -s /test/sym/link/sym_link 			To create symlink in /root dir


]# mkdir -p /test/sym/link
# touch /test/sym/link/sym_link
# vim /test/sym/link/sym_link 

# man ln
 ln - make links between files
ln [OPTION]... TARGET
       -s, --symbolic
              make symbolic links instead of hard links


# cd /root
/]# ln -s /test/sym/link/sym_link

/# ls -lrt				sym link created
lrwxrwxrwx.   1 root root   23 Nov 25 12:26 sym_link -> /test/sym/link/sym_link

/]# more sym_link 
hii syblink file



31) ❑ Run CPU intensive process on System with nice value of -5 to give more CPU attention than default.
• Adjust the niceness value to 5 so that CPU pays less attention to this process

# nice -n -5 dd if=/dev/zero of=/dev/null 					To start process with nice value -5

# renice -n 5 -p PID 										To adjust nice value

# top 														To verify changes

Note : nice value can be between -20 to 19. Lesser the NICE value, more CPU resources will be used. Higher the nice value, less CPU attention will be given.
-20-19 nice value ->  less nice value more cpu resouces use
higher nice value -> lesser cpu attention or high nice value nice for system less cpu resources
Never run process with nice value of -20 ,CPU will give highest priority and no other jobs will be able to run.

Note:never give a process nice value -20 because no other process will run the cpu give all attention that process


# nice -n -5 dd if=/dev/zero of=/dev/null 
dd command to copy sequence of zeros to null devices always running process
input file =/dev/zero		it can generate sequece of zero
output file = /dev/null 	sequce of zero copy here

reality nothing happen but always a running process until we kill

process default nice value=0 ,priority=20



# nice -n -5 dd if=/dev/zero of=/dev/null 
-n ->to define/specific nice value
-5 -> to give more cpu attention we set nice value -5


/]# dd if=/dev/zero of=/dev/null
^Zctrl+z to interput
[1]+  Stopped                 dd if=/dev/zero of=/dev/null
[root@system /]# bg								to process send in backgroud
[1]+ dd if=/dev/zero of=/dev/null &

# top
   PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND  
 18686 root      20   0    7352    948    876 R  89.7   0.1   2:03.69 dd   

# nice --help
 Niceness values range from -20 (most favorable to the process) to 19 (least favorable to the process)
  -n, --adjustment=N   add integer N to the niceness (default 10)

/]# man nice

/]# nice -n -5 dd if=/dev/zero of=/dev/null
^Z
[2]+  Stopped                 nice -n -5 dd if=/dev/zero of=/dev/null
[root@system /]# bg
[2]+ nice -n -5 dd if=/dev/zero of=/dev/null &

[root@system /]# top
    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND  
  18821 root      15  -5    7352    924    856 R  68.1   0.1  37:34.16 dd  

press r:
PID to renice [default pid = 18821] : enter
Renice PID 18821 to value :  5
  18686 root      20   0    7352    820    748 R  67.2   0.1  37:22.76 dd       
  18821 root      25   5    7352    796    728 R  22.2   0.1  93:15.14 dd   

less cpu usage now and nice value 5
		or
# renice -n 5 -p 18821 
18821 (process ID) old priority -5, new priority 5



32) ❑ Run below command in back ground with nice value of 10.

sleep 3600

# nice -n 10 sleep 3600 & 						To start a process with pre-defined nice value

# top 											To verify results


# nice -n 10 sleep 3600 &					->& to send process in background
[1] 21334

# top 				task not show on top because less cpu usage

# ps aux | grep sleep
root       21334  0.0  0.0   7308   936 pts/3    SN   15:31   0:00 sleep 3600

# top -p 21334			-> using 0% cpu doing nothing

    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND  
  21334 root      30  10    7308    936    868 S   0.0   0.1   0:00.00 sleep   


]# fg							-> forground job
nice -n 10 sleep 3600
ctrl+z						-> to send job in background


# bg						-> this job send to background
[1]+ nice -n 10 sleep 3600 &


33) ❑ Kill all running dd processes to stop forcefully.

# top 											To check running dd processes and PID’s

# kill -9 PID 									To kill process forcefully

# man kill 										Manual page for kill command

# kill --help 									To display help for kill command


# top 
 18821
 18686
 
# kill --help
      -s sig	SIG is a signal name
      -n sig	SIG is a signal number

# kill -9 18821
-9 -> forcefully kill process   SIGKILL


# kill -15 18689
	or
# kill -s KILLTERM  18689
	or
# kill -9 18689
	or
# top 	press k -> select top process-> pid 18689 to 15/sigterm kill : 9
15 -> kill process gracefully so it clean up resources tSIGTERM






34) ❑ Modify kernel parameter vm.swappiness to set the value to 10.

• Changes done should persist after reboot.

Definition :
it represents the percentage of the free memory before activating swap. The lower the value, the less swapping is used, and the more memory pages are kept in physical memory.

Changing the value directly influences the performance of the Linux system. These values are defined:

❖ 0: swap is disable
❖ 1: minimum amount of swapping without disabling it entirely
❖ 10: recommended value to improve performance when sufficient memory exists in a system
❖ 100: aggressive swapping				-> always used swap

10 -> swap activate after 90% phyical memory usage
sysctl utility-> to display different kernal parameter or change different kernel parameter in run time


# sysctl -a | grep swappiness 					To display existing value of parameter

# sysctl -w vm.swappiness=10 					To change value of parameter in run time not persistent

# vim /etc/sysctl.conf							To make changes persistently
vm.swappiness=10
:wq 

# systemctl reboot 			  					To reboot System

# sysctl -a | grep swappiness					To verify results


# man sysctl
sysctl - configure kernel parameters at runtime
       -w, --write		->change kernel parameter in run time
              Use this option when all arguments prescribe a key to be set.

   -a, --all	->display current value of kernel parameters
              Display all values currently available.


# sysctl -a			->list of all kernel parameters

# sysctl -a | more

# sysctl -a | grep vm.swappiness		->current value of swappiness kernel parameters in run time
vm.swappiness = 30

# sysctl -w vm.swappiness=50		->change kernel swappiness parameter in run time
vm.swappiness = 50

]# sysctl -a | grep vm.swappiness			->its not persistent after reboot 
vm.swappiness = 50

# cd /proc						:-proc is kernel interface virtual file system

# cd /sys

# ls -l
total 0
dr-xr-xr-x. 1 root root 0 Nov 25 16:23 abi
dr-xr-xr-x. 1 root root 0 Nov 25 16:25 crypto
dr-xr-xr-x. 1 root root 0 Nov 25 16:23 debug
dr-xr-xr-x. 1 root root 0 Nov 25 16:23 dev
dr-xr-xr-x. 1 root root 0 Nov 24 02:10 fs
dr-xr-xr-x. 1 root root 0 Nov 24 02:10 kernel
dr-xr-xr-x. 1 root root 0 Nov 25 16:23 net
dr-xr-xr-x. 1 root root 0 Nov 25 16:23 sunrpc
dr-xr-xr-x. 1 root root 0 Nov 25 16:23 user
dr-xr-xr-x. 1 root root 0 Nov 25 16:23 vm
[root@system sys]# cd vm
[root@system vm]# ls
swappiness

vm]# more swappiness 		/proc/sys/vm/swappiness
50

another way to change value of swappiness of kernel parameter in run time

# echo 20 > /proc/sys/vm/swappiness 				its run time
[root@system vm]# sysctl -a | grep vm.swappiness
vm.swappiness = 20


# vim /etc/sysctl.
sysctl.conf  sysctl.d/    	-> we can also make .conf extension file  and write kernel parameters in that file
[root@system vm]# vim /etc/sysctl.conf
vm.swappiness=10

# sysctl -a | grep swap			->still old value reboot
vm.swappiness = 20

# systemctl reboot

# sysctl -a | grep swap
vm.swappiness = 10


35) ❑ Modify kernel parameter to disable ipv4 packet forwarding.
• Changes done should persist after reboot.

Definition :
IP forwarding allows an operating system (here on Linux) to forward packets as a router does or more generally to route them through other networks.

# sysctl -a | grep ‘net.ipv4.ip_forward’ 			To display existing value

# sysctl -w net.ipv4.ip_forward=0 					To disable ipv4 packet forwarding in run time

# vim /etc/sysctl.conf								To disable ipv4 packet forwarding persistently
net.ipv4.ip_forward=0
:wq 

# systemctl reboot 										Reboot System

# sysctl -a | grep ‘net.ipv4.ip_forward’ 				To verify results


# sysctl -a | grep 'net.ipv4.ip_forward'
net.ipv4.ip_forward = 1


# sysctl -w net.ipv4.ip_forward=0			disable kernel parameter set to 0
net.ipv4.ip_forward = 0


]# sysctl -a | grep 'net.ipv4.ip_forward'				->ip packet forwarding is disable and set to 0 run time
net.ipv4.ip_forward = 0


# cd /proc/sys/net/
# ls 
net] # cd ipv4
ipv4]# ls					kernel releated to ip forwading
ip_forward  

ipv4]# more ip_forward
0

# cd /etc/sysctl.d/
[root@system sysctl.d]# vim ipv4.conf	   ->to make persitent make .conf file any name and kernel parametr value
net.ipv4.ip_forward=0

# sysctl net.ipv4.ip_forward			->still showing 1 not change value what we set is 0
net.ipv4.ip_forward = 1


# man sysctl.d
 sysctl.d - Configure kernel parameters at boot
      /etc/sysctl.d/*.conf

       /run/sysctl.d/*.conf

       /usr/lib/sysctl.d/*.conf

# systemctl restart systemd-sysctl.service						->restart sysctl service

# sysctl net.ipv4.ip_forward					->after reboot it will back to 1 because of libvertd dameon		
net.ipv4.ip_forward = 0		

->libvertd damenon use to manage differen virtual guest and networking between them or kvm
# systemctl status libvirtd
● libvirtd.service - Virtualization daemon
active

because of libvirtd damemon we can't change value of ip_forward  because it will on the ip_forwarding during reboot . we can disable libvirtd service then we start			 



# Managing tuned Profiles

❖ Tuned is service which monitors the system and optimizes the performance of system for different use cases.
❖ There are pre-defined tuned profiles which are present on path /usr/lib/tuned.

❖ Tuned profiles are designed keeping in mind three parameters linked closely to performance of system.
• High throughput
• Low latency
• Saving power

❖ Predefined profiles are divided into two categories :
• Power-saving profiles
• Performance-boosting profiles

❖ You can customise a tuned profile based on standard profile or can create a completely new profile. Such profiles are always created under directory /etc/tuned. In case you want to create a new profile by adding different settings to pre-defined profile, copy the profile from /usr/lib/tuned to /etc/tuned and add/modify different settings.

❖ If two profiles have same name under /usr/lib/tuned and /etc/tuned , profile under /etc/tuned takes precedence

tuned.conf – Tuned profile definition
❖ Tuned profile is defined in tuned.conf file on directory path /usr/lib/tuned/<profile>/tuned.conf or on path
/etc/tuned/<profile>/tuned.conf.

❖ Profile on path /etc/tuned takes precedence.
❖ We will walk through manual page of tuned.conf for details.


Tuned profiles distributed with RHEL-8
❖ balanced					->it take care powersave as well as performance	
❖ powersave					-> it will save power but compromise performance
❖ throughput-performance		->design to give best possible performance
❖ latency-performance			->design to give best performance
❖ network-latency			--> network profile latency based on few vaiables
❖ network-throughput  -> it based on network thouput profile  based. and few vaiable modify
❖ virtual-guest			-> 
❖ virtual-host

Note : To know more about CPU governers: https://www.kernel.org/doc/Documentation/cpu-freq/governors.txt


Important topics for RHCSA exam
❖ Listing and setting tuned profile
❖ Customizing tuned profile
❖ Merging tuned profiles

Recommended manual Pages
• man tuned
• man tuned-adm
• man tuned.conf
• man tuned-profiles


# man tuned.conf
 tuned.conf - TuneD profile definition
MAIN SECTION
       The main section is called "[main]" and can contain following options:

       include=
              Includes a profile with the given name. This allows you to  base
              a  new profile on an already existing profile. In case there are
              conflicting parameters in the new profile and the base  profile,
              the parameters from the new profile are used.

PLUGINS
       Every other section defines one plugin.
       devices=
              Comma separated list of devices which should be  tuned  by  this
              plugin  instance.   If  you  omit this option, all found devices
              will be tuned.

       replace=1
              If there is conflict between two plugins (meaning two plugins of
              the  same  type  are trying to configure the same devices), then
              the plugin defined as last replaces all options defined  by  the
              previously defined plugin.
[main]
       # Includes plugins defined in "included" profile.
       include=included

       # Define my_sysctl plugin
       [my_sysctl]
       type=sysctl
       # This plugin will replace any sysctl plugin defined in "included" profile
       replace=1
       # 256 KB default performs well experimentally.
       net.core.rmem_default = 262144
       net.core.wmem_default = 262144

       # Define my_script plugin
       # Both scripts (profile.sh from this profile and script from "included"
       # profile) will be run, because if there is no "replace=1" option the
       # default action is merge.
       [my_script]
       type=script
       script=${i:PROFILE_DIR}/profile.sh


# man tuned-profiles
    tuned-profiles - description of basic TuneD profiles
The profiles are stored in subdirectories below /usr/lib/tuned.

 If  you need  to  customize  the  profiles, you can copy them to /etc/tuned and
       modify them as you need. When loading profiles with the same name,  the
       /etc/tuned  takes  precedence. In such case you will not lose your cus‐
       tomized profiles between TuneD updates


       balanced(default profile) -> (it takes care of performance and power saving)
       conservative corner->cpu frequcey is increase when system usage is increase gracefully. also decrease system frequcey if system usage decrease.ALPM(Agressive link power mangerment) protocol fo sata.
              It is the default profile. It provides balanced power saving and
              performance.  At the moment it enables CPU and disk  plugins  of
              TuneD  and it makes sure the conservative governor is active (if
              supported by the current cpufreq driver).  It enables ALPM power
              saving for SATA host adapters and sets the link power management
              policy to #medium_power. It also sets the CPU energy  performance
              bias  to  #normal(equal priroity). It also enables AC97(audio code97) audio power saving or (it
              depends on your system) HDA-Intel power savings with 10  seconds
              timeout.  In case your system contains supported Radeon graphics
              card (with enabled KMS) it configures it to automatic power sav‐
              ing.
              
       powersave -> (disk is ideal then it deactivate the links. if disk is activate then activate link)
              Maximal  power  saving, at the moment it enables USB autosuspend
              (in case environment variable  USB_AUTOSUSPEND  is  set  to  1),
              enables  ALPM  power  saving for SATA host adapters and sets the
              link power management policy to min_power.  It also enables WiFi
              power  saving and makes sure the ondemand governor is active (if
              supported by the current cpufreq driver). It sets the CPU energy
              performance  bias to powersave. It also enables AC97 audio power
              saving or (it depends on your system)  HDA-Intel  power  savings
              (with  10  seconds  timeout).  In case your system contains sup‐
              ported Radeon graphics card (with enabled KMS) it configures  it
              to  automatic power saving. On Asus Eee PCs dynamic Super Hybrid
              Engine is enabled.

		throughput-performance
              Profile for  typical  throughput  performance  tuning.  Disables
              power saving mechanisms and enables sysctl settings that improve
              the throughput performance of your disk and network IO. CPU gov‐
              ernor  is  set to performance and CPU energy performance bias is
              set to performance. Disk readahead values are increased.

       accelerator-performance
              This profile contains the same tuning as the  throughput-perfor‐
              mance  profile.   Additionally, it locks the CPU to low C states
              so that the latency is less than 100us. This improves  the  per‐
              formance of certain accelerators, such as GPUs.

       latency-performance
              Profile  for low latency performance tuning. Disables power sav‐
              ing mechanisms.  CPU governor is set to performance  and  locked
              to the low C states (by PM QoS).  CPU energy performance bias to
              performance.

	virtual-guest
              Profile optimized for virtual guests based on throughput-perfor‐
              mance profile.  It additionally decreases virtual memory swappi‐
              ness and increases dirty_ratio settings.

       virtual-host
              Profile optimized for virtual hosts based on  throughput-perfor‐
              mance  profile.   It additionally enables more aggressive write‐
              back of dirty pages.

       desktop
              Profile  optimized  for  desktops  based on balanced profile. It
              additionally enables scheduler autogroups for better response of
              interactive applications.

       hpc-compute
              Profile optimized for high-performance computing. It is based on
              the latency-performance profile.

       network-throughput
              Profile for throughput  network  tuning.  It  is  based  on  the
              throughput-performance profile. It additionally increases kernel
              network buffers.

       network-latency
              Profile for low latency network  tuning.  It  is  based  on  the
              latency-performance  profile. It additionally disables transpar‐
              ent hugepages, NUMA balancing and tunes  several  other  network
              related sysctl parameters.




# cd /usr/lib/tuned/
[root@system tuned]# ls -l					->each profile has subdirectory
total 16
drwxr-xr-x. 2 root root    24 Nov 23 23:36 accelerator-performance
drwxr-xr-x. 2 root root    24 Nov 23 23:36 balanced
drwxr-xr-x. 2 root root    24 Nov 23 23:36 desktop
-rw-r--r--. 1 root root 15113 Jul 22 00:11 functions
drwxr-xr-x. 2 root root    24 Nov 23 23:36 hpc-compute
drwxr-xr-x. 2 root root    24 Nov 23 23:36 intel-sst
drwxr-xr-x. 2 root root    24 Nov 23 23:36 latency-performance
drwxr-xr-x. 2 root root    24 Nov 23 23:36 network-latency
drwxr-xr-x. 2 root root    24 Nov 23 23:36 network-throughput
drwxr-xr-x. 2 root root    24 Nov 23 23:36 optimize-serial-console
drwxr-xr-x. 2 root root    41 Nov 23 23:36 powersave
drwxr-xr-x. 2 root root    27 Nov 23 23:36 recommend.d
drwxr-xr-x. 2 root root    24 Nov 23 23:36 throughput-performance
drwxr-xr-x. 2 root root    24 Nov 23 23:36 virtual-guest
drwxr-xr-x. 2 root root    24 Nov 23 23:36 virtual-host


]# cd balanced/
[root@system balanced]# ls -l
total 4
-rw-r--r--. 1 root root 373 Jul 22 00:11 tuned.conf

# more tuned.conf
[main]
summary=General non-specialized tuned profile

[modules]
cpufreq_conservative=+r

[cpu]
priority=10
governor=conservative|powersave
energy_perf_bias=normal
[audio]
timeout=10

[video]
radeon_powersave=dpm-balanced, auto

[disk]
# Comma separated list of devices, all devices if commented out.
# devices=sda

[scsi_host]
alpm=medium_power




 balanced]# cd ../powersave/
[root@system powersave]# ls -l
total 8
-rwxr-xr-x. 1 root root 269 Jul 22 00:11 script.sh
-rw-r--r--. 1 root root 557 Jul 22 00:11 tuned.conf
[root@system powersave]# more tuned.conf 
[main]
summary=Optimize for low power consumption

[cpu]
governor=ondemand|powersave
energy_perf_bias=powersave|power

[eeepc_she]

[vm]

[audio]
timeout=10

[video]
radeon_powersave=dpm-battery, auto

[disk]
# Comma separated list of devices, all devices if commented out.
# devices=sda

[net]
# Comma separated list of devices, all devices if commented out.
# devices=eth0

[scsi_host]
alpm=min_power

[sysctl]
vm.laptop_mode=5
vm.dirty_writeback_centisecs=1500
kernel.nmi_watchdog=0

[script]
script=${i:PROFILE_DIR}/script.sh


powersave]# cd ../throughput-performance/
[root@system throughput-performance]# ls -l
total 4
-rw-r--r--. 1 root root 2889 Jul 22 10:40 tuned.conf

throughput-performance]# more tuned.conf 
#
# tuned configuration
#

[main]
summary=Broadly applicable tuning that provides excellent performance across a v
ariety of common server workloads

[variables]
thunderx_cpuinfo_regex=CPU part\s+:\s+(0x0?516)|(0x0?af)|(0x0?a[0-3])|(0x0?b8)\b
amd_cpuinfo_regex=model name\s+:.*\bAMD\b

[cpu]
governor=performance
energy_perf_bias=performance
min_perf_pct=100

# Marvell ThunderX
[vm.thunderx]
type=vm
uname_regex=aarch64
cpuinfo_regex=${thunderx_cpuinfo_regex}
transparent_hugepages=never

[disk]
# The default unit for readahead is KiB.  This can be adjusted to sectors
# by specifying the relevant suffix, eg. (readahead => 8192 s). There must
# be at least one space between the number and suffix (if suffix is specified).
readahead=>4096

[sysctl]
# If a workload mostly uses anonymous memory and it hits this limit, the entire
# working set is buffered for I/O, and any more write buffering would require
# swapping, so it's time to throttle writes until I/O can catch up.  Workloads
# that mostly use file mappings may be able to use even higher values.
#
# The generator of dirty data starts writeback at this percentage (system defaul
t
# is 20%)
vm.dirty_ratio = 40

# Start background writeback (via writeback threads) at this percentage (system
# default is 10%)
vm.dirty_background_ratio = 10

# PID allocation wrap value.  When the kernel's next PID value
# reaches this value, it wraps back to a minimum PID value.
# PIDs of value pid_max or larger are not allocated.
#
# A suggested value for pid_max is 1024 * <# of cpu cores/threads in system>
# e.g., a box with 32 cpus, the default of 32768 is reasonable, for 64 cpus,
# 65536, for 4096 cpus, 4194304 (which is the upper limit possible).
#kernel.pid_max = 65536

# The swappiness parameter controls the tendency of the kernel to move
# processes out of physical memory and onto the swap disk.
# 0 tells the kernel to avoid swapping processes out of physical memory
# for as long as possible
# 100 tells the kernel to aggressively swap processes out of physical memory
# and move them to swap cache
vm.swappiness=10

[scheduler]
# ktune sysctl settings for rhel6 servers, maximizing i/o throughput
#
# Minimal preemption granularity for CPU-bound tasks:
# (default: 1 msec#  (1 + ilog(ncpus)), units: nanoseconds)
sched_min_granularity_ns = 10000000

# SCHED_OTHER wake-up granularity.
# (default: 1 msec#  (1 + ilog(ncpus)), units: nanoseconds)
#
# This option delays the preemption effects of decoupled workloads
# and reduces their over-scheduling. Synchronous workloads will still
# have immediate wakeup/sleep latencies.
sched_wakeup_granularity_ns = 15000000

# Marvell ThunderX
[sysctl.thunderx]
type=sysctl
uname_regex=aarch64
cpuinfo_regex=${thunderx_cpuinfo_regex}
kernel.numa_balancing=0

# AMD
[scheduler.amd]
type=scheduler
uname_regex=x86_64
cpuinfo_regex=${amd_cpuinfo_regex}
sched_migration_cost_ns=5000000



# man tuned-main.conf
daemon=BOOL
              This defines whether TuneD will use daemon or not. It is boolean
              value.   It  can be True or 1 if the daemon is enabled and False
              or 0 if disabled. It  is  not  recommended  to  disable  daemon,
              because many functions will not work without daemon, e.g.  there
              will be no D-Bus, no settings rollback, no hotplug  support,  no
              dynamic tuning, ...

       dynamic_tuning=BOOL
              This  defines whether the dynamic tuning is enabled. It is bool‐
              ean value.  It can be True or 1 if the dynamic tuning is enabled
              and  False or 0 if disabled. In such case only the static tuning
              will be used. Please note if it is enabled  here,  it  is  still
              possible  to  individually  disable  it  in  plugins. It is only
              applicable if daemon is enabled.

       sleep_interval=INT
              TuneD daemon is periodically waken after INT seconds and  checks
              for  events.  By  default  this  is set to 1 second. If you have
              Python 2 interpreter with applied patch from  Red  Hat  Bugzilla
              #917709  this  controls responsiveness time of TuneD to commands
              (i.e. if you request profile switch, it may take up to 1  second
              until  TuneD  reacts).   Increase this number for higher respon‐
              siveness times and more power savings (due to  lower  number  of
              wakeups).  In case you have unpatched Python 2 interpreter, this
              settings will have no visible effect,  because  the  interpreter
              will  poll  20 times per second. It is only applicable if daemon
              is enabled.

       update_interval=INT
              Update interval for dynamic tuning (in seconds). TuneD daemon is
              periodically waken after INT seconds, updates its monitors, cal‐
              culates new tuning parameters for enabled  plugins  and  applies
              the  changes.  Plugins that have disabled dynamic tuning are not
              processed. By default the INT is set to 10 seconds. TuneD daemon
              doesn't periodically wake if dynamic tuning is globally disabled
              (see dynamic_tuning) or this setting set to  0.   This  must  be
              multiple  of  sleep_interval. It is only applicable if daemon is
              enabled.

       recommend_command=BOOL
              This controls whether recommend functionality will be enabled or
              not.  It  is boolean value. It can be True or 1 if the recommend
              command is enabled and False or 0 if disabled. If disabled  rec‐
              ommend  command  will  be  not  available in CLI, TuneD will not
              parse recommend.conf and will return one hardcoded  profile  (by
              default  balanced).  It is only applicable if daemon is enabled.
              By default it's set to True.

       reapply_sysctl=BOOL
              This  controls  whether  to   reapply   sysctl   settings   from
              /run/sysctl.d/*.conf,  /etc/sysctl.d/*.conf and /etc/sysctl.conf
              after TuneD sysctl settings are  applied.  These  are  locations
              supported  by  sysctl  --system,  excluding  those  that contain
              sysctl configuration files provided by system packages.   So  if
              reapply_sysctl  is  set to True or 1, TuneD sysctl settings will
              not override user-provided system sysctl  settings.  If  set  to
              False  or  0,  TuneD sysctl settings will override system sysctl
              settings. By default it's set to True.

       default_instance_priority=INT
              Default instance (unit) priority. By default it's 0.  Each  unit
              has  a priority which is by default preset to the INT. It can be
              overridden in the TuneD profile by the  priority  option.  TuneD
              units  are  processed in order defined by their priorities, i.e.
              unit with the lowest number is processed as the first.



# more /etc/tuned/tuned-main.conf
# Global tuned configuration file.

# Whether to use daemon. Without daemon it just applies tuning. It is
# not recommended, because many functions don't work without daemon,
# e.g. there will be no D-Bus, no rollback of settings, no hotplug,
# no dynamic tuning, ...
daemon = 1

# Dynamicaly tune devices, if disabled only static tuning will be used.
dynamic_tuning = 0

# How long to sleep before checking for events (in seconds)
# higher number means lower overhead but longer response time.
sleep_interval = 1

# Update interval for dynamic tunings (in seconds).
# It must be multiply of the sleep_interval.
update_interval = 10

# Recommend functionality, if disabled "recommend" command will be not
# available in CLI, daemon will not parse recommend.conf but will return
# one hardcoded profile (by default "balanced").
recommend_command = 1

# Whether to reapply sysctl from /run/sysctl.d/, /etc/sysctl.d/ and
# /etc/sysctl.conf.  If enabled, these sysctls will be re-appliead
# after TuneD sysctls are applied, i.e. TuneD sysctls will not
# override user-provided system sysctls.
reapply_sysctl = 1

# Default priority assigned to instances
default_instance_priority = 0

# Udev buffer size
udev_buffer_size = 1MB

# Log file count
log_file_count = 2

# Log file max size
log_file_max_size = 1MB

# Preset system uname string for architecture specific tuning.
# It can be used to force tuning for specific architecture.
# If commented, "uname" will be called to fill its content.
# uname_string = x86_64

# Preset system cpuinfo string for architecture specific tuning.
# It can be used to force tuning for specific architecture.
# If commented, "/proc/cpuinfo" will be read to fill its content.
# cpuinfo_string = Intel




36) ❑ Set #recommended tuned profile on System and verify same after changes are done.

# dnf install tuned 							Installing tuned service

# systemctl enable --now tuned 					Starting and configuring tuned to start at boot

# tuned-adm list 								Listing available tuned profiles

# tuned-adm recommend 							Listing tuned recommend profile

# tuned-adm active 								Listing active profile on System

# tuned-adm profile 							recommended_profile Activating recommended tuned profile

# tuned-adm active 								Verifying active profile after changes

# man tuned-adm 								To check manual page for tuned-adm



# man tuned-adm
       tuned-adm  -  command  line tool for switching between different tuning
       profiles

       verify -Verifies current profile against system settings. Outputs infor‐
              mation  whether  system  settings  match  current profile or not
              (e.g. somebody modified a sysfs/sysctl value by hand).  Detailed
              information  about  what  is checked, what value is set and what
              value is expected can be found in the log.

       recommend
              Recommend a profile suitable for  your  system.  Currently  only
              static  detection  is implemented - it decides according to data
              in /etc/system-release-cpe and virt-what output. The  rules  for
              autodetection  are  defined  in  the  file /usr/lib/tuned/recom‐
              mend.d/50-tuned.conf. The default rules recommend profiles  tar‐
              geted  to  the  best  performance,  or  the  balanced profile if
              unsure.

              The default rules can be overridden by the  user  by  putting  a
              file named recommend.conf into /etc/tuned, or by creating a file
              in    the    /etc/tuned/recommend.d    directory.    The    file
              /etc/tuned/recommend.conf  is  evaluated  first.  If no match is
              found, the files in  the  /etc/tuned/recommend.d  directory  are
              merged  with  the files in the /usr/lib/tuned/recommend.d direc‐
              tory (if there is a file with the same name in both directories,
              the  one  from /etc/tuned/recommend.d is used) and the files are
              evaluated in alphabetical order. The  first  matching  entry  is
              used.

       off    Unload tunings.


# # systemctl status tuned
● tuned.service - Dynamic System Tuning Daemon
   Loaded: loaded (/usr/lib/systemd/system/tuned.service; enabled; vendor prese>
   Active: active (running) 


# tuned-adm list
Available profiles:
- accelerator-performance     - Throughput performance based tuning with disabled higher latency STOP states
- balanced                    - General non-specialized tuned profile
- desktop                     - Optimize for the desktop use-case
- hpc-compute                 - Optimize for HPC compute workloads
- intel-sst                   - Configure for Intel Speed Select Base Frequency
- latency-performance         - Optimize for deterministic performance at the cost of increased power consumption
- network-latency             - Optimize for deterministic performance at the cost of increased power consumption, focused on low latency network performance
- network-throughput          - Optimize for streaming network throughput, generally only necessary on older CPUs or 40G+ networks
- optimize-serial-console     - Optimize for serial console use.
- powersave                   - Optimize for low power consumption
- throughput-performance      - Broadly applicable tuning that provides excellent performance across a variety of common server workloads
- virtual-guest               - Optimize for running inside a virtual guest
- virtual-host                - Optimize for running KVM guests

Current active profile: virtual-guest


# tuned-adm active
Current active profile: virtual-guest

# virt-what				 virt-what - detect if we are running in a virtual machine
virtualbox
kvm

       virtualbox
           This is a VirtualBox guest.
           
       kvm This guest is running on the KVM hypervisor using hardware
           acceleration.



]# virt-what
virtualbox
kvm
[root@system ~]# more /etc/system-release-cpe 				->based on this tuned recommeded tuned profile
cpe:/o:centos:centos:8
[root@system ~]# tuned-adm recommend 
virtual-guest

# more /etc/tuned/recommend.d/50-tuned.conf 
			or
# more /usr/lib/tuned/recommend.d/50-tuned.conf 
# Tuned rules for recommend_profile.
#
# Syntax:
# [PROFILE1]
# KEYWORD11=RE11
# KEYWORD21=RE12
#
# [PROFILE2]
# KEYWORD21=RE21
# KEYWORD22=RE22

# KEYWORD can be:
# virt            - for RE to match output of virt-what
# system          - for RE to match content of /etc/system-release-cpe
# process         - for RE to match running processes. It can have arbitrary
#                   suffix, all process* lines have to match for the PROFILE
#                   to match (i.e. the AND operator)
# /FILE           - for RE to match content of the FILE, e.g.:
#                   '/etc/passwd=.+'. If file doesn't exist, its RE will not
#                   match.
# chassis_type    - for RE to match the chassis type as reported by dmidecode
# syspurpose_role - for RE to match the system role as reported by syspurpose

# All REs for all KEYWORDs have to match for PROFILE to match (i.e. the AND oper
ator).
# If 'virt' or 'system' is not specified, it matches for every string.
# If 'virt' or 'system' is empty, i.e. 'virt=', it matches only empty string (al
ias for '^$').
# If several profiles matched, the first match is taken.
#
# Limitation:
# Each profile can be specified only once, because there cannot be
# multiple sections in the configuration file with the same name
# (ConfigObj limitation).
# If there is a need to specify the profile multiple times, unique
# suffix like ',ANYSTRING' can be used. Everything after the last ','
# is stripped by the parser, e.g.:
#
# [balanced,1]
# /FILE1=RE1
#
# [balanced,2]
# /FILE2=RE2
#
# This will set 'balanced' profile in case there is FILE1 matching RE1 or
# FILE2 matching RE2 or both.

[atomic-host]
virt=
syspurpose_role=.*atomic.*

[atomic-guest]
virt=.+
syspurpose_role=.*atomic.*

[virtual-guest]
virt=.+

[balanced]
syspurpose_role=.*(desktop|workstation).*
chassis_type=.*(Notebook|Laptop|Portable).*

[throughput-performance]




Solution:-
task requirement set recommeded profile as active profile already recommeded profile virtual guest set.
# tuned-adm recommend
virtual-guest

# tuned-adm active
Current active profile: virtual-guest


# tuned-adm profile balanced					-> change virtual-guest to balanced profile
[root@system ~]# tuned-adm active
Current active profile: balanced

# tuned-adm profile balanced
[root@system ~]# tuned-adm active
Current active profile: balanced

# tuned-adm profile virtual-guest
[root@system ~]# tuned-adm active
Current active profile: virtual-guest



37) ❑ Create a custom tuned profile with name myprof based on base profile vitual-guest and below mentioned different settings.

• vm.swappiness=40
• CPU governor = powersave
• Make sure sysctl settings should not be overridden by tuned profile.


# dnf install tuned 								Installing tuned service

# systemctl enable --now tuned 						Starting/enabling tuned servcie

# tuned-adm active 									Listing active tuned profile

# mkdir /etc/tuned/myprof 			  Creating directory under /etc/tuned to create new profile with name myprof



# vim /etc/tuned/myprof/tuned.conf					Creating tuned configuration file for profile myprof
[main]
include = virtual-guest
[cpu]
type = cpu
governor = powersave
[my_sysctl]
type = sysctl
vm.swappiness = 40
:wq 

# tuned-adm profile myprof 							Activating customized tuned profile myprof

# systemctl restart tuned 							Restarting tuned service to make changes effective




# sysctl vm.swappiness				kernel variable of vm.swappiness
vm.swappiness = 10

# systemctl status tuned
● tuned.service - Dynamic System Tuning Daemon
   Loaded: loaded (/usr/lib/systemd/system/tuned.service; enabled; vendor prese>
   Active: active (running) 


# mkdir /etc/tuned/myprof
[root@system ~]# vim /etc/tuned/myprof/tuned.conf
[main]
summary = customized profile
include = virtual-guest

[cpu]
type = cpu
governor = powersave

[my_sysctl]
type = sysctl
vm.swappiness = 40


# systemctl restart tuned						->restart tuned service
[root@system ~]# tuned-adm list
Available profiles:

- myprof                      - customized profile


]# tuned-adm profile myprof 
[root@system ~]# tuned-adm active
Current active profile: myprof


# systemctl restart tuned
[root@system ~]# sysctl vm.swappiness	-> it still 10 not 40 that means swappiness value not overwrite
vm.swappiness = 10


# vim /etc/tuned/tuned-main.conf				->tuned main conf file

reapply_sysctl = 1


set 0 or disable it . so sysctl values overwrite by tuned .

reapply_sysctl = 0



# systemctl restart tuned
# sysctl vm.swappiness 					->it is showing new tuned values instead sysctl 10 value
vm.swappiness = 40

set back to 1	
# vim /etc/tuned/tuned-main.conf		-> now sysctl setting not overwritten by tuned setting
reapply_sysctl = 1
# systemctl restart tuned
# sysctl vm.swappiness 		
vm.swappiness = 10




38) ❑ Activate additional tuned profile powersave to merge with existing profile.
• powersave profile must have high priority under conflicting conditions.

# dnf install tuned 											Installing tuned service

# systemctl enable --now tuned 									Starting/enabling tuned service

# tuned-adm list 												Listing available tuned profile

# tuned-adm active 												Listing active tuned profile

# tuned-adm profile myprof powersave   		 Merging existing active profile with additional profile powersave

# tuned-adm list 												Verifying active profiles

Note: Tuned service try to optimize the system in best way possible by merging profiles under load conditions but in case of conflicting settings , last profile is given precedence.

]# systemctl status tuned
active

# tuned-adm active
Current active profile: myprof

when we merge two profile right hand side profile has more prioriy like below powersave more priority
# tuned-adm profile myprof powersave

in case of conflicting settings , last/right profile is given precedence.

# systemctl restart tuned
# tuned-adm active									->two profile is active
Current active profile: myprof powersave


# tuned-adm profile virtual-guest 					->set back to default
[root@system ~]# systemctl restart tuned
[root@system ~]# tuned-adm active
Current active profile: virtual-guest




#Introducing Default User Settings

❖ When we create user without specifying or using any options with useradd command default user settings are applied to user
account.

❖ Default user settings are applied from below two files:
• /etc/default/useradd - Default values for user account creation
• /etc/login.defs - Defaults about shadow-utils components ,password aging controls, UIDs ,GIDs etc.



]$ more /etc/default/useradd 
# useradd defaults file
GROUP=100	  ->responsible to create same user name groun control by USERGROUPS_ENAB yes in /etc/login.defs file
HOME=/home
INACTIVE=-1		-> password inactivity day disable . if set to 5 then user doesnot change password for 5 days 
EXPIRE=			-> empty never expire user account
SHELL=/bin/bash			->default shell
SKEL=/etc/skel			-> default skelton
CREATE_MAIL_SPOOL=yes		->user mailbox created also when user created


INACTIVE=-1		-> password inactivity day disable . if set to 5 then user doesnot change password for 5 days user account diable permantely


# more /etc/login.defs

# passwd file user PAM(Password Authentication module)/etc/pam.d/system-auth 
MAIL_DIR	/var/spool/mail		->define user mail spoof dir
# Password aging controls:
#
#	PASS_MAX_DAYS	Maximum number of days a password may be used.
#	PASS_MIN_DAYS	Minimum number of days allowed between password changes.
#	PASS_MIN_LEN	Minimum acceptable password length.
#	PASS_WARN_AGE	Number of days warning given before a password expires.
#
PASS_MAX_DAYS	99999
PASS_MIN_DAYS	0
PASS_MIN_LEN	5
PASS_WARN_AGE	7

# Min/max values for automatic uid selection in useradd
#
UID_MIN                  1000
UID_MAX                 60000
# System accounts
SYS_UID_MIN               201
SYS_UID_MAX               999

#
# Min/max values for automatic gid selection in groupadd
#
GID_MIN                  1000
GID_MAX                 60000
# System accounts
SYS_GID_MIN               201
SYS_GID_MAX               999
# If defined, this command is run when removing a user.
# It should remove any at/cron/print jobs etc. owned by
# the user to be removed (passed as the first argument).
#
#USERDEL_CMD	/usr/sbin/userdel_local

# If useradd should create home directories for users by default
# On RH systems, we do. This option is overridden with the -m flag on
# useradd command line.
#
CREATE_HOME	yes				->user hom dir created according in /etc/default/useradd file path HOME=/home

# Default initial "umask" value used by login(1) on non-PAM enabled systems.
# Default "umask" value for pam_umask(8) on PAM enabled systems.
# UMASK is also used by useradd(8) and newusers(8) to set the mode for new
# home directories if HOME_MODE is not set.
# 022 is the default value, but 027, or even 077, could be considered
# for increased privacy. There is no One True Answer here: each sysadmin
# must make up their mind.
UMASK		022

# This enables userdel to remove user groups if no members exist.
#
USERGROUPS_ENAB yes				->if no primary group assign default which 100 in /etc/default/useradd file
# Use SHA512 to encrypt password.
ENCRYPT_METHOD SHA512				->password encreption method by default if not then DEH Use




# Verifying Default User Settings

❖ We will create test user (username - test) with default user settings and we will set password as password .

❖ We will verify default user settings from below three files :
• /etc/passwd - User account information
• /etc/shadow - Secure user account information , Information about password aging and account controls.
• /etc/group - Group account information


/etc/passwd ->7different fields(username,userid,groupid,user homedir,shell)
/etc/shadow -> 9different fields( Information about password aging and account controls)
/etc/group  ->4 different fields

# useradd test 					->create test user
[root@system ~]# passwd test

# more /etc/passwd
test:x:1003:1004::/home/test:/bin/bash

# more /etc/passwd | grep test			7fields
test:x:1003:1004::/home/test:/bin/bash
user:passwod(x not_used):userid:groupid:comment(empty we didn't use):home_dir:shell

# more /etc/shadow | grep test			9fields
test:$6$70d8/Wq6Gg/32tjO$UvOcRg86b4sZ.wXuh7SFxqHr6/dsrO0e8n1F1efSqQYCUj5zk2MifZcSnzQqknFhKF2trlWUNiuX8bOu08lTN/:18957:0:99999:7:::
user:encrpypted password:days since password change(since1jan 1970):min_password_days:max_password_days:passwd_warningdays:password inactiveperiod(diabled-1)empty:accountexpirattion date(empty):notused

# more /etc/group | grep test
test:x:1004:
primaygroupfor user:group password(not used):groupid:empty(list of user belong to this group)

# more /etc/group | grep wheel
wheel:x:10:ajay



# Overriding Default User Settings
To override default user settings we will use useradd, passwd and chage with different options.

# useradd 												To create user account
# passwd 												To set password for user account
# chage 												To display/configure password aging and account controls

# man useradd 											To check manual page for useradd
# man passwd 											To check manual page for passwd
# man chage 											To check manual page for chage


# useradd -D			->display default useradd parameters
GROUP=100
# man useradd 
useradd - create a new user or update default new user information

useradd [options] LOGIN

       useradd -D

       useradd -D [options]


Options
 -b, --base-dir BASE_DIR		->to overwrite default home dir
		   If this option is not specified, useradd will use the base
           directory specified by the HOME variable in /etc/default/useradd,
           or /home by default

-c, --comment COMMENT
           Any text string. It is generally a short description of the login,
           and is currently used as the field for the user's full name.
-d, --home-dir HOME_DIR				->used to create non default home dir can't used with -b option

       -D, --defaults		->see default values from /etc/default/useradd and modify default values
           See below, the subsection "Changing the default values".

-e, --expiredate EXPIRE_DATE			->provide user expire date
           The date on which the user account will be disabled. The date is
           specified in the format YYYY-MM-DD.

       -f, --inactive INACTIVE		->password inactivity period
           The number of days after a password expires until the account is
           permanently disabled. A value of 0 disables the account as soon as
           the password has expired, and a value of -1 disables the feature.

           If not specified, useradd will use the default inactivity period
           specified by the INACTIVE variable in /etc/default/useradd, or -1
           by default.


       -g, --gid GROUP			->to create non default primay group
           The group name or number of the user's initial login group. The
           group name must exist. A group number must refer to an already
           existing group.

           If not specified, the behavior of useradd will depend on the
           USERGROUPS_ENAB variable in /etc/login.defs. yes menas same group name as user_name


      -G, --groups GROUP1[,GROUP2,...[,GROUPN]]]
           A list of supplementary groups which the user is also a member of.
           Each group is separated from the next by a comma, with no
           intervening whitespace. The groups are subject to the same
           restrictions as the group given with the -g option. The default is
           for the user to belong only to the initial group.

       -h, --help
           Display help message and exit.

       -k, --skel SKEL_DIR
           The skeleton directory, which contains files and directories to be
           copied in the user's home directory, when the home directory is
           created by useradd.

           This option is only valid if the -m (or --create-home) option is
           specified.

           If this option is not set, the skeleton directory is defined by the
           SKEL variable in /etc/default/useradd or, by default, /etc/skel.

           If possible, the ACLs and extended attributes are copied


       -K, --key KEY=VALUE
           Overrides /etc/login.defs defaults (UID_MIN, UID_MAX, UMASK,
           PASS_MAX_DAYS and others).

           Example: -K PASS_MAX_DAYS=-1 can be used when creating system
           account to turn off password aging, even though system account has
           no password at all. Multiple -K options can be specified, e.g.:
           -K UID_MIN=100  -K UID_MAX=499

       -l, --no-log-init
           Do not add the user to the lastlog and faillog databases.

           By default, the user's entries in the lastlog and faillog databases
           are reset to avoid reusing the entry from a previously deleted
           user

       -m, --create-home
           Create the user's home directory if it does not exist
            By default, if this option is not specified and CREATE_HOME is not
           enabled, no home directories are created. in login.defs
           
      -M, --no-create-home
           Do no create the user's home directory, even if the system wide
           setting from /etc/login.defs (CREATE_HOME) is set to yes.
         
       -N, --no-user-group
           Do not create a group with the same name as the user, but add the
           user to the group specified by the -g option or by the GROUP
           variable in /etc/default/useradd.

           The default behavior (if the -g, -N, and -U options are not
           specified) is defined by the USERGROUPS_ENAB variable in
           /etc/login.defs.

       -o, --non-unique
           Allow the creation of a user account with a duplicate (non-unique)
           UID.

           This option is only valid in combination with the -u option.

       -p, --password PASSWORD
           The encrypted password, as returned by crypt(3). The default is to
           disable the password.

           Note: This option is not recommended because the password (or
           encrypted password) will be visible by users listing the processes.

           You should make sure the password respects the system's password
           policy.


       -r, --system
           Create a system account.
 			Note that useradd will not create a home directory for such a user,
           regardless of the default setting in /etc/login.defs (CREATE_HOME).
           You have to specify the -m options if you want a home directory for
           a system account to be created.

       -s, --shell SHELL
           The name of the user's login shell. The default is to leave this
           field blank, which causes the system to select the default login
           shell specified by the SHELL variable in /etc/default/useradd, or
           an empty string by default.

       -u, --uid UID
           The numerical value of the user's ID. This value must be unique,
           unless the -o option is used. The value must be non-negative. The
           default is to use the smallest ID value greater than or equal to
           UID_MIN and greater than every other user.

           See also the -r option and the UID_MAX description.
       -U, --user-group
           Create a group with the same name as the user, and add the user to
           this group.

           The default behavior (if the -g, -N, and -U options are not
           specified) is defined by the USERGROUPS_ENAB variable in
           /etc/login.defs.



   Changing the default values  useradd -D [options]

       When invoked with only the -D option, useradd will display the current
       default values. When invoked with -D plus other options, useradd will
       update the default values for the specified options. Valid
       default-changing options are

      -b, --base-dir BASE_DIR
           The path prefix for a new user's home directory. The user's name
           will be affixed to the end of BASE_DIR to form the new user's home
           directory name, if the -d option is not used when creating a new
           account.

           This option sets the HOME variable in /etc/default/useradd.

       -e, --expiredate EXPIRE_DATE
           The date on which the user account is disabled.

           This option sets the EXPIRE variable in /etc/default/useradd.

       -f, --inactive INACTIVE
           The number of days after a password has expired before the account
           will be disabled.

           This option sets the INACTIVE variable in /etc/default/useradd.

       -g, --gid GROUP
           The group name or ID for a new user's initial group (when the
           -N/--no-user-group is used or when the USERGROUPS_ENAB variable is
           set to no in /etc/login.defs). The named group must exist, and a
           numerical group ID must have an existing entry.

           This option sets the GROUP variable in /etc/default/useradd.
   
       -s, --shell SHELL
           The name of a new user's login shell.

           This option sets the SHELL variable in /etc/default/useradd.


# useradd --help
Usage: useradd [options] LOGIN
       useradd -D
       useradd -D [options]

Options:
  -b, --base-dir BASE_DIR       base directory for the home directory of the
                                new account
  -c, --comment COMMENT         GECOS field of the new account
  -d, --home-dir HOME_DIR       home directory of the new account
  -D, --defaults                print or change default useradd configuration
  -e, --expiredate EXPIRE_DATE  expiration date of the new account
  -f, --inactive INACTIVE       password inactivity period of the new account
  -g, --gid GROUP               name or ID of the primary group of the new
                                account
  -G, --groups GROUPS           list of supplementary groups of the new
                                account
  -h, --help                    display this help message and exit
  -k, --skel SKEL_DIR           use this alternative skeleton directory
  -K, --key KEY=VALUE           override /etc/login.defs defaults
  -l, --no-log-init             do not add the user to the lastlog and
                                faillog databases
  -m, --create-home             create the user's home directory
  -M, --no-create-home          do not create the user's home directory
  -N, --no-user-group           do not create a group with the same name as
                                the user
  -o, --non-unique              allow to create users with duplicate
                                (non-unique) UID
  -p, --password PASSWORD       encrypted password of the new account
  -r, --system                  create a system account
  -R, --root CHROOT_DIR         directory to chroot into
  -P, --prefix PREFIX_DIR       prefix directory where are located the /etc/* files
  -s, --shell SHELL             login shell of the new account
  -u, --uid UID                 user ID of the new account
  -U, --user-group              create a group with the same name as the user
  -Z, --selinux-user SEUSER     use a specific SEUSER for the SELinux user mapping


# man passwd
       passwd - update user's authentication tokens
 passwd  [-k]  [-l] [-u [-f]] [-d] [-e] [-n mindays] [-x maxdays] [-w warndays] [-i inactivedays] [-S] [--stdin] [-?] [--usage] [username]


      -l, --lock
              This option is used to lock the password of specified account and it is available to root
              only. The locking is performed by rendering the encrypted password into an invalid string
              (by  prefixing the encrypted string with an !). Note that the account is not fully locked
              - the user can still log in by other means of authentication such as the ssh  public  key
              authentication. Use #chage -E 0 user command instead for full account locking.

       -u, --unlock
              This is the reverse of the -l option - it will unlock the account  password  by  removing
              the  !  prefix.  This  option is available to root only. By default passwd will refuse to
              create a passwordless account (it will not unlock an account that has only "!" as a pass‐
              word). The force option -f will override this protection.

       -d, --delete
              This  is  a  quick way to delete a password for an account. It will set the named account
              passwordless. Available to root only.

              Note that if the password was locked, this implicitly removes the password lock as well.

       -e, --expire
              This is a quick way to expire a password for an account.  The  user  will  be  forced  to
              change the password during the next login attempt.  Available to root only.

       -f, --force
              Force the specified operation.

       -n, --minimum DAYS
              This  will  set  the  minimum  password lifetime, in days, if the user's account supports
              password lifetimes.  Available to root only.

     -x, --maximum DAYS
              This will set the maximum password lifetime, in days,  if  the  user's  account  supports
              password lifetimes.  Available to root only.

       -w, --warning DAYS
              This  will  set the number of days in advance the user will begin receiving warnings that
              her password will expire, if the user's account supports password  lifetimes.   Available
              to root only.

       -i, --inactive DAYS
              This  will  set  the  number  of days which will pass before an expired password for this
              account will be taken to mean that the account is inactive and should be disabled, if the
              user's account supports password lifetimes.  Available to root only.

       -S, --status
              This  will  output  a  short  information  about  the  status of the password for a given
              account. The status information consists of 7 fields. The first field is the user's login
              name.  The  second field indicates if the user account has a locked password (LK), has no
              password (NP), or has a usable password (PS). The third field gives the date of the  last
              password  change.  The next four fields are the minimum age, maximum age, warning period,
              and inactivity period for the password. These ages are expressed in days.


# passwd --help
Usage: passwd [OPTION...] <accountName>
  -k, --keep-tokens       keep non-expired authentication tokens
  -d, --delete            delete the password for the named account (root only); also removes password
                          lock if any
  -l, --lock              lock the password for the named account (root only)
  -u, --unlock            unlock the password for the named account (root only)
  -e, --expire            expire the password for the named account (root only)
  -f, --force             force operation
  -x, --maximum=DAYS      maximum password lifetime (root only)
  -n, --minimum=DAYS      minimum password lifetime (root only)
  -w, --warning=DAYS      number of days warning users receives before password expiration (root only)
  -i, --inactive=DAYS     number of days after password expiration when an account becomes disabled
                          (root only)
  -S, --status            report password status on the named account (root only)
      --stdin             read new tokens from stdin (root only)



# man chage
       chage - change user password expiry information
		chage [options] LOGIN

-d, --lastday LAST_DAY	->to give user a date to change password set expire date.0 means next login change passwd
           Set the number of days since January 1st, 1970 when the password was last changed. The date
           may also be expressed in the format YYYY-MM-DD (or the format more commonly used in your
           area). If the LAST_DAY is set to 0 the user is forced to change his password on the next log
           on.

-E, --expiredate EXPIRE_DATE   ->set expire date on account -1 never expire. 0 means account fully locked
           Set the date or number of days since January 1, 1970 on which the user's account will no
           longer be accessible. The date may also be expressed in the format YYYY-MM-DD (or the format
           more commonly used in your area). A user whose account is locked must contact the system
           administrator before being able to use the system again.

           For example the following can be used to set an account to expire in 180 days:

                        chage -E $(date -d +180days +%Y-%m-%d)

           Passing the number -1 as the EXPIRE_DATE will remove an account expiration date.


       -I, --inactive INACTIVE
           Set the number of days of inactivity after a password has expired before the account is
           locked. The INACTIVE option is the number of days of inactivity. A user whose account is
           locked must contact the system administrator before being able to use the system again.

           Passing the number -1 as the INACTIVE will remove an account's inactivity.

       -l, --list
           Show account aging information.

      -M, --maxdays MAX_DAYS
           Set the maximum number of days during which a password is valid. When MAX_DAYS plus LAST_DAY
           is less than the current day, the user will be required to change their password before
           being able to use their account. This occurrence can be planned for in advance by use of the
           -W option, which provides the user with advance warning.

           Passing the number -1 as MAX_DAYS will remove checking a password's validity.

       -W, --warndays WARN_DAYS
           Set the number of days of warning before a password change is required. The WARN_DAYS option
           is the number of days prior to the password expiring that a user will be warned their
           password is about to expire.
         

# chage --help
Usage: chage [options] LOGIN

Options:
  -d, --lastday LAST_DAY        set date of last password change to LAST_DAY
  -E, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE
  -h, --help                    display this help message and exit
  -I, --inactive INACTIVE       set password inactive after expiration
                                to INACTIVE
  -l, --list                    show account aging information
  -m, --mindays MIN_DAYS        set minimum number of days before password
                                change to MIN_DAYS
  -M, --maxdays MAX_DAYS        set maximum number of days before password
                                change to MAX_DAYS
  -R, --root CHROOT_DIR         directory to chroot into
  -W, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS


#chage,passwd,useradd using 3 command same action can do password age
#chage without option interactive mode.


39) ❑ Configure System(system.example.com) to use UID_MIN and GID_MIN as 5000 by default.

• Create one test user (username) test1 and verify that default selected UID is 5000=+.
• Make user account password less.

# vim /etc/login.defs		 	  					Configure System to use Minimum UserID and GroupID as 5000
UID_MIN 5000
GID_MIN 5000
:wq 

# useradd test1 										Create test1 user with default settings

# more /etc/passwd | grep test1 						Verify default UID assigned is 5000=+

# passwd -u -f test1 									To make user account password less

# su - test1 											Try user login as non-root(normal) user, user should be able to login without password


# useradd test1
# id test1
uid=1004(test1) gid=1005(test1) groups=1005(test1)
# userdel -r test1			->-r to delete user home dir,mails spools with user deletion




# vim /etc/login.defs 
set 
UID_MIN 5000
GID_MIN 5000
]# useradd test1			->userid now assign 5000,gid=5000
# id test1
uid=5000(test1) gid=5000(test1) groups=5000(test1)

# more /etc/passwd | grep test
test1:x:5000:5000::/home/test1:/bin/bash


]# passwd -S test1			->status of password for user test1
test1 LK 2021-11-27 0 99999 7 -1 (Password locked.)
LK->Password Locked
user:status:dateof last password change:minimum password lifetime:max password lifetime: password warning period:password inactivity period(-1 disable in useradd file)


# passwd --help
Usage: passwd [OPTION...] <accountName>
  -k, --keep-tokens       keep non-expired authentication tokens
  -d, --delete            delete the password for the named account (root only); also removes password
                          lock if any
  -l, --lock              lock the password for the named account (root only)
  -u, --unlock            unlock the password for the named account (root only)
  -e, --expire            expire the password for the named account (root only)
  -f, --force             force operation
  -x, --maximum=DAYS      maximum password lifetime (root only)
  -n, --minimum=DAYS      minimum password lifetime (root only)
  -w, --warning=DAYS      number of days warning users receives before password expiration (root only)
  -i, --inactive=DAYS     number of days after password expiration when an account becomes disabled
                          (root only)
  -S, --status            report password status on the named account (root only)
      --stdin             read new tokens from stdin (root only)

make account password less
# passwd -u test1					->unlock password which is unsafe to make password less account
Unlocking password for user test1.
passwd: Warning: unlocked password would be empty.
passwd: Unsafe operation (use -f to force)


# passwd -u -f test1			->force to make account password less
Unlocking password for user test1.
passwd: Success

-u->to unlock account password
-f-> to force account

# passwd -S test1
test1 NP 2021-11-27 0 99999 7 -1 (Empty password.)
NP->No Password empty password
account password less

# su - lisa
[lisa@system ~]$ su - test1			->not asked password when login from normal user account is password less
[test1@system ~]$ 
]$ id
uid=5000(test1) gid=5000(test1) groups=5000(test1) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023


40) ❑ Modify default password inactivity period (INACTIVE variable) on System to 5 days.

# useradd -D 							To display useradd defaults
# useradd -D -f 5 						To modify default password inactivity period (INACTIVE=5) to 5
# useradd –D 							To verify results

# useradd -D ->INACTIVE=-1 means password INACTIVE period is disable set 5days
GROUP=100
HOME=/home
INACTIVE=-1
EXPIRE=
SHELL=/bin/bash
SKEL=/etc/skel
CREATE_MAIL_SPOOL=yes


# useradd -D -f 5
-f ->set inactive  period
 -f, --inactive INACTIVE       password inactivity period of the new account

# useradd -D ->INACTIVE=5 means password INACTIVE period is set 5days
GROUP=100
HOME=/home
INACTIVE=5
EXPIRE=
SHELL=/bin/bash
SKEL=/etc/skel
CREATE_MAIL_SPOOL=yes


41) ❑ Create a user with name lara with password access.
• Use UID 6000 for this user.
• User should have non-interactive shell.

# useradd -u 6000 -s /sbin/nologin lara 			 To create user with UID 6000 and non-interactive login shell

# passwd lara 											To set the password for user lara

# more /etc/passwd | grep lara 							To verify user account information

# more /etc/group | grep lara 							To verify Group information



# useradd --help
  -s, --shell SHELL             login shell of the new account
  -u, --uid UID                 user ID of the new account
  -U, --user-group              create a group with the same name as the user


# useradd -u 6000 -s /sbin/nologin lara
-u ->create user with specifi uid 6000
-s-> create user with specific shell /sbin/nologin for non interactive shell

]# more /etc/passwd | grep lara
lara:x:6000:6000::/home/lara:/sbin/nologin
# passwd lara
access password
# su - lara		->non interactive shell user shoud not login
This account is currently not available.



42) ❑ Create a user riya with home directory /riya/private and set password access.

• At first login, she should be forced to change her password.
• Password should be set to expire every month.


# mkdir -p /riya/private 							To create non-default home directory

# useradd -d /riya/private riya 					To create user with non-default home directory /riya/private

# chown riya:riya /riya/private 					To set User and Group Owner as riya on this directory

# chmod 700 /riya/private 							To restrict the access to riya for her home directory

# passwd riya 										To set the password for user riya

# chage riya 								To set the maximum password age and password change after first login



# more /etc/passwd 									To verifying user account information

# more /etc/shadow 							To verify configured password aging controls, account controls etc

# more /etc/group 							To verify group(s) related information



# useradd -d /riya/private riya			->create dir 
useradd: cannot create directory /riya/private

# useradd -d /riya/private riya 
-d ->non default home_dir for user,dir must create first,and set user,group owner to riya,700 full access to riya
 -d, --home-dir HOME_DIR       home directory of the new account


# chown riya:riya /riya/private  ->set user and group ownership to riya
# ls -ld /riya/private/
drwxr-xr-x. 2 riya riya 6 Nov 27 07:24 /riya/private/
755


# chmod 700 /riya/private/
# ls -ld /riya/private/
drwx------. 2 riya riya 6 Nov 27 07:51 /riya/private/

# chage -l riya
Last password change					: Nov 27, 2021
Password expires					: never
Password inactive					: never
Account expires						: never
Minimum number of days between password change		: 0
Maximum number of days between password change		: 99999
Number of days of warning before password expires	: 7

Note: set password first to set password aging if you don't set password some info can't consider
# passwd riya

# chage riya
Changing the aging information for riya
Enter the new value, or press ENTER for the default

	Minimum Password Age [0]: 
	Maximum Password Age [99999]: 30
	Last Password Change (YYYY-MM-DD) [2021-11-27]: 0   
	Password Expiration Warning [7]: 
	Password Inactive [-1]: 
	Account Expiration Date (YYYY-MM-DD) [-1]:


# chage -l riya
Last password change					: password must be changed
Password expires					: password must be changed
Password inactive					: password must be changed
Account expires						: never
Minimum number of days between password change		: 0
Maximum number of days between password change		: 30
Number of days of warning before password expires	: 7


password expires depens 2->>Last password change,Maximum number of days between password change
$ su - riya
Password: 
You are required to change your password immediately (administrator enforced)
Current password: 
New password: 
BAD PASSWORD: The password is the same as the old one
su: Authentication token manipulation error

# more /etc/passwd | grep riya
riya:x:1003:1004::/riya/private:/bin/bash
# more /etc/shadow | grep riya  ->maximum password age is 30,last password age is set to 0
riya:0:0:0:30:7:::

 


43) ❑ Create a group named rhcsa and assign this group to user lara as secondary group.
• GID 5555 should be used.

# groupadd -g 5555 rhcsa 							To Create group sys with GID 5555

# usermod -aG rhcsa lara 							To assign rhcsa group to user lara as supplementary group

# more /etc/group 									To verify group related information


# groupadd --help
  -g, --gid GID                 use GID for the new group

# groupadd -g 5555 rhcsa
# more /etc/group | grep rhcsa  ->no user assign to this group
rhcsa:x:5555:


# id lara		->no seconday group only primary group
uid=1004(lara) gid=1005(lara) groups=1005(lara)

# usermod --help
  -G, --groups GROUPS           new list of supplementary GROUPS

 -a, --append                  append the user to the supplemental GROUPS
                                mentioned by the -G option without removing
                                the user from other groups

# usermod -aG rhcsa lara
	or
# useradd -G rhcsa -a lara

]# more /etc/group | grep rhcsa
rhcsa:x:5555:lara
]# id lara
uid=1004(lara) gid=1005(lara) groups=1005(lara),5555(rhcsa)
	
	

44) ❑ Create user harry and set password as access.
• Account should expire on 31 st Dec current year.
• Password should expire every 7 days.
• Set password expiry warning to 2 days.

# useradd harry 								To create user harry with default settings

# passwd harry 									To set the password for user harry

# chage harry 				 To set the maximum password age ,password expiry warning and account expiration date


# more /etc/passwd | grep harry 				Verifying user account information

# more /etc/shadow | grep harry 			   	Verifying configured password aging controls and account controls



# useradd harry
# passwd harry

# chage harry
Changing the aging information for harry
Enter the new value, or press ENTER for the default

	Minimum Password Age [0]: 
	Maximum Password Age [99999]: 7
	Last Password Change (YYYY-MM-DD) [2021-11-27]: 
	Password Expiration Warning [7]: 2
	Password Inactive [-1]: 
	Account Expiration Date (YYYY-MM-DD) [-1]: 2021-12-31
	
	
password expire/change set to 7
password expire waring 2day
account expire date 31 dec 2021

[root@system /]# chage -l harry
Last password change				: Nov 27, 2021
Password expires					: Dec 04, 2021
Password inactive					: never
Account expires						: Dec 31, 2021
Minimum number of days between password change		: 0
Maximum number of days between password change		: 7
Number of days of warning before password expires	: 2

# more /etc/shadow | grep harry
harry:$6$6jayKu2Jb0:18958:0:7:2::18992:


45) ❑ Create the directory /dir and set the group and user ownership to rhcsa and lara respectively.
• Give read only access to group rhcsa and rwx access to lara.

# mkdir /dir 									To create directory /dir

# chown lara:rhcsa /dir 						To set user and group ownership

# ls -ld /dir 									To verify permissions


# mkdir /dir
# ls -ld /dir
drwxr-xr-x. 2 root root 6 Nov 27 08:35 /dir
755

# id lara
uid=1004(lara) gid=1005(lara) groups=1005(lara),5555(rhcsa)
# more /etc/group | grep rhcsa
rhcsa:x:5555:lara

# chown lara:rhcsa /dir
# ls -ld /dir
drwxr-xr-x. 2 lara rhcsa 6 Nov 27 08:35 /dir
755

Note: user rwx ,read access means no access. on group to set to read permission on dir must have execution permission to navigate in dir. 
so we need to set x with r(r-x) on group which already set(r-x)



46) ❑ Configure System (system.example.com) as IPA client to use LDAP services configured on IPA Server with Free IPA Server
solution.

• Use user admin and password password to enroll System.
• ldap users should be able to login on System.

# dnf install ipa-client 						To install package for ipa client
# ipa-client-install 							Configuring System as IPA Client
# su - ldap 									Verify ldap user login


# id ldap
id: ‘ldap’: no such user
]# systemctl status sssd
● sssd.service - System Security Services Daemon
   Loaded: loaded (/usr/lib/systemd/system/sssd.service; enabled; vendor preset: enabled)
   Active: active (running)
   
   
# dnf install ipa-client 
# ipa-client-install
configrue chrony ntp client : no
	but if not then say yes
		provide host server sources : feeipa.example.com
		ip address of chrony source server: 192.168.0.254
		confirm	:	yes

userauthorize to enrll computer: admin
password for admin@EXAMPLE.COM: password
 ipa-client-install command was successful


# more /etc/sssd/sssd.conf 
[domain/example.com]

id_provider = ipa
ipa_server = _srv_, freeipa.example.com
ipa_domain = example.com
ipa_hostname = system.example.com
auth_provider = ipa
chpass_provider = ipa
access_provider = ipa
cache_credentials = True
ldap_tls_cacert = /etc/ipa/ca.crt
krb5_store_password_if_offline = True
[sssd]
services = nss, pam, ssh, sudo

domains = example.com
[nss]
homedir_substring = /home

[pam]

[sudo]

[autofs]

[ssh]

[pac]

[ifp]

[secrets]

[session_recording]


# more /etc/openldap/ldap.conf
# File modified by ipa-client-install

# We do not want to break your existing configuration, hence:
#   URI, BASE, TLS_CACERT and SASL_MECH
#   have been added if they were not set.
#   In case any of them were set, a comment has been inserted and
#   "# CONF_NAME modified by IPA" added to the line above.
# To use IPA server with openLDAP tools, please comment out your
# existing configuration for these options and uncomment the
# corresponding lines generated by IPA.


#
# LDAP Defaults
#

# See ldap.conf(5) for details
# This file should be world readable but not world writable.

#BASE	dc=example,dc=com
#URI	ldap://ldap.example.com ldap://ldap-master.example.com:666

#SIZELIMIT	12
#TIMELIMIT	15
#DEREF		never

# When no CA certificates are specified the Shared System Certificates
# are in use. In order to have these available along with the ones specified
# by TLS_CACERTDIR one has to include them explicitly:
#TLS_CACERT	/etc/pki/tls/cert.pem

# System-wide Crypto Policies provide up to date cipher suite which should
# be used unless one needs a finer grinded selection of ciphers. Hence, the
# PROFILE=SYSTEM value represents the default behavior which is in place
# when no explicit setting is used. (see openssl-ciphers(1) for more info)
#TLS_CIPHER_SUITE PROFILE=SYSTEM

# Turning this off breaks GSSAPI used with krb5 when rdns = false
SASL_NOCANON	on

URI ldaps://freeipa.example.com
BASE dc=example,dc=com
TLS_CACERT /etc/ipa/ca.crt
SASL_MECH GSSAPI


]$ id ldap			->now we can use ldap user on system machine
uid=550400001(ldap) gid=550400001(ldap) groups=550400001(ldap)


# su - ldap
Last login: Wed Dec  1 17:01:19 IST 2021 on pts/1
su: warning: cannot change directory to /home/ldapuser/ldap: No such file or directory


47) ❑ Configure system.example.com to automount home directory of LDAP user ldap when logged in.

• Home directory of LDAP user is /home/ldapuser/ldap.
• Home directory is shared by ipaserver.example.com through NFS export
• LDAP user should get his home directory when logged in.


# dnf install autofs To install packages required for autofs

# systemctl start autofs 							To start autofs service
# systemctl enable autofs 							Configuring to start service at boot

# vim /etc/auto.master								To define master automounter map
/home/ldapuser
/etc/auto.ldap
:wq 

# vim /etc/auto.ldap
ldap
ipaserver.example.com:/home/ldapuser/ldap
:wq

# systemctl restart autofs 							Restart autofs service
# su - ldap 										Switch user to ldap
# pwd 											Current directory should be ldap user’s home directory

]# dnf grouplist hidden | grep Network
   Network File System Client

# dnf grouplist hidden			Check NFS Install or not
  Network File System Client

# dnf groupinstall "Network File System Client"

# man showmount
	showmount - show mount information for an NFS server
	       -e or --exports
              Show the NFS server's export list.

# dnf install autofs

# showmount -e freeipa.example.com
Export list for freeipa.example.com:
/ldap/home     *
/home/ldapuser *			->we need this base location of ldap user
/nfsshare      *

# vim /etc/auto.master
/home/ldapuser  /etc/auto.ldap

# vim /etc/auto.ldap
ldap freeipa.example.com:/home/ldapuser/ldap



# systemctl start autofs
[root@system home]# systemctl enable autofs
# systemctl status autofs

# systemctl restart autofs

# su - ldap
Last login: Wed Dec  1 17:14:39 IST 2021 on pts/0
[ldap@system ~]$ 					->didn't get warining aboub ldap user home dir

[ldap@system ~]$ pwd	->you will get dir mounted automatically when you login as ldap user due to autofs
/home/ldapuser/ldap

[ldap@system ~]$ exit
logout
[root@system ~]# mount | grep ldapuser
/etc/auto.ldap on /home/ldapuser type autofs (rw,relatime,fd=11,pgrp=6614,timeout=300,minproto=5,maxproto=5,indirect,pipe_ino=98396)
freeipa.example.com:/home/ldapuser/ldap on /home/ldapuser/ldap type nfs4 (rw,relatime,vers=4.2,rsize=262144,wsize=262144,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=192.168.0.10,local_lock=none,addr=192.168.0.254)
 
 
 
48) ❑ Configure system.example.com to automount home directories of LDAP users ldap1 and ldap2.

• Home directories of LDAP users ldap1 and ldap2 are /ldap/home/ldap1 and /ldap/home/ldap2 respectively.
• Home directories are shared by ipaserver.example.com through NFS export.
• LDAP user should get his home directory when logged in.


# dnf install autofs Installing autofs

# systemctl start autofs 							Starting autofs service
# systemctl enable autofs 							Configuring autofs to start at boot

# vim /etc/auto.master								To define base location for home directory
/ldap/home /etc/auto.ldap12
:wq 

# vim /etc/auto.ldap12
* ipaserver.example.com:/ldap/home/&
:wq

# systemctl restart autofs 						Restarting autofs service

# su - ldap1 									  Switch user to ldap1
# pwd 											  Current directory should be home directory of /ldap/home/ldap1



# showmount -e freeipa.example.com
Export list for freeipa.example.com:
/ldap/home     *
/home/ldapuser *
/nfsshare      *


# vim /etc/auto.master
/home/ldapuser  /etc/auto.ldap
/ldap/home      /etc/auto.ldap12

# vim /etc/auto.ldap12			-> & for match two home dir 
* freeipa.example.com:/ldap/home/&

]# systemctl restart autofs

[root@system ~]# su - ldap1
[ldap1@system ~]$ pwd
/ldap/home/ldap1
[ldap1@system ~]$ exit
logout
[root@system ~]# su - ldap2
[ldap2@system ~]$ pwd
/ldap/home/ldap2
[ldap2@system ~]$ exit
logout
m[root@system ~]# mount | grep ldap
/etc/auto.ldap on /home/ldapuser type autofs (rw,relatime,fd=11,pgrp=7234,timeout=300,minproto=5,maxproto=5,indirect,pipe_ino=104468)
/etc/auto.ldap12 on /ldap/home type autofs (rw,relatime,fd=17,pgrp=7234,timeout=300,minproto=5,maxproto=5,indirect,pipe_ino=104476)
freeipa.example.com:/ldap/home/ldap1 on /ldap/home/ldap1 type nfs4 (rw,relatime,vers=4.2,rsize=262144,wsize=262144,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=192.168.0.10,local_lock=none,addr=192.168.0.254)
freeipa.example.com:/ldap/home/ldap2 on /ldap/home/ldap2 type nfs4 (rw,relatime,vers=4.2,rsize=262144,wsize=262144,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=192.168.0.10,local_lock=none,addr=192.168.0.254)



49) ❑ Create user (username)maria on System with default user settings.

• Delete user maria from system.example.com.
• User’s home directory and mailbox should also be deleted.


# useradd maria 								To create user maria with default user settings

# userdel -r maria 								To delete user maria ,also home directory and mail spool

# userdel --help 								To check help for userdel

# useradd maria 
# cd /home		
# ls -lrt		-> maria


 home]# cd /var/spool/mail/
# ls -lrt
total 0
-rw-rw----. 1 rpc   mail 0 Nov 23 23:24 rpc
-rw-rw----. 1 ajay  mail 0 Nov 23 23:59 ajay
-rw-rw----. 1 lisa  mail 0 Nov 25 07:43 lisa
-rw-rw----. 1 bob   mail 0 Nov 25 08:30 bob
-rw-rw----. 1 lara  mail 0 Nov 27 08:10 lara
-rw-rw----. 1 harry mail 0 Nov 27 08:23 harry
-rw-rw----. 1 maria mail 0 Nov 27 09:10 maria


# userdel --help
  -r, --remove                  remove home directory and mail spool
# more /etc/shadow | grep maria 
maria:!!:18958:0:99999:7:::
!!->no password is set and password of user delete

# userdel -r maria

# pwd
/var/spool/mail
 mail]# ls -lrt
maria mail spool dir deleted

# cd /home/
[root@system home]# ls -lrt
maria user home dir deleted
# id maria	->no user found


50) ❑ Configure superuser access for user harry to enable him to use root privileges with sudo.
• Create a user with username testuser using sudo.

# more /etc/sudoers 						To verify line %wheel ALL=(ALL) ALL is not commented

# usermod -aG wheel harry 					To add user harry to wheel group

# sudo whoami 								To verify access

# sudo useradd testuser 					To create user using sudo



# more /etc/sudoers			->look for this line must be uncommented
## Allows people in group wheel to run all commands
%wheel	ALL=(ALL)	ALL

$ id 
uid=1005(harry) gid=5556(harry) groups=5556(harry) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023

# su - harry
[harry@system ~]$ sudo whoami
harry is not in the sudoers file.  This incident will be reported

# usermod -aG wheel harry
G-> Name provide for suplimentary group
a-> append the group

# more /etc/group | grep harry
wheel:x:10:ajay,harry
harry:x:5556:


# su - harry
[harry@system ~]$ sudo whoami
[sudo] password for harry: 
root

[harry@system ~]$ sudo useradd testuser



#Partions

Introducing Standard Partitions and Filesystems
Step1 : Create partition(fdisk)			->fdisk use in MBR LAYOUT, gdisk is use in GPT Layout partioning
Step2: Create filesystem(mkfs)
Step3 : Mount filesystem(mount or fstab entry for persistent mount)


Step 1 & 2
Partition1 ext2
Partition2 ext3
Partition3 ext4

Step 3
Partition1 ext2 ->	Mount Point Directory Dir2
Partition2 ext3 ->	Mount Point Directory Dir1
Partition3 ext4 ->  Mount Point Directory Dir3


MBR Partitioning Layout - 15 Partitions(3 Primary, 12 Logical)(1extended partion containing 12 logicalpart) or (4 pirmay partion)
GPT Partitioning Layout - 128 Partitions


# Introducing Logical Volumes (LVM’s)

in standard partion if storage is full in file system we cannot increase size of filesystem we need to take bakup of disk then replace disk with new disk with more capacity , configure the disk with different partion and it will cause more downtime .we cannot increase size of file system in runtime. this main drawback of standard partion. that's why LVM(logical Volumes )introduces.

we can add more disk in phycal volume to increse size of phycal volume.
we can also increase size of volume group, and logical volume
we can also reduce size of phycial volume, volume group, logical volume also.

Step1 – Create physical volume from disks or partitions (pvcreate)
Step2- Create volume group using physical volume(s)(vgcreate)
Step3 – Create logical volume (lvcreate)

Step4- Create filesystem on logical volume (mkfs)
Step5- Mount file system on mount point(mount or fstab entry for persistent mount)


Logical Vol1										Logical Vol2
Volume Group – VG1 									Volume Group- VG2
Physical Volume1 									Physical volume2
/dev/sda1		/dev/sda2							/dev/sda3		/dev/sda4


52) ❑ Create a standard disk partition of 1 GiB size and mount this on /mnt/partition directory.
• Partition should use xfs file system.
• Mount should be persistent.

To create container for extended partition (Container) and to create logical partition of size 1 Gib
# fdisk /dev/sda

First input : n , Second input : e , Two times Enter(To assign remaining
space for Logical partitions) ,Third input : n , Enter (Default First
sector),Fourth input: +1G ,wq (to save and quit) 


# partprobe 										To inform kernel about this partition

# mkdir /mnt/partition 								To create mount directory

# mkfs.xfs /dev/sda5 								To create xfs filesystem on partition

# mount /dev/sda5 /mnt/partition 					To test mounting filesystem temporarily

# mount 											To verify mounted filesystem

# vim /etc/fstab						To mount filesystem persistently (to persist across reboot)
/dev/sda5 /mnt/partition xfs defaults 0 0
:wq 

# mount -a 											To mount through fstab

# lsblk 											To list block devices




first we create one extended partion using fdisk beacuse we have 3 primay partion already exist( boot, root, home) . 
after create exteded partion we assign all remaining disk space to extended partion.
 (we are just creating container for logcal partion this amount size )

# # fdisk -l		->sda 8GiB
Disk /dev/sda: 8 GiB, 8589934592 bytes, 16777216 sectors

Disklabel type: dos		->means  MBR TYPE Partioning layout

Device     Boot   Start      End  Sectors Size Id Type
/dev/sda1  *       2048  2099199  2097152   1G 83 Linux
/dev/sda2       2099200 16777215 14678016   7G 8e Linux LVM


# man fdisk
       fdisk - manipulate disk partition table

fdisk [options] device

fdisk -l [device...]

create 1 extended partion for logcail partions
# fdisk /dev/sda		->8GiB

command m fro help) : m
Geric 
d
Save & Exit

		:n	
		p primary  (3 primary , 0 extended , 1free)
		e extended (container for logical partions)
	
		:e
first sector  			:enter
last sector				: enter	(assign all remain disk space to extended partion)


also creat Logical partion of 1Gib Size
		: n
adding logical pration 5
first sector  			:enter
last sector				: +1G		->1Gibe byte
	
	created a new partion 5 of type Linux and of size 1 GiB
		
		
						:w		->save quit
				reboot if require

# partprobe			->to inform kernel about partion change			
				
# reboot		

# man partprobe
       partprobe - inform the OS of partition table changes

# man /proc/partions	->show the partion files under proc
->proc is virtual FS and it is kernel interface
major	minor	blocks		name
8		4		1			sda4			->extended partion
8		5		12435234	dsa5			->logical partion
		
exteded partion store meta data about logical partion. we cannot create FS on extended partion.
only Create FS on logical partion.

		
CREAT FS ON logical partion sda5
# man mkfs
	mkfs - build a Linux filesystem
       mkfs [options] [-t type] [fs-options] device [size]

DESCRIPTION
       This  mkfs  frontend  is deprecated in favour of filesystem specific mkfs.<type>
       utils.

		
# mkfs.xfs /dev/sda5				->FS on Logical volume sda5
	file system is created	
		
		
mount the FS On RUN time 
# mkdir /mnt/partions

# man mount
	mount - mount a filesystem
       mount [-fnrsvw] [-o options] device|dir
       -o, --options opts
              Use the specified mount options.  The opts argument is a  comma-separated
              list.  For example:
			
              mount -t type device dir
-t-> to specify FS Type (option it will take automatically)

# mount -t xfs /dev/sda5	/mnt/partion
# mount
/dev/sda5 on /mnt/partion type xfs (rw, ....



mount persistent mount
# man fstab
       fstab - static information about the filesystems
/etc/fstab
The first field (fs_spec).
              This  field describes the block special device or remote filesystem to be
              mounted.

The second field (fs_file).
              This field describes the mount point (target) for  the  filesystem.   For
              swap partitions, this field should be specified as `none'. If the name of
              the mount point contains spaces or tabs these can be  escaped  as  `\040'
              and '\011' respectively.

The third field (fs_vfstype).
              This  field  describes  the  type of the filesystem.  Linux supports many
              filesystem types: ext4, xfs, btrfs, f2fs,  vfat,  ntfs,  hfsplus,  tmpfs,
              sysfs,  proc, iso9660, udf, squashfs, nfs, cifs, and many more.  For more
              details,

       The fourth field (fs_mntops).
              This field describes the mount options associated with the filesystem.
			  It is formatted as a comma-separated list of  options. 
				It  contains  at least the type of mount (ro or rw)

			defaults
                     use default options: rw, suid, dev, exec, auto, nouser, and async.
                     
				(default it is FS is rw,we are able to set user(suid) command on mounted FS,
				 dev is FS is mounted on local machine, in case of FS is mounted accross the network we use _netdev , exec mounted FS may contain executables, noexec for no executable is contain 
				auto -> you can use "mount -a" to mount the FS through fstab  , ONLY root user can mount the FS , async  how you can write FS)
				
            noauto 
              do not mount when "mount -a" is given (e.g., at boot time)

              user   
              		allow a user to mount

              owner  
              		allow device owner to mount

              comment
                     or x-<name> for use by fstab-maintaining programs


            nofail 
            		do not report errors for this device if it does not exist.
 
 
 
The fifth field (fs_freq).
              This  field  is used by dump(8) to determine which filesystems need to be
              dumped.  Defaults to zero (don't dump) if not present.


      The sixth field (fs_passno).
              This field is used by fsck(8) to determine the order in which  filesystem
              checks  are  done  at boot time. 
				Defaults to zero (don't fsck) if not present. skip
 determine the order in which  filesystem
 
              checks  are  done  at boot time.  The root filesystem should be specified
              with a fs_passno of 1.  Other filesystems should have a fs_passno  of  2.



UUID ->universaly unike ID

# vim /etc/fstab
/dev/sda5	/mnt/partition	xfs		defaults	0	0

# umount /mnt/partion		->->unmount mount command mountaion

# mount -a

# reboot		->if require

# mount | greo partition
/dev/sda5 on	/mnt/partition type	xfs	 rw	

#lsblk
sda
 |
 |sda4 8:4 0 	1K	0	part		->extended partion store only meta data
 sda5	8:5	0	1G 	0	part	/mnt/partition

# blkid		->you find UUID here  .in case you need mount using UUID you can found UUID from here and copy UUID AND paste in fstab file










53) ❑ Create a disk partition of size 1 GiB and mount this for read only access on /mnt/fat directory.

• Use vfat file system for the partition.
• Mount should be persistent.

# fdisk /dev/sda							->To create logical partition of 1 GiB size
First input : n ,Enter(Default First sector), 
Second input : +1G, Enter ,w (to save and quit) 

# partprobe 								To inform kernel about this partition

# mkdir /mnt/fat 							To create mount point directory

# mkfs.vfat /dev/sda6 						To create vfat filesystem on partition

# mount -o ro /dev/sda6 /mnt/fat 			To test mounting filesystem

# mount 									To verify mounted filesystem

# vim /etc/fstab							->To mount filesystem persistently
/dev/sda6	/mnt/fat	vfat	ro	0	0
:wq 
# lsblk 									To list block devices





# fdisk /dev/sda
	:m for help) :m
				:n		->new partion
				:q		->quit

#fdsik /dev/sda
:n
all primay partion are in use
adding logicatl partion 6
first secotor( default 734894): enter
last secotr() : +1G
create a new partion 6 of type linux and size is 1 GiB

	:w			->write
	:q			->save quit


# more /proc/partions	->partion table see our partion kernel is aware of partion
major minor		blocks	name
8		6  		104587	sda6

# partprobe		->to inform kernel about partion if partion not show on partion tabel

# man mkfs.vfat
 mkfs.fat - create an MS-DOS filesystem under Linux


create FS Type of vfat
# mkfs.vfat /dev/sda6
file system created

create mount point
# mkdir /mnt/fat

mount the FS in run time ro type
#mount -o ro /dev/sda6 /mnt/fat
#mount
/dev/sda6 on /mnt/fat type vfat (ro)

to make mount persistent
# vim /etc/fstab			->instea defaults ->ro 	we use overwrite default rw option
/dev/sda6		/mnt/fat	vfat	ro	0	0

unmount FS
# unmount /mnt/fat	

#mount -a

# mount | grep fat		->mount work fine
/dev/sda6	on	/mnt/fat type vfat	ro	0	0

verify if its ro FS or not
# cd /mnt/fat/
# ls -l
no error

# touch file
canot read-only file system



# lsblk			->list all block devices





54) ❑ Configure and add additional 1 GiB swap space to your System.

# fdisk /dev/sda			->To create logical partition of 1 GiB size of type Linux swap
First input : n ,Enter, Enter (Default First sector), Second input : +1G , Enter, 
Third input : t ,Enter ,Enter( for default Partition),Fourth input : 82 ,Enter, w (to save and
quit),Enter 

# partprobe 											To inform kernel about these changes

# mkswap /dev/sda7 										To configure partition as swap

# vim /etc/fstab										 Make entry in fstab file
/dev/sda7	swap	swap	defaults	0	0
:wq 

# swapon -a 												To activate swap as per entry in fstab

# free -m 													To verify added swap memory



first creat logical partion of size 1G partion type linux swap 82

we will not create FS we need to configure partion as swap (mkswap)

mount point as we use swap , FS type swap , default 0	0

to activate  swap (swapon -a)

free -m	->verfiy swap memory.



create Logical partion of size for swap.hex code 82 ,1G

# fdisk /dev/sda		->create logical partion size 1G
			:n
first sector:enter
last sector: +1G

created a new partion 7 of type Linux and of size of 1GiB

		:m			->m for help
		:l			->l for list all non partion type hex code (Linux swap 82)
		:t			  ->t	to change partion type		configure partion type
partion number : 7		
hex code    	: 82		->swap code

		:w			->write


# more /proc/partition	->partion file under /proc
8	 7	132942	sda7

 
# partprobe 		->to know kernel about partion

# man mkswap
       mkswap - set up a Linux swap area
SYNOPSIS
       mkswap [options] device [size]
       

#mkswap /dev/sda7						->configrue partion as swap

# vim /etc/fstab		-> make entry in fstab about swap partion
/dev/sda7	swap	swap	defaults	0	0
			mount	FS 					
			point	TYPE

# free -a
see swap memory

# man swapon
	swapon, swapoff - enable/disable devices and files for paging and swapping
       -a, --all			->
              All  devices  marked as ``swap'' in /etc/fstab are made available, 
              except for those with the ``noauto'' option.  Devices  that  are  already  being
              used as swap are silently skipped

#swapon -a				->TO activate swap as per fstab

# free -a		->see additional 1G swap memory




55) ❑ Configure logical volume with name lv_volume which should use 200 MiB from volume group vg_group of size 300 MiB.

• ext4 file system should be used
• Mount this on /mnt/log_vol directory and mount should be persistent.

# fdisk /dev/sda		->To create logical partition of size 300 MiB with type Linux LVM
First input : n ,Enter,Enter (Default first sector) , Second input :+300M ,Enter, Third input :
t,Enter,Enter( for default Partition),Fourth input : 8e ,Enter,w (to save and quit),Enter 


# partprobe 											To inform kernel about this partition

# pvcreate /dev/sda8 									To create physical volume

# vgcreate vg_group /dev/sda8 							To create volume group from physical volume

# lvcreate -n lv_volume -L 200M vg_group 				To create logical volume on volume group

# mkdir /mnt/log_vol 									To create mount directory

# mkfs -t ext4 /dev/vg_group/lv_volume 					To create ext4 filesystem on logical volume

# mount /dev/vg_group/lv_volume /mnt/log_vol 			To mount filesystem temporarily using mount

# mount 									To verify mounted filesystem

# vim /etc/fstab							Make entry in fstab to mount filesystem persistently
/dev/vg_group/lv_volume		/mnt/log_vol	ext4	defaults	0	0
:wq 

# mount -a											To mount through fstab
 

create FS on logical_volume mkfs

L		->Logical volume	lvcreate
V		->Volume Group		vgcreate
P		->Physical Volume	pvcreate
D		->partion disks		fdisk


first creat Logical partion 300M size ->t ->linux lvm(8e)
create phyical volume /dev/sda8
create volume group[vgcreate vg_group  /dev/sda8(phycial volume group name) ]

create logical volume using this volume_group
(lvcreate -n lv_volume -L 200M vg_group)
-n ->logical voume name
-L ->specific size then volume group name we gonna use

create mount point

Create FS on Logical Volume before mount Logical volume on mount point
-t -> ext4 type FS on logical volume(path /dev/vg_group/lv_volume)
	lvdisplay to see path of logical volume

mount the locaial volume on /mnt/log_vol

make entry in fstab
mount -a		->mount through fstab




# fdisk /dev/sda			->create logical volume
		: n
partion 8
first sector		:
last  sector		: +300M		->mebibyte
pation type Linux and size 300MiB, change partion type		
	
					: l			list all non partion type(8e linux lvm)
					:m			for help
					:t			change pation type
	   pation number: 8
	 				:8e
	 				:w
partion type Linux LVM

	
# partprobe 			-> to kernel know about it

# more /proc/partition
8	8	38439 	sda8

# man pvcreate
 			pvcreate — Initialize physical volume(s) for use by LVM


create phycial volume in this partion
# pvcreate /dev/sda8
Phycial volume "/dev/sda8" created successfully created

# man vgcreate		->crate volume group
vgcreate — Create a volume group

	  vgcreate  creates  a new VG on block devices. If the devices were not previously
       initialized as PVs with pvcreate(8), 
       
       vgcreate  will  inititialize them, making them  PVs. The pvcreate options for initializing 		devices are also available with vgcreate.


using this phyical volume we need to create volume group()
# vgcreate vg_group /dev/sda8
			volume		phyical ->we gona create
			groupname	volume
volume group "vg_group" successfully created

# vgdisplay			->to display volume group ,path of vg
vg_group
VG Size			296 MiB
PE size		4MiB			=>phycail extened size default size 4M

# pvdisplay			->to display physical volume
PV NAME		/dev/sda8
VG NAME		vg_group		->we created volume group on this phycial volume
PV Size		300.00MiB

create LOGICAL VOLUME(LV) USING VOLUME GROUP(VG)
#lvcreate -n lv_volume -L 200M vg_group
Logical volume "lv_volume" created


# man lvcreate
       lvcreate — Create a logical volume
       [ -n|--name String ]		->provide name of logical volume 
	
	  lvcreate -L|--size Size[m|UNIT] VG 	->-L provide size of Logical volume



# lvdisplay 	-> display information about logical volume
LV Path	-> /dev/vg_group/lv_volume
LV NAME -> lv_volume
VG Name -> vg_group
LV UUID


create ext4 file system on logical volume before mount
# mkfs.ext4 /dev/vg_group/lv_volume		->LV path 


# mkdir /mnt/log_vol			->create mount point

# mount /dev/vg_group/lv_group	/mnt/log_vol		->mount FS on runtime


# mount 					
/dev/mapper/vg_group-lv_volume on /mnt/log_vol type ext4 (rw



# umount /mnt/log_vol

# vim /etc/fstab
/dev/vg_group/lv_group			/mnt/log_vol		ext4	defaults	0	0
LV Path

# mount -a			->mount through  the fstab

# mount | grep log_vol
/dev/mapper/vg_group-lv_volume on /mnt/log_vol type ext4 rw






56) ❑ Configure logical volume with name volume which should use 20 PE’s from volume group named group of size 400 MiB.

• Size of PE should be 16 MiB and file system used must be ext4 file system.
• Mount this on /mnt/volume directory and mount should be persistent.
• Use UUID to mount this.


# fdisk /dev/sda								->To create logical partition
First input : n ,Enter,Enter (Default first sector), Second input : +400M ,Enter, Third input : t,
Enter, Enter( for default Partition),Fourth input : 8e ,Enter, w (to save and quit),Enter 

# partprobe 										To inform kernel about changes

# pvcreate /dev/sda9 								To create physical volume

# vgcreate -s 16M group /dev/sda9 					To create volume group with PE size of 16 MiB

# lvcreate -n volume -l 20 group 					To create logical volume using 20 PE’s from volume group

# mkdir /mnt/volume 								To create mount point

# mkfs.ext4 /dev/group/volume 						To create ext4 filesystem on logical volume

# mount /dev/group/volume /mnt/volume 				To mount filesystem in runtime

# mount 										To verify mounted filesystem

# vim /etc/fstab							->To mount persistently through fstab
UUID =?		/mnt/volume		ext4	defaults	0	0
:wq 


# mount -a										->To verify mounted filesystem




-s ->to create non-default phycial volume extended .in last example 300MiB has 4MiB phycial extended
-l => to specify number of phycial extend 20 
-L -> define size of volume group
-n =>define name of logical volume

create logical partion size of 400MiB and change partion type to "Linux LVM"
# fdisk /dev/sda

						:n
first sector			:	enter
last sector				:	+400M

command m for help)		:	l		->all partion known type "8e linux LVM"
						:	m
						:	t		->to change partion type
 pation number  		: 9
Hex COde				: 8e
change type of partiotion 'Linux' to 'Linux LVM'

						:w 		->write save
						

# partprobe				->to sure kernel know about this partion 

# more /proc/pratitions
8 	9	445443	sda9

create phycical volume
# pvcreate /dev/sda9
phycaal volume "/dev/sda9" successfully created

# vgcreate --help
	[ -s|--physicalextentsize Size[m|UNIT] ]

create volume group(VG) with non phycail exended size 16MiB
# vgcreate -s 16M group /dev/sda9
group	-> volume group name


# vgdisplay			->display volume group
VG NAME		group
PE size		16MiB		->phycaial extednd size is 16M


# lvcreate --help
	[ -l|--extents Number[PERCENT] ] -> to specific number of phycical extents
[ -n|--name String ]	-> name of logical volume


create logical volume using 20 phycial exteded from volume group
# lvcreate -n volume -l 20 group

volume ->logical volume name
group -> volume group name
-l 20 ->> to specific number of phycical extents


# lvdisplay			->to display logical volumes
LV Path				/dev/group/volume
LV Name				volume
VG Name				group
LV UUID				cdshfjd-dfsjksdfl-hjshdfjka-ksdkfjjksdfj
Current LE(logical extents) 		20


create FS on this logicl volume type ext4
# mkfs.ext4 /dev/group/volume
FS create on this logical volume "volume"

# mkdir /mnt/volume			-> create mount point

# mount /dev/group/volume	/mnt/volume/		->mount FS on run time
# mount
/dev/mapper/group-volume on /mnt/volume type ext4 rw

# blkid			->to check 	UUID	(Universal unike id)
/dev/mapper/group-volume: UUID="23323-SDJFLK-23KLD-KJDFSKJ-32KEJFDKL KLDS" type="ext4"

# umount /mnt/volume			->unmount run time MOUNT FS 

mount the FS Using UUID
# vim /etc/fstab
UUID="23323-SDJFLK-23KLD-KJDFSKJ-32KEJFDKL KLDS"	/mnt/volume		ext4	defaults	0	0

# mount -a		->mount FS through fstab


# mount | grep volume
/dev/mapper/group-volume on /mnt/volume type ext4 rw






57) ❑ Configure logical volume with name lvm from volume group vgroup of size 512 MiB.

• Logical volume should use complete free space on volume group.
• Create ext4 file system on this volume.

# fdisk /dev/sda							->To create logical partition of type Linux LVM
First input : n Enter,Enter(Default first sector), Second input : +512M ,Enter, Third
input : t ,Enter,Enter (Default partition), Fourth input : 8e,Enter ,w (to save and
quit),Enter 

# pvcreate /dev/sda10 							To create physical volume

# vgcreate vgroup /dev/sda10 					To create volume group

# lvcreate -n lvm -l 100%FREE vgroup 			To create logical volume using all space of volume group

# mkfs.ext4 /dev/vgroup/lvm 					To create ext4 filesystem
				lv path
# lvdisplay 									To display logical volume(s)

# vgdisplay 									To display volume group(s)

# pvdisplay 									To display physical volume(s)



create logical partion size 500M
# fdisk /dev/sda
				:n
adding primary partion 10			
first sector	:	enter
last sector		: +512M

created a new partition 10 of type "Linux" and size 512MiB
				
				: t			change partion type	8e linux LVM
partion number	:10
hex code		:8e				8e linux LVM
change partition "Linux" to "Linux LVM"

#partprobe				->inform kernel about partition

# more /proc/partitions
8	10	53433	sda10


create phyical volume(pv) or directly create volume group(vg) using vgcreate
# vgcreate vgroup	/dev/sda10
physical volume "/de/sda10" successfully created 
volume group	"vgroup"	successfully created	

it is automaically create physcal volume if its already not created using pvcreate.



# vgdisplay vgroup
VG Name		vgroup
VG Size		508 MiB


# lvcreate --help
	[ -l|--extents Number[PERCENT] ]	create extents number or define percentage


-l 20 ->> to specific number of phycical extents

-l 100%FREE		->To create logical volume using all space(provide 100% free ) of volume group 



Create Logical volume(LV) using 100% free space from volume group(VG)
# lvcree -n lvm -l 100%FREE vgroup	
							volume
							group

Logical volume "lvm" created


display logical volume
# lvdisplay /dev/vgroup/lvm
LV Path			/dev/vgroup/lvm
LV Name			lvm
VG Name			vgroup
LV UUID			jfdskajfkl
LV Size			500MiB			->Logical Volume(LV) same size as volume group(VG) size 


display volume group
# vgdisplay	vgroup
VG Name			vgroup
VG Size			500MiB			->volume group(VG) size same as Logical Volume(LV) Size
PE Size			4.00MiB


logical volume(LV) creted using 100%Free Extend from VOlume Group(VG)


# lvdisplay /dev/vgroup/lvm			-> path for LV 
LV Path			/dev/vgroup/lvm


crated FS on this Logical VOlum(LV) type of ext4
# mkfs.ext4 /dev/vgroup/lvm		
FS create ext4 type on LV

# blkid
/dev/mapper/vgroup-lvm:	UUID="SDJFALJDSL-32JKJK-dfkjs332" Type="ext4"








58) ❑ Resize the lvm lv_volume so that after reboot size should be in between 230MiB to 260 MiB.
• Make sure complete logical volume should be usable.


# lvdisplay 												To display logical volumes

# lvextend -r -L +45M /dev/vg_group/lv_volume 				To extent logical volume and resize the filesystem


-r -> resize File System(FS) along with logical volume(LV)  also
-L => to exteded Logical Volume Size. adding +45M
		current size of Logical volume(LV) 200M+45  ->between 230MiB to 260MiB


# lvdisplay 		->display all Logical Volume
LV Name				lv_volume
LV Path				/dev/vg_group/lv_volume
LV size				200MiB

check size of Volume Group before exteded . we can't go beyond size of VG ->vg_group
# vgdisplay vg_group
VG Name			vg_group
VG Size			296MiB		->possible to exteded Logical Volume by 45M


# lvextend --help | more
  lvextend -L|--size [+]Size[m|UNIT] LV		->to add + size of Logical volume

[ -r|--resizefs ]		->to extend FS as well in case you exteded size of Logical VOlume or reducing

# lvextend -r -L +45M /dev/vg_group/lv_volume		->extending size of Volume group
logical Volume(LV) vg_group/lv_volume change size from 200M to 248M
File System also resize on /dev/mapper/vg_group-lv_volume


display LV
# lvdisplay /dev/vg_group/lv_volume
LV Name				lv_volume
LV Path				/dev/vg_group/lv_volume
LV size				248MiB 

size is increase in extded of PV 4Mx12=48M instead of 45M






59) ❑ Extend size of LVM with name lvm by 256 MiB.
• Create new partition to increase the size of volume group.
• Format the complete volume with ext4 file system.


# fdisk /dev/sda									->To create logical partition of type Linux LVM
First input : n ,Enter, Enter (Default first sector),Second input :
+300M , Enter,Third input : t ,Enter ,Enter(Default partition)
Fourth input : 8e ,Enter, w (to save and quit),Enter 

# pvcreate /dev/sda11 										To create physical volume

# vgextend vgroup /dev/sda11 								To extend volume group

# lvextend -r -L +256M /dev/vgroup/lvm 						To extend logical volume

# lvdisplay 												To display logical volume(s)







# lvdisplay
LV Name				/dev/vgroup/lvm
LV Path				lvm
VG Name				vgroup
LV Size				508M

increase size of LV by 256M. but we have to check we have inif storage in Volume Group(VG)
#vgdiaplay 			->check size of VG
VG Name				vgroup
VG Size				508M		->so we need to extend size of VG because size are same as LV size
								before extend size of LV by 256M

# fdisk /dev/sda		->create a new Logical partion
					:n
first sector		: enter
last sector			: +300M 
	partion 11 type Linux size 300M
	
					: t
		partition 11
Hex Code			:8e		Linux LVM
					:w

# partprobe			
			
# more /proc/partition
8	11	3233 		sda11
			
create phycial volume on this partition
# pvcreate /dev/sda11

# vgextend  --help
  vgextend - Add physical volumes to a volume group
syntax-> 	  vgextend VG PV ...



# vgextend /dev/sda11		increase/extende size of VG
volume group "vgroup" successfully extend

# vgdisplay vgroup
VG Name			vgroup
VG Size			804M		->now sufficient space of VG 300M extra
PE Size			4M


increase size of LV				->add 256M
# lvextend -r -L +256M /dev/vgroup/lvm
							lvpath
Old LVM size=508M(127 extents)
NEW LV Size=764M(191 extents).							
							
FS size also increase
[ -r|--resizefs ]		->to extend FS as well in case you exteded size of Logical VOlume or reducing
-L => to exteded Logical Volume Size. adding 

# blkid		->lvm FS ext4->we can increase or decrease size of logical volume without downtime on fly
/dev/mapper/vgroup-lvm: UUID="" Type="ext4"




60) ❑ Create a standard partition of size 100 MiB and format this with ext4 file system.
• Change the file system to xfs and verify same.


# fdisk /dev/sda				->To create partition (Logical partition) of 100 MiB size
First input : n ,Enter,Enter(To select default first sector),
Second input :+100MiB ,Enter, w (to save and quit),Enter 

# partprobe 							To inform kernel about partition table changes

# mkfs.ext4 /dev/sda12 					To create ext4 filesystem on partition

# mkfs.xfs -f /dev/sda12 				To change the filesystem type to xfs or to create xfs filesystem

# blkid 									To verify changes





# fdisk /dev/sda		->create a new Logical partion of 100 MiB size
					:n
first sector		: enter
last sector			: +100M 
	partion 12 type Linux size 100M
	
					:w

# partprobe

# mkfs.ext4 /dev/sda12		->create ext4 FS

# mkfs.xfs -f /dev/sda12

-f-> force to change/overwrite FS from EXT4 to XFS

# blkid			->FS is XFS now
/dev/sda12	UUID="" Type="xfs"






61) ❑ Create a directory /private/home.

• Set the user ownership to lisa and group ownership to group.
• Give full permissions to group group on this directory.

• User riya should have no access on this directory.
• Add user’s bob and harry to group group.
• Files created by user bob and harry under this directory should have group ownership set to group.


# mkdir -p /private/home 						Creating directory path /private/home

# chown lisa:group /private/home 					Changing user and group ownership

# chmod g+rwx /private/home 						Configuring full permissions at group level

# setfacl -m u:riya:- /private/home 				Removing all permissions for user riya

# usermod -aG group bob & usermod -aG group harry 		Adding users to group group

# chmod g+s /private/home 							To set GID bit

# getfacl /home/private 								To display configured access control lists 


# mkdir -p /private/home

# ls -ld /private/home/
drwxr-xr-x. 2 root root 6 Dec  7 17:54 /private/home/

# chown -v lisa:group /private/home/
changed ownership of '/private/home/' from root:root to lisa:group

# chmod g+rwx /private/home/

# ls -ld /private/home/
drwxrwxr-x. 2 lisa group 6 Dec  7 17:54 /private/home/

check acl installed or not
# rpm -aq acl		->installed

user riya should not access on this dir using "access acl",user riya not able to navigate to this dir
# setfacl -m u:riya:- /private/home/

-m -> for modify acl
u-> for user riya
-  => remove all existing permission

# getfacl /private/home/
getfacl: Removing leading '/' from absolute path names
# file: private/home/
# owner: lisa
# group: group
user::rwx
user:riya:---			->user riya has no access on thi dir
group::rwx
mask::rwx
other::r-x

# su - riya

riya$ cd /private/home/				->user riya has no access 
-bash: cd: /private/home/: Permission denied


# usermod -a -G group bob
]# usermod -aG group harry

# more /etc/group | grep group			->group has bob,and harry member
group:x:1003:bob,harry

group has full access , user bob,harry have full access because they are part of group
a-> append G to Group

# su - bob
$ cd /private/home/
[bob@system home]$ touch bobfile

[bob@system home]$ ls -l  ->user,group ownership set to bob,bob but we have to set group as "group" 
total 0
-rw-rw-r--. 1 bob bob 0 Dec  7 18:13 bobfile
$ exit

# su - harry
[harry@system ~]$ cd /private/home/
[harry@system home]$ touch harryfile

[harry@system home]$ ls -l	->group owner must be "group" not harry or bob
total 0
-rw-rw-r--. 1 bob   bob   0 Dec  7 18:13 bobfile
-rw-rw-r--. 1 harry harry 0 Dec  7 18:20 harryfile
$ exit

we use groubID bit to set "group" on File ,not usergroup itself
# chmod g+s /private/home/

g+s-> Set Group-ID bit


# ls -ld /private/home/		->s-indicate groupID bit set, + we configure acl on this dir,for user riya we configure acl
drwxrwsr-x+ 2 lisa group 38 Dec  7 18:20 /private/hom

]# su - bob
[bob@system ~]$ cd /private/home/
[bob@system home]$ touch bobnewfile

[bob@system home]$ ls -l		->new groupowner is "group"
total 0
-rw-rw-r--. 1 bob   bob   0 Dec  7 18:13 bobfile
-rw-rw-r--. 1 bob   group 0 Dec  7 18:26 bobnewfile
-rw-rw-r--. 1 harry harry 0 Dec  7 18:20 harryfile

$ exit

# su - harry 

[harry@system ~]$ cd /private/home/
[harry@system home]$ touch harrynewfile


[harry@system home]$ ls -l	->groupowner is "group",every group member access and modify files of  each others
total 0
-rw-rw-r--. 1 bob   bob   0 Dec  7 18:13 bobfile
-rw-rw-r--. 1 bob   group 0 Dec  7 18:26 bobnewfile
-rw-rw-r--. 1 harry harry 0 Dec  7 18:20 harryfile
-rw-rw-r--. 1 harry group 0 Dec  7 18:28 harrynewfile








62) ❑ Discover the NFS share exported by NFS server ipaserver.example.com.

• Mount the share /nfsshare on directory /nfs/share and mount should be persistent.
• NFS version 3 should be used.

# dnf group install “Network File System Client” 			->Installing NFS client

# showmount -e ipaserver.example.com 						->Discovering NFS exports

# mkdir -p /nfs/share 										->Creating mount point directory

# mount -o nfsvers=3 ipaserver.example.com:/nfshare /nfs/share		-> Mounting NFS share in run time

# umount /nfs/share 										->Unmounting NFS share

# vim /etc/fstab									->Making entry in fstab file for persistent mount
ipaserver.example.com:/nfsshare 	/nfs/share		nfs _netdev,nfsvers=3	0	0
:wq 

mount -a 											Mounting through fstab

mount 												Verifying the mounted filesystem and version


# dnf group install “Network File System Client” 


# showmount -e ipaserver.example.com				->Discovering NFS exports
require /nfsshre	*

# mkdir -p /nfs/share

# mount -o nfsvers=3 freeipa.example.com:/nfsshare /nfs/share		->mount nfs in runtime
						complete path of nfs share		mountpoint
						


# mount

# umount /nfs/share		->unount for persistent mount

# vim /etc/fstab			->persistent mount
freeipa.example.com:/nfsshare		/mnt/share		nfs		_netdev.nfsvers=3	0	0

to overwrite default dev in case of it present on local system. option with _netdev.nfsvers=3 nfsvers version3 
 

# mount -a

# mount






63) ❑ Discover the samba share and mount share samba on /samba/smb1 directory with smb1 user.
• Use the password password to mount this share.

# dnf install samba-client cifs-utils 						Installing Samba client

# smbclient -L ipaserver.example.com 						Listing Samba shares

# mkdir -p /samba/smb1 										Creating mount point directory


Mounting share in runtime
# mount -o username=smb1 //ipaserver.example.com/samba /samba/smb1
Enter the Samba user password : ********* 

# umount /samba/smb1 										Unmounting share

# vim /etc/fstab								-> Making entry in fstab file for persistent mount
//ipaserver.example.com/samba /samba/smb1 cifs _netdev,username=smb1,password=password	0 0
:wq

# mount -a 										Mounting through fstab

# mount 											Verifying mounted share







smb1 user have 2 account -> 1 is Linux user account , another is samba user account

discover samba share share by ipa server
-L				->Listing Samba shares

-o ->			-o	to specify username with which we are going to mount
username=smb1
//		->samba share path start with //, in nfs share path is start / is used
mount -o username=smb1 //ipaserver.example.com/samba /samba/smb1
enter samba user password: ****** , not samba linux user password

samba share name			 mount point  FS_type(cifs) mount_option(_netdev,username,password)
//ipaserver.example.com/samba /samba/smb1 cifs _netdev,username=smb1,password=password	0 0



# smbclient --help

   -L, --list=HOST                           Get a list of shares available on a host


discover samba share
# smbclient -L ipaserver.example.com 
Enter SAMBA\root's password: (Enter no need to provide passwd)
sharename		Type			comment
samba			Disk			samba_share

mount this share with smb1 user

# id smb1 	

# mkdir -p /samba/smb1		->create mount point

# mount -o username=smb1 //ipaserver.example.com/samba /samba/smb1		->runtime mount
							ipa server	/sambasharename	 mount point			
-o -> to specific username for this mount


# mount			->verfiy

# umount /samva/smb1

# vim /etc/fstab				persistent mount
//ipaserver.example.com/samba /samba/smb1 cifs _netdev,username=smb1,password=password	0 0

 _netdev		->network device, mount option not local device (dev)
 
 username=smb1		->username
 password=password



# mount -a

# mount











❖ Stratis Storage

# Introducing stratis Layered Storage

❖ Stratis is a Linux local storage management tool that aims to enable easy use of advanced storage features such as:

• Thin provisioning,
• Snapshots
• Pool-based management
• Monitoring

❖ It is a hybrid user-and-kernel local storage management system that uses the concept of a storage pool.

❖ This pool is created from one or more local disks or partitions, and volumes got created from the pool.

❖ Stratis can be used on top of any storage device (including LVM)

❖ The file system is put on top of the volume and is an integrated part of it that mean when volume size got increased ,filesystem is also resized automatically.






Thin Provisioning is storage is allocated on demand bases when FS size is grow nore spaces is allocated dynamically

Thick Provisioning a fixed amount of storage is resvered for specfic FS and this space cannot be used any other purpose.

1) Stratis is use concept of Thin Provising to use storage efficentyl

2) SnapShot	-> you can take Snapshots of FS without touching Original FS. also recover data from snapshots. in case you lose data

3) Pool-Based management => stratis is based on pool based storage. storage pool is created from different devices that can disk,partition,lvms other squeses disks device. 
different volume created from the storage pool on this FS is resides, to extends the size of FS stratis will allocated storage Dynamically to the volume to extends the size of Volume and also FS also get resize. 
no need to manage individual FS created on stratis, only need to take care/monitor of pool storage.

4) Monitoring ->   

dm-cache
dm-thin
	dm-thinpool										STRATIS LAYERS
dm-cache
				     ____________		 _______________
USER VIEW			| FileSYstem |		|   FileSystem	|				{ Intrenal VIEW		} 		
					|------------|		| 	  XFS		|	{	
					|			 |		|---------------| 		
					|			 |		|   dm-thin	  	|		
					|			 |		|---------------| 		ThinPool
					|			 |		| dm-thinpool	|		
					|   POOL	 |		|---------------|		
					|			 |		| dm-cache		|			}	
					|			 |		|---------------|		
					| 			 |		|	dm-raid		|			{		
					|			 |		|---------------|			Backstore
					|____________|  	| dm-integrity  |
					|  Blockdev  |		|---------------|
					|____________|		|   Blockdev    |		
										|______________ |			}




64) ❑ Create a Startis pool using two partitions each of size 4 GiB.
• Name the pool as firstpool.
• Create two file systems with name data and logs on pool.
• Mount the Stratis file systems data and logs on directories /pool/data and /pool/logs respectively (through fstab).

# dnf install stratisd stratis-cli 							Installing stratis

# systemctl enable --now stratisd 							To start and configuring to start at boot

# stratis pool create firstpool /dev/sd.. /dev/sd.. 		Creating stratis pool using two partitions

# stratis filesystem create firstpool data 					Creating filesystem with name data

# stratis filesystem create firstpool logs 					Creating filesystem with name logs

# stratis pool list 										Listing stratis pool(s)

# stratis filesystem list 									Listing stratis filesystems

# mkdir -p /pool/data /pool/logs 							Creating mount point directories

# vim /etc/fstab											Making entry in fstab for persistent mount
/stratis/firstpool/data		/pool/data		xfs		defaults		0	0
/stratis/firstpool/logs		/pool/logs		xfs		defaults		0	0
:wq 

# mount -a													Mounting through fstab

# man stratis												To check manual page for stratis



# blkid

# fdisk -l
Disk /dev/sda: 17 GiB, 18253611008 bytes, 35651584 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x187228b7

Device     Boot    Start      End  Sectors  Size Id Type
/dev/sda1  *        2048   616447   614400  300M 83 Linux		/boot
/dev/sda2         616448 15296511 14680064    7G 83 Linux		/root
/dev/sda3       15296512 19490815  4194304    2G 83 Linux		/home


# more /proc/partitions

# dnf install stratisd stratis-cli

# systemctl enable --now stratisd

]# systemctl status stratisd


# fdisk /dev/sda

Command (m for help): n
First sector (4096-14678015, default 4096): 
Last sector, +sectors or +size{K,M,G,T,P} (4096-14678015, default 14678015): +4G

Created a new partition 5 of type 'Linux' and of size 4 giB.


Command (m for help): n
All space for primary partitions is in use.
Adding logical partition 6
First sector (825344-14678015, default 825344): 
Last sector, +sectors or +size{K,M,G,T,P} (825344-14678015, default 14678015): +4G

Created a new partition 6 of type 'Linux' and of size 4 GiB.

	:wq

# partprobe


# more /proc/partitions
major minor  #blocks  name

   8        0   17825792 sda			main
   8        1     307200 sda1			/boot
   8        2    7340032 sda2			/root
   8        3    2097152 sda3			/home
   8        4          1 sda4			extended
   8        5     512000 sda5			partition1 +500M
   8        6     512000 sda6			partition2 +500M
   8        7    1048576 sda7			stratis partition1 +1G
   8        8    1048576 sda8			stratis partition2 +1G
  11        0    1048575 sr0


# blkid
/dev/sda2: UUID="ad2f97fc-8cf6-4bd4-83ae-2a2598997165" BLOCK_SIZE="512" TYPE="xfs" PARTUUID="187228b7-02"
/dev/sda1: UUID="ed67eadf-6e1e-4c8d-b39d-7e87c349c32a" BLOCK_SIZE="512" TYPE="xfs" PARTUUID="187228b7-01"
/dev/sda3: UUID="9598e0ca-d2db-435b-b261-c9ff8aa7c3c8" BLOCK_SIZE="512" TYPE="xfs" PARTUUID="187228b7-03"
/dev/sda5: PARTUUID="187228b7-05"
/dev/sda6: PARTUUID="187228b7-06"


# man stratis
	stratis - Configure Stratis local storage pools

	   pool create  <pool_name> <blockdev> [<blockdev>..]
           Create a pool from one or more block devices, with the given pool name.


       pool list
           List all pools on the system.

       pool rename <old_pool_name> <new_pool_name>
           Rename a pool.

       pool destroy <pool_name>
           Destroy a pool and all the filesystems created from it

       pool add-data <pool_name> <blockdev> [<blockdev>..]
           Add one or more blockdevs to an existing pool, to enlarge its storage capacity.


# stratis pool 
add-cache   add-data    bind        create      destroy     init-cache  list        rename      unbind      unlock

# stratis pool create --help
usage: stratis pool create [-h] [--redundancy {none}] [--key-desc KEY_DESC]
                           [--clevis {nbde,tang,tpm2}] [--tang-url TANG_URL]
                           [--trust-url | --thumbprint THUMBPRINT]
                           pool_name blockdevs [blockdevs ...]

positional arguments:
  pool_name             Name of new pool
  blockdevs             Create the pool using these block devs




create stratis pool using 2 partition sda5 sda6 with name "fistpool"
# stratis pool create firstpool /dev/sda7 /dev/sda8
 

list stratis pool
# stratis pool list		->list pool
Name                      Total Physical   Properties                                   UUID
firstpool   2 GiB / 41.63 MiB / 1.96 GiB      ~Ca,~Cr   15d0e269-d3df-47e1-842e-e98d6c470c10

# stratis filesystem create --help
positional arguments:
  pool_name   pool name
  fs_name     Create filesystems in this pool using the given names




create stratis filesystem with name "data" on "firstpool" stratis pool
# stratis filesystem create firstpool data



create stratis filesystem with name "log" on "firstpool" stratis pool
# stratis filesystem create firstpool logs




list stratis FS
# stratis filesystem list 
Pool Name   Name   Used      Created             Device                        UUID                                
firstpool   logs   546 MiB   Dec 08 2021 23:25   /dev/stratis/firstpool/logs   52166dad-0f32-4209-97ed-aecad6f6fc74
firstpool   data   546 MiB   Dec 08 2021 23:24   /dev/stratis/firstpool/data 


# blkid
/dev/mapper/stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-68bc01c70ad14487b53ddc1b03a0f77b: UUID="68bc01c7-0ad1-4487-b53d-dc1b03a0f77b" BLOCK_SIZE="512" TYPE="xfs"
/dev/mapper/stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-52166dad0f32420997edaecad6f6fc74: UUID="52166dad-0f32-4209-97ed-aecad6f6fc74" BLOCK_SIZE="512" TYPE="xfs"





create mount point dir	 FS type of stratis is "xfs"
# mkdir -p /pool/data /pool/logs

# vim /etc/fstab
/dev/stratis/firstpool/data               /pool/data              xfs     defaults        0 0
/dev/stratis/firstpool/logs               /pool/logs              xfs     defaults        0 0




mount persistent,mount from fstab
# mount -a


# mount
/dev/mapper/stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-68bc01c70ad14487b53ddc1b03a0f77b on /pool/data type xfs (rw,relatime,seclabel,attr2,inode64,logbufs=8,logbsize=32k,sunit=2048,swidth=2048,noquota)
/dev/mapper/stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-52166dad0f32420997edaecad6f6fc74 on /pool/logs type xfs (rw,relatime,seclabel,attr2,inode64,logbufs=8,logbsize=32k,sunit=2048,swidth=2048,noquota)


# blkid			->to mount using UUID use this UUID in fstab
/dev/mapper/stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-68bc01c70ad14487b53ddc1b03a0f77b: UUID="68bc01c7-0ad1-4487-b53d-dc1b03a0f77b" BLOCK_SIZE="512" TYPE="xfs"
/dev/mapper/stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-52166dad0f32420997edaecad6f6fc74: UUID="52166dad-0f32-4209-97ed-aecad6f6fc74" BLOCK_SIZE="512" TYPE="xfs"


# lsblk		->stratis inernal architecutre 

└─sda8                                                                                     8:8    0    1G  0 part    
  └─stratis-1-private-15d0e269d3df47e1842ee98d6c470c10-physical-originsub                253:0    0    2G  0 stratis 
    ├─stratis-1-private-15d0e269d3df47e1842ee98d6c470c10-flex-thinmeta                   253:1    0   16M  0 stratis 
    │ └─stratis-1-private-15d0e269d3df47e1842ee98d6c470c10-thinpool-pool                 253:4    0    2G  0 stratis 
    │   ├─stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-68bc01c70ad14487b53ddc1b03a0f77b
    │   │                                                                                253:5    0    1T  0 stratis /pool/data
    │   └─stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-52166dad0f32420997edaecad6f6fc74
    │                                                                                    253:6    0    1T  0 stratis /pool/logs
    ├─stratis-1-private-15d0e269d3df47e1842ee98d6c470c10-flex-thindata                   253:2    0    2G  0 stratis 
    │ └─stratis-1-private-15d0e269d3df47e1842ee98d6c470c10-thinpool-pool                 253:4    0    2G  0 stratis 
    │   ├─stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-68bc01c70ad14487b53ddc1b03a0f77b
    │   │                                                                                253:5    0    1T  0 stratis /pool/data
    │   └─stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-52166dad0f32420997edaecad6f6fc74
    │                                                                                    253:6    0    1T  0 stratis /pool/logs
    └─stratis-1-private-15d0e269d3df47e1842ee98d6c470c10-flex-mdv 




65 ) ❑ Extend Startis pool firstpool adding one more partition of size 4 GiB.

# stratis pool add-data firstpool /dev/sda.. Extending size od stratis pool adding one more partition

# stratis pool list To list stratis pool(s)

# stratis filesystem list To list stratis filesystems


Note : To delete the stratis pool you need to delete all filesystems first and only then you will be allowed to delete the pool.

# startis filesystem destroy pool_name filesystem_name -To delete startis filesystem
# stratis pool destroy pool_name -To delete stratis storage pool
# man stratis -To check manual page for stratis



# fdisk /dev/sda		->create 1 lvm partition to extend stratis pool 
Command (m for help): n
All primary partitions are in use.
Adding logical partition 9
First sector (25743360-35651583, default 25743360): 
Last sector, +sectors or +size{K,M,G,T,P} (25743360-35651583, default 35651583): +500M

Created a new partition 9 of type 'Linux' and of size 500 MiB.

Command (m for help): wq


# partprobe

# more /proc/partitions 
major minor  #blocks  name

   8        0   17825792 sda
   8        1     307200 sda1
   8        2    7340032 sda2
   8        3    2097152 sda3
   8        4          1 sda4
   8        5     512000 sda5
   8        6     512000 sda6
   8        7    1048576 sda7		stratis partition 1
   8        8    1048576 sda8		stratis partition 2
   8        9     512000 sda9		new lvm partition for stratis
  11        0    1048575 sr0
 253        0    2088960 dm-0
 253        1      16384 dm-1
 253        2    2039808 dm-2
 253        3      16384 dm-3
 253        4    2039808 dm-4
 253        5 1073741824 dm-5
 253        6 1073741824 dm-6



# stratis pool 
add-cache   add-data    bind        create      destroy     init-cache  list        rename      unbind      unlock


add 1 more lvm partition /dev/sda9 in stratis pool "fistpool"	,must be partion size is more than +1G
# stratis pool add-data firstpool /dev/sda9

# stratis pool list
Name                       Total Physical   Properties                                   UUID
firstpool   2 GiB / 1.11 GiB / 914.33 MiB      ~Ca,~Cr   15d0e269-d3df-47e1-842e-e98d6c470c10














66) ❑ Create snapshot for Stratis filesystem data and name the snapshot as data_snapshot.
• Mount the data_snapshot file system on /pool/data_snap directory.

# stratis fs snapshot firstpool data data_snapshot 				Creating snapshot of filesystem data

# stratis pool list 											Listing stratis pool(s)

# stratis filesystem list 										Listing stratis filesystem(s)


# vim /etc/fstab										Making entry in fstab file for persistent mount
/stratis/firstpool/data_snapshot /pool/data_snap xfs	defaults 0 0
:wq 


# mount -a 													To mount filesystem through fstab

# man stratis 												To check manual page for stratis




]# stratis filesystem list 				->2 FS
Pool Name   Name   Used      Created             Device                        UUID                                
firstpool   logs   546 MiB   Dec 08 2021 23:25   /dev/stratis/firstpool/logs   52166dad-0f32-4209-97ed-aecad6f6fc74
firstpool   data   546 MiB   Dec 08 2021 23:24   /dev/stratis/firstpool/data   68bc01c7-0ad1-4487-b53d-dc1b03a0f77b




# stratis fs snapshot --help
positional arguments:
  pool_name      pool name
  origin_name    origin name		->or ogiganl name FS which we want to take snapshot
  snapshot_name  snapshot name		->snapshot name


take snapshot of FS data 
# stratis fs snapshot firstpool data data_snap

fs or filesystem ->both works



]# stratis filesystem list 				->new FS data_snap	is snapshot of FS data
Pool Name   Name        Used      Created             Device                             UUID                                
firstpool   logs        546 MiB   Dec 08 2021 23:25   /dev/stratis/firstpool/logs        52166dad-0f32-4209-97ed-aecad6f6fc74
firstpool   data_snap   546 MiB   Dec 08 2021 23:57   /dev/stratis/firstpool/data_snap   7c396fb0-7470-4762-8ac2-c0a9a2e146c6
firstpool   data        546 MiB   Dec 08 2021 23:24   /dev/stratis/firstpool/data        68bc01c7-0ad1-4487-b53d-dc1b03a0f77b


]# mkdir /pool/data_snap			->mount point

# vim /etc/fstab
/dev/stratis/firstpool/data               /pool/data              xfs     defaults        0 0
/dev/stratis/firstpool/logs               /pool/logs              xfs     defaults        0 0
/dev/stratis/firstpool/data_snap          /pool/data_snap         xfs     defaults        0 0


# mount -a

# mount
/dev/mapper/stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-7c396fb0747047628ac2c0a9a2e146c6 on /pool/data_snap type xfs (rw,relatime,seclabel,attr2,inode64,logbufs=8,logbsize=32k,sunit=2048,swidth=2048,noquota)








67) ❑ Rename stratis pool firstpool as newpool and stratis filesystem data as newdata.
• Make sure already mounted filesystems should not be impacted !

# stratis filesystem rename firstpool data newdata 				Renaming filesystem

# stratis pool rename firstpool newpool 						Renaming pool

# stratis filesystem list 										Listing stratis filesystems to verify

# stratis pool list 											Listing stratis pool(s) to verify


Note : After renaming stratis pool and filesystem, you must make required changes in fstab file where old names are used to specify

filesystem, otherwise, use UUID to mount stratis filesystem to make them independent of names.



# stratis pool list
Name                       Total Physical   Properties                                   UUID
firstpool   2 GiB / 1.64 GiB / 369.31 MiB      ~Ca,~Cr   15d0e269-d3df-47e1-842e-e98d6c470c10


# stratis filesystem list
Pool Name   Name        Used      Created             Device                             UUID                                
firstpool   data        546 MiB   Dec 08 2021 23:24   /dev/stratis/firstpool/data        68bc01c7-0ad1-4487-b53d-dc1b03a0f77b
firstpool   logs        546 MiB   Dec 08 2021 23:25   /dev/stratis/firstpool/logs        52166dad-0f32-4209-97ed-aecad6f6fc74
firstpool   data_snap   546 MiB   Dec 08 2021 23:57   /dev/stratis/firstpool/data_snap   7c396fb0-7470-4762-8ac2-c0a9a2e146c6


# stratis filesystem rename --help 
usage: stratis filesystem rename [-h] pool_name fs_name new_name

positional arguments:
  pool_name   Name of the pool the filesystem is part of
  fs_name     Name of the filesystem to change
  new_name    New name to give that filesystem



rename strats FS
# stratis filesystem rename firstpool data newdata


# stratis filesystem list		->FS name is updated
Pool Name   Name        Used      Created             Device                             UUID                                
firstpool   newdata     546 MiB   Dec 08 2021 23:24   /dev/stratis/firstpool/newdata     68bc01c7-0ad1-4487-b53d-dc1b03a0f77b
firstpool   logs        546 MiB   Dec 08 2021 23:25   /dev/stratis/firstpool/logs        52166dad-0f32-4209-97ed-aecad6f6fc74
firstpool   data_snap   546 MiB   Dec 08 2021 23:57   /dev/stratis/firstpool/data_snap   7c396fb0-7470-4762-8ac2-c0a9a2e146c6



# stratis pool rename --help
usage: stratis pool rename [-h] current new

positional arguments:
  current     Current pool name
  new         New pool name


Rename stratis Pool	as newpool
# stratis pool rename firstpool newpool


# stratis pool list 		->statis pool name updated
Name                     Total Physical   Properties                                   UUID
newpool   2 GiB / 1.64 GiB / 369.31 MiB      ~Ca,~Cr   15d0e269-d3df-47e1-842e-e98d6c470c10


# stratis filesystem list 		->stratis POOL name also updated in device also
Pool Name   Name        Used      Created             Device                           UUID                                
newpool     logs        546 MiB   Dec 08 2021 23:25   /dev/stratis/newpool/logs        52166dad-0f32-4209-97ed-aecad6f6fc74
newpool     data_snap   546 MiB   Dec 08 2021 23:57   /dev/stratis/newpool/data_snap   7c396fb0-7470-4762-8ac2-c0a9a2e146c6
newpool     newdata     546 MiB   Dec 08 2021 23:24   /dev/stratis/newpool/newdata     68bc01c7-0ad1-4487-b53d-dc1b03a0f77b


# blkid 	->identify match  thin-fs after code with stratis FS UUID(68bc01c70ad14487b53ddc1b03a0f77b)

/dev/mapper/stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-68bc01c70ad14487b53ddc1b03a0f77b: UUID="68bc01c7-0ad1-4487-b53d-dc1b03a0f77b" BLOCK_SIZE="512" TYPE="xfs"
/dev/mapper/stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-52166dad0f32420997edaecad6f6fc74: UUID="52166dad-0f32-4209-97ed-aecad6f6fc74" BLOCK_SIZE="512" TYPE="xfs"
/dev/mapper/stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-7c396fb0747047628ac2c0a9a2e146c6: UUID="7c396fb0-7470-4762-8ac2-c0a9a2e146c6" BLOCK_SIZE="512" TYPE="xfs"

# stratis filesystem list 	->newdata uuid=thin-fs-code(68bc01c7-0ad1-4487-b53d-dc1b03a0f77b)
Pool Name   Name        Used      Created             Device                           UUID                                
newpool     data_snap   546 MiB   Dec 08 2021 23:57   /dev/stratis/newpool/data_snap   7c396fb0-7470-4762-8ac2-c0a9a2e146c6
newpool     newdata     546 MiB   Dec 08 2021 23:24   /dev/stratis/newpool/newdata     68bc01c7-0ad1-4487-b53d-dc1b03a0f77b
newpool     logs        546 MiB   Dec 08 2021 23:25   /dev/stratis/newpool/logs        52166dad-0f32-4209-97ed-aecad6f6fc74



we need to change pool name in fstab file		or we can use UUID to mount, no need to change name
# vim /etc/fstab
UUID="68bc01c7-0ad1-4487-b53d-dc1b03a0f77b"               /pool/data              xfs     defaults        0 0
UUID="52166dad-0f32-4209-97ed-aecad6f6fc74"               /pool/logs              xfs     defaults        0 0
UUID="7c396fb0-7470-4762-8ac2-c0a9a2e146c6"               /pool/data_snap         xfs     defaults        0 0


# mount -a

# mount 
/dev/mapper/stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-68bc01c70ad14487b53ddc1b03a0f77b on /pool/data type xfs (rw,relatime,seclabel,attr2,inode64,logbufs=8,logbsize=32k,sunit=2048,swidth=2048,noquota)
/dev/mapper/stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-52166dad0f32420997edaecad6f6fc74 on /pool/logs type xfs (rw,relatime,seclabel,attr2,inode64,logbufs=8,logbsize=32k,sunit=2048,swidth=2048,noquota)
/dev/mapper/stratis-1-15d0e269d3df47e1842ee98d6c470c10-thin-fs-7c396fb0747047628ac2c0a9a2e146c6 on /pool/data_snap type xfs (rw,relatime,seclabel,attr2,inode64,logbufs=8,logbsize=32k,sunit=2048,swidth=2048,noquota)










68) ❑ Create VDO volume with name vdo1.
• Physical size of VDO device must be 8 GiB and slab size should be 128 MiB.
• Set the logical size 10 times (80 GiB) the size of Physical Block device (Assuming container storage).

▪ Make sure compression and deduplication are enabled on the VDO device and logs are sent to syslog.
(by default compression and deduplication is on no need to do anything for enable)



# dnf install vdo kmod-kvdo 											Installing VDO

# systemctl status vdo.service 										Displaying status of VDO service

# fdisk /dev/sda 														Crating partition of 8 GiB size


Creating VDO volume
# vdo create --name vdo1 --vdoSlabSize 128M --vdoLogicalSize 80G --device /dev/sda.. 



# vdo list 														Listing VDO devices

# vdostats --human-readable										Monitoring VDO devices

# vdo printConfigFile 											To print VDO configs

# man vdo 														To check man page for VDO

# more /etc/vdo.conf.yml 										Displaying VDO configs





# dnf install vdo kmod-kvdo
# systemctl status vdo


create 1 logical partition of size 8GiB (8x10)
# fdisk -l
				:n
first sector	: enter 
last sector		:+8G
		
				: wq

/dev/sda16 size 8Gib 

# partprobe


# vdo --help
		Manage kernel VDO devices and related configuration information.

    create              Creates a VDO volume and its associated index and
                        makes it available.
    deactivate          Deactivates one or more VDO volumes. Deactivated
                        volumes cannot be started by the 'start' command.
                        Deactivating a currently running volume does not stop
                        it.
    disableCompression  Disables compression on one or more VDO volumes. If
                        the VDO volume is running, takes effect immediately.
    disableDeduplication
                        Disables deduplication on one more VDO volumes. If the
                        VDO volume is running, takes effect immediately.
                        
    enableCompression   Enables compression on one or more VDO volumes. If the
                        VDO volume is running, takes effect immediately.
    enableDeduplication
                        Enables deduplication on one or more VDO volumes. If
                        the VDO volume is running, takes effect immediately.

    list                Displays a list of started VDO volumes. If --all is
                        specified it displays both started and non-started
                        volumes.
                      

# vdo create --help
  -n <volume>, --name <volume>
                        Operates on the specified VDO volume. May not be used
                        with --all.
  --device <devicepath>
                        Specifies the absolute path of the device to use for
                        VDO storage.
  --vdoLogicalSize <megabytes>		->set logical size
                        Specifies the logical VDO volume size in megabytes.
                        Using a value with a S(ectors), B(ytes), K(ilobytes),
                        M(egabytes), G(igabytes), T(erabytes), P(etabytes) or
                        E(xabytes) suffix is optional. Used for over-
                        provisioning volumes. The maximum size supported is
                        4P. The default is the size of the storage device.

  --vdoSlabSize <megabytes>
                        Set the free space allocator's slab size. Must be a
                        power of two between 128M and 32G; the default is 2G.
                        Using a value with a S(ectors), B(ytes), K(ilobytes),
                        M(egabytes), G(igabytes), T(erabytes), P(etabytes) or
                        E(xabytes) suffix is optional. If no suffix is used,
                        the value will be interpreted as megabytes. This
                        allocator manages the space VDO uses to store user
                        data. The maximum number of slabs in the system is
                        8192, so this value determines the maximum physical
                        size of a VDO volume. One slab is the minimum amount
                        by which a VDO volume can be grown. Smaller slabs also
                        increase the potential for parallelism if the device
                        has multiple physical threads. Therefore, this value
                        should be set as small as possible, given the eventual
                        maximal size of the volume.

  --logfile <pathname>  Specify the path of the file to which log messages are
                        directed. If unspecified, log messages will go to
                        syslog. Warning and error messages are always logged
                        to syslog.





vdoslabsize->	to specify slap size 128M
vdologicalsize=> vdo logical size 80Gib , 10 time more of 8GiB of lvm
device			->vdo device name
 --logfile  -> log should be send to syslog (default behavior)          
 
         
create VDO volume
# vdo create --name vdo1 --vdoLogicalSize --vdoSlabSize 128M --device /dev/sda16
createding vdo1
starting vdo1
starting compression on VDO vdo1
/dev/mapper/vdo1

# vdo list						->list vdo devices
vdo1

# vdostats				->to list vdo stats
Devices				1k-blocks	used	availabe use% space saving%
/dev/mapper/vdo1


# vdostats --human-readable				->to list vdo stats
Devices				1k-blocks	used	availabe use% space saving%
/dev/mapper/vdo1	8.0G		2.8G	5.2G	 34%		 	N/A


2.8G also used for meta vdo is good for large amoun of data storage

compression and deduplication already enable by defaults


# vdo printConfigFile		->verify in config file of vdo about compression,deduplication
compression 	enable 
deduplication	enable  
phycaial size	8G
logical size	80G
slabsize		128M







69) ❑ Create xfs filesystem on VDO volume vdo1 and Mount vdo volume on /vdo1 directory

• Disable the compression on the device
• Change the Bio Threads count to 2.
• VDO Logs should be sent to /root/vdo1_logs file.



# mkfs.xfs -K /dev/mapper/vdo1 											Creating xfs filesystem
K-> with -K mkfs doesnot discard unused block of storage


# vdo disableCompression --name vdo1 									Disabling compression

# vdo modify --name vdo1 --logfile /root/vdo1_logs --vdoBioThreads 2 		->To set non-default logs file and changing bio threads count (Create logs file)

# vdo printConfigFile 									To print VDO configs


# vim /etc/fstab										Making entry in fstab file for persistent
/dev/mapper/vdo1 /vdo1 xfs defaults,_netdev,x-systemd.requires=vdo.service 0 0
:wq 

defaults recommeded by redhat use netdev although its not network device

# mount (create mount point directory)

# mount -a 												Mounting filesystem through fstab

# mount 												To verify mounted filesystem




# vdostats			->check device path
/dev/mapper/vdo1			

mapper -> linux mapper is interface between blockdevice and vdo volume


# cd /dev/mapper/
# ls -l			->vdo volume ->dm=>device mapper
vdo ->  ../dm-11			


create FS type xfs
# mkfs.xfs -K /dev/mapper/vdo1 	
K-> with -K mkfs doesnot discard unused block of storage



create non defaut conf file
# touch /root/vdo1_logs


# vdo --help
disableCompression

# vdo disableCompression --help
  -n <volume>, --name <volume>
                        Operates on the specified VDO volume. May not be used
                        with --all.

  -a, --all             Indicates that the command should be applied to all
                        configured VDO volumes. May not be used with --name.


  

set comprssion disable from enable, 
# vdo disableCompression --name vdo1 
disabling compression on vdo vdo1
  --vdoLogicalThreads <threadCount>
 --name <volume>
  --logfile <pathname> .



change  vdobiothread to 2 from 4. change logfile default to custom
# vdo modify --name vdo1 --logfile /root/vdo1_logs --vdoBioThreads 2 

vdo restart after change apply
# vdo printConfigFile 
vdobiothreads 2
compression disable

# systemctl restart vdo.service

# mkdir /vdo1				->create mount point

# vim /etc/fstab		
/dev/mapper/vdo1 /vdo1 xfs defaults,_netdev,x-systemd.requires=vdo.service 0 0


# mount -a

# mount
/dev/mapper/vdo1	on /vdo1 type xfs 	rw


----------------------------------------------------------------------


if we mistakely change wrong name of FS in /etc/fstab
system will stuck in emergency mode after reboot

gice root password for maintance
control-d to continue:	rootpassword

root@system# vim /etc/fstab		->correct the error change name

#


65) ❑ Configure eth0 interface with ipv6 address 2020::1/64 and set DNS address as 2020::2
• Already existing IPv4 network configurations should not be impacted.
(so we modify instead of add)


# nmcli connection modify system ipv6.addresses 2020::1/64 ipv6.dns 2020::2 ipv6.method manual 				Configuring ipv6 on ethernet interface

# nmcli connection up system 								To restart/activate connection

# ip address show 											To display IP Address configurations

# nmcli connection show system 								To display connection information

# more /etc/resolv.conf 									To verify configured DNS IP address

# man nmcli 												To display Manual page for nmcli

# man nmcli-examples 										To display Manual page for nmcli-examples




# ip address show
 enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 08:00:27:78:e8:e0 brd ff:ff:ff:ff:ff:ff
    inet 192.168.0.10/24 brd 192.168.0.255 scope global noprefixroute enp0s3
       valid_lft forever preferred_lft forever
    inet6 fe80::cdfb:5164:5fec:d52d/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever


# nmcli connection modify system ipv6.addresses 2020::1/64 ipv6.dns 2020::2 ipv6.method manual
128 bit ipv6 addess->48 bit global routing prefix,16 bit subnet id, 64 network id
64-> is network identifier

# nmcli connection up system 	

# systemctl status NetworkManager

# ip address show
 enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 08:00:27:78:e8:e0 brd ff:ff:ff:ff:ff:ff
    inet 192.168.0.10/24 brd 192.168.0.255 scope global noprefixroute enp0s3
       valid_lft forever preferred_lft forever
    inet6 2020::1/64 scope global noprefixroute 
       valid_lft forever preferred_lft forever
    inet6 fe80::cdfb:5164:5fec:d52d/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever


# more /etc/resolv.conf 
# Generated by NetworkManager
search example.com
nameserver 192.168.0.254
nameserver 8.8.8.8
nameserver 2020::2


# nmcli connection show system 
ipv6.addresses:                         2020::1/64
ipv6.dns:                               2020::2

# cd /etc/sysconfig/network-scripts/
[root@system network-scripts]# ls
ifcfg-enp0s3  ifcfg-system

[root@system network-scripts]# more ifcfg-system
IPV6ADDR=2020::1/64
DNS3=2020::2




66) ❑ Configure hostname resolution for host system1.example.com using hosts file.
• Set the hosts file as priority for hostname resolution in nsswitch.conf file.
• Test if hostname resolution is working fine.

# vim /etc/hosts										To add entry in hosts file
192.168.99.20 system1.example.com
:wq 

# getent hosts system1.example.com 						To verify hostname resolution is working fine



# more ifcfg-system 		->to verify host file set priority to hostname resolution
hosts:      files dns myhostname		   ->it will look first host file then dns files has priority

# vim /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
192.168.0.20 system1.example.com

]# getent hosts 192.168.0.20			->we can't use nslookup,dig command which is possible in dns
192.168.0.20    system1.example.com
[root@system ~]# getent hosts system1.example.com
192.168.0.20    system1.example.com




67) ❑ Configure static route on system.example.com for destination 10.1.1.0/24 via 192.168.99.30.
• Route configuration must be persistent after reboot.
• eth0 should be used as exit interface.

# ip route add 10.1.1.0/24 via 192.168.99.30				 Adding static route in runtime

# ip route show or route -n 								To display route(s)

# nmcli connection modify system ipv4.routes “10.1.1.0/24 192.168.99.30” 		To add persistent route using command line

# vim /etc/sysconfig/network-scripts/route-system			To add persistent route using config file
10.1.1.0/24 via 192.168.99.30 dev eth0
:wq 

# nmcli connection up system 							To restart/activate connection





# route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.1     0.0.0.0         UG    100    0        0 enp0s3
192.168.0.0     0.0.0.0         255.255.255.0   U     100    0        0 enp0s3
192.168.122.0   0.0.0.0         255.255.255.0   U     425    0        0 virbr0

0.0.0.0         192.168.0.1 ->default route when no specific gatway exist for specific destination	



# ip route add 10.1.1.0/24 via 192.168.99.30			->add static route on runtime
10.1.1.0/24 ->destination network ip
via 192.168.99.30 ->gatway ip for static route
traffic should be routed via this gatway when traffic send to this destination network


# route -n			->runtime route added
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.1     0.0.0.0         UG    100    0        0 enp0s3
10.1.1.0        192.168.0.30    255.255.255.0   UG    0      0        0 enp0s3
192.168.0.0     0.0.0.0         255.255.255.0   U     100    0        0 enp0s3
192.168.122.0   0.0.0.0         255.255.255.0   U     425    0        0 virbr0

# nmcli connnection up system	

# route -n			-> route is gone because it is runtime
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.1     0.0.0.0         UG    100    0        0 enp0s3
192.168.0.0     0.0.0.0         255.255.255.0   U     100    0        0 enp0s3
192.168.122.0   0.0.0.0         255.255.255.0   U     425    0        0 virbr0




# nmcli connection modify system ipv4.routes "10.1.1.0/24 192.168.0.30"		->persisten route method1

# route -n		->restart connection
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.1     0.0.0.0         UG    100    0        0 enp0s3
192.168.0.0     0.0.0.0         255.255.255.0   U     100    0        0 enp0s3
192.168.122.0   0.0.0.0         255.255.255.0   U     425    0        0 virbr0


# nmcli connection up system 	
Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/4)
[root@system ~]# route -n		->now route exists
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.1     0.0.0.0         UG    100    0        0 enp0s3
10.1.1.0        192.168.0.30    255.255.255.0   UG    100    0        0 enp0s3
192.168.0.0     0.0.0.0         255.255.255.0   U     100    0        0 enp0s3
192.168.122.0   0.0.0.0         255.255.255.0   U     425    0        0 virbr0


]# cd /etc/sysconfig/network-scripts/
[root@system network-scripts]# ls			->new config file creatd due to nmcli command
ifcfg-enp0s3  ifcfg-system  route-system

network-scripts]# more route-system 		->2nd method create this file add configs
ADDRESS0=10.1.1.0
NETMASK0=255.255.255.0
GATEWAY0=192.168.0.30

# rm route-system 
]# nmcli connection reload
# nmcli connection up system 
# route -n			->route remove
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.1     0.0.0.0         UG    100    0        0 enp0s3
192.168.0.0     0.0.0.0         255.255.255.0   U     100    0        0 enp0s3


network-scripts]# vim route-system	->to create route peristently (route-connection name) metod2
10.1.1.0/24 via 192.168.0.30 dev enp0s3

# nmcli connection reload route-system

network-scripts]# route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.1     0.0.0.0         UG    100    0        0 enp0s3
192.168.0.0     0.0.0.0         255.255.255.0   U     100    0        0 enp0s3
192.168.122.0   0.0.0.0         255.255.255.0   U     425    0        0 virbr0


[root@system network-scripts]# nmcli connection up system 

[root@system network-scripts]# route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.1     0.0.0.0         UG    100    0        0 enp0s3
10.1.1.0        192.168.0.30    255.255.255.0   UG    100    0        0 enp0s3
192.168.0.0     0.0.0.0         255.255.255.0   U     100    0        0 enp0s3
192.168.122.0   0.0.0.0         255.255.255.0   U     425    0        0 virbr0



68) ❑ Configure system.example.com machine to restrict ssh access to 192.168.99.0/24 network.

# firewall-cmd --list-all 							Displaying firewall configurations

# firewall-cmd --add-rich-rule ‘rule family=“ipv4” source address=“192.168.99.0/24” service name=“ssh” accept’ --permanent 	 ->Adding firewalld rich rule to accept traffic form 192.168.99.0/24 network

# firewall-cmd --remove-service=ssh --permanent 					Removing ssh service from services list

# firewall-cmd --reload 											Reloading firewall to make changes effective

# firewall-cmd --list-all 											To verify firewall configs after making changes


Note :Remove ssh service from services list ,if you don’t remove ssh service ,then rich rule configured to accept ssh traffic from 192.168.99.0/24 network only will not be effective. This is due to order in which firewalld evaluates the different definitions on firewall. If firewalld will find ssh service on services list, it will allow access irrespective of accessing network and rich rule will be ignored.

To Test This :
We have only one network, so it is not possible to test this. To test this working of rule , you just add this rule to allow access for some host
not on 192.168.99.0/24 network and then test ssh connection from ipaserver.example.com, it must be denied.


# systemctl status firewalld
# firewall-cmd --list-all
services: cockpit dhcpv6-client ntp ssh


# man firewalld.richlanguage
       With the rich language more complex firewall rules can be created in an easy to
       understand way. The language uses keywords with values and is an abstract
       representation of ip*tables rules.

       The rich language extends the current zone elements (service, port, icmp-block,
       icmp-type, masquerade, forward-port and source-port) with additional source and
       destination addresses, logging, actions and limits for logs and actions
Example 3
       Allow new IPv4 connections from address 192.168.0.0/24 for service tftp and log
       1 per minutes using syslog

           rule family="ipv4" source address="192.168.0.0/24" service name="tftp" log prefix="tftp" level="info" limit value="1/m" accept



add rich rule to allow trafic only this network 192.168.0.0/24
# firewall-cmd --add-rich-rule='rule family="ipv4" source address="192.168.0.0/24" service name="ssh" accept' --permanent

# firewall-cmd --reload

# firewall-cmd --list-all
services: cockpit dhcpv6-client ntp ssh
rich rules: 
	rule family="ipv4" source address="192.168.0.0/24" service name="ssh" accept


# firewall-cmd --remove-service=ssh --permanent
success
# firewall-cmd --reload
success
# firewall-cmd --list-all				->ssh service removed
services: cockpit dhcpv6-client ntp

Now make connection from FreeIPa Server to ssh it allow ssh from this network only.
[ajay@freeipa ~]$ hostname
freeipa.example.com

[ajay@freeipa ~]$ ssh system.example.com

[ajay@system ~]$ hostname			->can ssh from this network only
system.example.com


# Brief Introduction to SELinux (Security Enhanced Linux)

❖ SELinux implements Mandatory Access Control (MAC). Every process and system resource has a special security label called a SELinux context.

❖ The SELinux policy uses these contexts in a series of rules which define how processes can interact with each other and the - various system resources. By default, the policy does not allow any interaction unless a rule explicitly grants access.

❖ SELinux contexts have several fields: #user, #role, #type, and #security level. The SELinux type information is the most important when it comes to the SELinux policy, as the most common policy rule which defines the allowed interactions between processes and system resources uses SELinux types and not the full SELinux context.

❖ For example, the SELinux type name for the web server process is httpd_t.
❖ The type context for files and directories normally found in /var/www/html/ is httpd_sys_content_t

Commands :
# ps -eZ 						-To list SELinux context for Processes
# ls -ldZ 						-To list SELinux context for Directories

 _______												 _________			
|		|							      			    |		  |
|Apache |\					NOT ALLOWED 				| MariaDB |
|httpd_t| \						________________________|mysqld_t |
|_______|  \ 					|						|_________|
	|		\___________________|___						|
	|							|	|						|
	|							|	|						|
	|					  ______|	|					    |
 ___V________________	 /			|				     ___v_________			
|	 		         |	/			|_________________  |		      |
| /var/www/html	     | /							 |_>|/data/mysql |
| httpd_sys_content_t|<									|mysqld_db_t  |
|____________________|									|_____________|





69) ❑ Web server (httpd) needs to access the files in /web directory. Set the correct SELinux context type on /web directory to make this possible.

• Restore the SELinux Context.
• Changes done should be persistent.


# chcon -t httpd_sys_content_t /web 					Configuring SELinux context type in run time

# semanage fcontext -a -t httpd_sys_content_t "/web(/.*)?” 	   Configuring SELinux context type persistently

# restorecon -R -v /web 							Restoring SELinux context

# ls -ldZ /web 										Displaying SELinux context

# man semanage 										fcontext To display man page for semanage fco



# rpm -qa httpd				->query to check httpd package is installed or not
empty not install

# dnf install httpd


# ps -eZ | grep httpd
user:role:context_tyoe:secrity level
system_u:system_r:httpd_t:s0       4643 ?        00:00:00 httpd
system_u:system_r:httpd_t:s0       4677 ?        00:00:00 httpd
system_u:system_r:httpd_t:s0       4678 ?        00:00:00 httpd
system_u:system_r:httpd_t:s0       4679 ?        00:00:00 httpd
system_u:system_r:httpd_t:s0       4680 ?        00:00:00 httpd


# systemctl start httpd
# systemctl enable httpd

# ls -ldZ /var/www/html 		->httpd_sys_content_t ->context type
drwxr-xr-x. 2 root root system_u:object_r:httpd_sys_content_t:s0 6 Nov 12 10:28 /var/www/html

# mkdir /web
]# ls -ldZ /web				->default_t		context 
drwxr-xr-x. 2 root root unconfined_u:object_r:default_t:s0 6 Dec  3 16:15 /web

#chcon --help
 -t, --type=TYPE        set type TYPE in the target security context

# chcon -t httpd_sys_content_t /web 			->its runtime context change
# ls -ldZ /web
drwxr-xr-x. 2 root root unconfined_u:object_r:httpd_sys_content_t:s0 6 Dec  3 16:15 /web
-t ->to specific selinux context type


# restorecon -Rv /web
Relabeled /web from unconfined_u:object_r:httpd_sys_content_t:s0 to unconfined_u:object_r:default_t:s0


# ls -ldZ /web		->its bacto default_t
drwxr-xr-x. 2 root root unconfined_u:object_r:default_t:s0 6 Dec  3 16:15 /web

# semanage fcontext -a -t httpd_sys_content_t "/web(/.*)?"			->set persistent context type
t->context type
a-> to add context type .

# ls -ldZ /web ->still default_t  because it update selinux policy database.now restore con to defalt
drwxr-xr-x. 2 root root unconfined_u:object_r:default_t:s0 6 Dec  3 16:15 /web

# restorecon -Rv /web	->get default selinux type for selinux policy db
Relabeled /web from unconfined_u:object_r:default_t:s0 to unconfined_u:object_r:httpd_sys_content_t:s0

-R->recursive
-v->for verbose

# ls -ldZ /web
drwxr-xr-x. 2 root root unconfined_u:object_r:httpd_sys_content_t:s0 6 Dec  3 16:15 /web



70) ❑ Configure the firewall on system.example.com to allow inbound http traffic.
• Changes done should be persistent.

# systemctl status firewalld 						To check status of firewalld service

# firewall-cmd --get-services 						To get list of firewalld services

# firewall-cmd --add-service=http 					Adding http service on firewall in runtime

# firewall-cmd --add-service=http --permanent 		Adding http service on firewall persistently

# firewall-cmd --list-all 							Displaying firewall configs



# systemctl status firewalld 	->active
]# firewall-cmd --list-all
 services: cockpit dhcpv6-client ntp ssh

# firewall-cmd --get-services			-> To get list of firewalld services name define in firewalld

# firewall-cmd --info-service=http
http
  ports: 80/tcp
  protocols: 
  source-ports: 
  modules: 
  destination: 
  includes: 
  helpers: 

# firewall-cmd --add-service=http		->add service runtime
success

# firewall-cmd --list-all
  services: cockpit dhcpv6-client http ntp ssh


# firewall-cmd --reload
success

# firewall-cmd --list-all	->sevice is gone
  services: cockpit dhcpv6-client ntp ssh

# firewall-cmd --add-service=http --permanent		->to add service persistent
success
# firewall-cmd --reload
success

# firewall-cmd --list-all
  services: cockpit dhcpv6-client http ntp ssh



71) ❑ Configure the firewall to accept inbound traffic on 443/tcp port.
• Changes done should be persistent.
• Use firewall-config for this task.

# dnf install firewall-config 					 Install package firewall-config

# firewall-config (startx needed) 				Launching firewall-config (startx needed)

# firewall-cmd --list-all 						Checking firewall configs

# systemctl status firewalld 	->active
443->port is use for https

# dnf install firewall-config

# firewall-config
Unable to init server: Could not connect: Connection refused
Unable to init server: Could not connect: Connection refused
Unable to init server: Could not connect: Connection refused

(firewall-config:12454): Gtk-WARNING **: 23:25:46.780: cannot open display: 

# man fireall-config
firewall-config - firewalld GUI configuration tool


#man startx
       startx - initialize an X session

# startx 	->provide user interface require for the service

# firewall-config		->it will start
set 
configuration ->permanent
zone=>public
add port=>443/tcp=>ok
option=> reload firewall

# firewall-cmd --list-all
ports =>443/tcp		=>now it can inbound https traffic for web server





72) ❑ Configure password-less ssh login for system.example.com to establish connection to ipaserver.example.com.
• Use passphrase access to protect the private key.

# ssh ipaserver.example.com 					Testing SSH connection

# ssh-keygen -t rsa 							Generating SSH key-pair
-t=>define type of key pair rsa key


# ssh-copy-id ipaserver.example.com 			To copy public key to SSH Server

# ssh ipaserver.example.com 					Testing password less connection

# cd /root/.ssh 							Path where private/public key-pair is stored on client

# more /root/.ssh/authorized_keys				 File where public key is stored on server side



# ssh ipaserver.example.com 		->connect ipa servr using ssh


keybased ssh login
# ssh-keygen --help
-t => different key pair algo for encrytion /dsa/ecdsa/ed25519/rsa

# ssh-keygen -t rsa 	
passphrase: access


# cd /root/.ssh 
id_rsa id_rsa.pub

# more id_rsa		->private key

# more id_rsa.pub   ->public key

# ssh-copy-id ipaserver.example.com 		->copy pub key to server side
password:


# ssh ipaserver.example.com 	
passphrase:

# hostname
ipaserver.example.com 	




73) ❑ List all SELinux booleans and set the SELinux boolean samba_export_all_rw to 1 to allow Samba server to share exports with r/w permissions.
• Changes should be persistent.


# getsebool -a 							To list all SELinux Booleans

# setsebool -P samba_export_all_rw 1 	To set the Boolean persistently



samba_export_all_rw to 1 => no need to set context type on samba share dir on client we just switch on or switch off boolean

# getsebool -a 		->Show all SELinux booleans.

# getsebool -a | grep samba		->turn on this boolean set to 1
samba_export_all_rw --> off

# man setsebool
-P=>If the -P option is given, all pending values are written to the policy file  on
       disk. So they will be persistent across reboots.


# setsebool -P samba_export_all_rw 1		->set selinux bool 1 (on)

# getsebool -a | grep samba	
samba_export_all_rw --> on






74) ❑ Configure correct Selinux context type for ssh service to listen on non-default TCP port 555.
• Changes should be persistent.

# semanage port -l 							 To list all SELinux context types set on Default ports

# semanage port -a -t ssh_port_t -p tcp 555  To set the correct selinux context type on non-default port

ssh default port is 22 now we have to set port 555
# semanage port -l			->	

a	->add
t	-> type of context
p	->protocol tcp/udp


# semanage port --help
  -a, --add             Add a record of the port object type
  -d, --delete          Delete a record of the port object type
  -l, --list            List records of the port object type
  -t TYPE, --type TYPE  SELinux Type for the object
  -p PROTO, --proto PROTO
                        Protocol for the specified port (tcp|udp) or internet
                        protocol version for the specified node (ipv4|ipv6).

# semanage port -l | grep 22	->context type
ssh_port_t                     tcp      22

# man semange port
EXAMPLE
       List all port definitions
       # semanage port -l
       Allow Apache to listen on tcp port 81
       # semanage port -a -t http_port_t -p tcp 81
       Allow sshd to listen on tcp port 8991
       # semanage port -a -t ssh_port_t -p tcp 8991



# semanage port -a -t ssh_port_t -p tcp 555

# semanage port -l | grep 555
ssh_port_t                     tcp      555, 22


# semanage port -d -t ssh_port_t -p tcp 555		->delete port
# semanage port -l | grep 22		->no 555 port



# Containers:-

Brief Introduction to Containers
 Container is nothing but running code in its own isolated environment. All files , settings, tools and resources needed to run container are provided through image called container image.

 Container is launched from container image and can not exist without image.


 Virtual machines are example of virtualization at Infra level, but containers are example of virtualization at OS level. Different containers running on machine share the same operating system but VM’s don’t.
																 _______________________________
																| APP     |APP       |APP       |
_____________________											|-------------------------------|
| OS |OS |OS 		|											|		  |          |          |
| VM |VM |VM 		|											|Container| Container| Container|
|-------------------|											|-------------------------------|
| Hypervisor        |											| 		Container Engine        |
|-------------------|											|-------------------------------|
|HostOperatingSystem|											|		Host Operating System   |
|-------------------| 											|-------------------------------|
|Infrastructure 	|											|			Infrastructure      |
|___________________|											 --------------------------------

Layered VM Architecture											Layered Container Example



 Docker Engine is example of popular container engine and containers launched by Docker Engine are usually called Docker containers.


 RedHat does not support Docker in RHEL-8 and built its own daemon less tools to manage individual containers, usually called Linux containers(LXC).

 Also RedHat developed OpenShift for multi node deployments to run multiple containers in different groups known as pods.(pods is group of running container)

 Red Hat Enterprise Linux implements Linux Containers using core technologies such as Control Groups (Cgroups) for Resource anagement, Namespaces for Process Isolation.

 For RHCSA exam, You are expected to know how to manage individual Linux containers using set of tools and you don’t need o know about Docker Engine and OpenShift Platform.


 podman , buildah, skopeo and runc are tools developed by RedHat to manage individual containers. We will mainly discuss bout podman and skopeo which is expected at RHCSA level.

podman : Pod Manager for managing pods and container images.
skopeo : For copying, inspecting, deleting and signing images



#Searching and Retrieving Container images

To search container images in different container registries ,podman search command line is used.

Now what are container registries ?
A container registry is a collection of repositories made to store container images which is normally located on some remote server. You can search image in different registries and pull the image to your machine using #podman pull command line.

You can find list of registries in /etc/containers/registries.conf config file.


There are there sections in this file :
[registries.search] - By default podman search searches registries defined in this section in given order.

[registries.insecure] - Insecure registries which does not use TLS are added in this section.

[registries.block] - Registries defined in this section are not allowed access from your local system.


As root user, you can edit the file /etc/containers/registries.conf to change system-wide search settings but as regular user you can create your own #registries.conf file in your home directory $HOME/.config/containers/registries.conf to override system wide
settings.

Note: For unauthorized registries, you will need to authenticate using #podman login command line








#Installing Container tools and Getting podman help

To work with individual containers, We need to install container tools.

Install container tools with following command:
# dnf module install -y container-tools


We can work with containers as root user as well as regular users(rootless users),functionality available form RHEL 8.1. By setting rootless users, system admin limit potential damage to containers from regular users.

After installing container tools, we will walk through podman man page and help.


Link for RedHat Documentation for Containers :
https://access.redhat.com/documentation/en-
us/red_hat_enterprise_linux/8/html/building_running_and_managing_containers/starting-with-containers_building-running-and-managing-containers



Note: Practice Containers Objectives on RHEL 8.2 or CentOS 8.2 because on addition of these objectives ,RedHat changed the exam version to RHEL 8.2.



# dnf module install -y container-tools

# podman tabtab	command is exist
# skopeo tabtab 


]# more /etc/containers/registries.conf
[registries.search]


# podman --help
  attach      Attach to a running container
  container   Manage containers
  exec        Run a process in a running container
  generate    Generate structured data based on containers, pods or volumes.
  build       Build an image using instructions from Containerfiles
  commit      Create new image based on the changed container

  image       Manage images
  images      List images in local storage
  inspect     Display the configuration of object denoted by ID
  mount       Mount a working container's root filesystem
  port        List port mappings or a specific mapping for the container

  ps          List containers list running container(-a all container)
  pull        Pull an image from a registry
  rm          Remove one or more containers
  rmi         Removes one or more images from local storage
  run         Run a command in a new container
  stop        Stop one or more containers
  unmount     Unmounts working container's root filesystem
  volume      Manage volumes


# man podman
podman - Simple management tool for pods, containers and images
COMMANDS
podman attach  ->      Attach to a running container.

# man podaman attach
# man podaman-attach


76)  Download Apache Web Sever Container image (httpd 2.4) on your System and inspect the container image.

• Check the Exposed ports in container image configurations.
• Authenticate using your RedHat credentials to download image if needed.


# podman search httpd 						To search Apache image httpd 2.4 in configured Registries

# podman login REGISTRY_PATH 				Authenticating to download image

# podman pull IMAGE_PATH 					Downloading Container Image

# podman inspect --format ‘{{ .Config.ExposedPorts }}’ IMAGE_PATH 		   Displaying Configurations and checking Exposed ports

# man podman 										To display man page for podman

# podman pull --help 								Displaying help for podman pull




# podman search --help
Search registry for image
Usage:
  podman search [options] TERM


# podman search httpd-2.4
INDEX       NAME                                             DESCRIPTION                                      STARS       OFFICIAL    AUTOMATED
redhat.com  registry.access.redhat.com/rhscl/httpd-24-rhel7  Apache HTTP 2.4 Server                           0       
redhat.io   registry.redhat.io/rhscl/httpd-24-rhel7          Apache HTTP 2.4 Server  

# podman pull registry.access.redhat.com/rhscl/httpd-24-rhel7		->pull registry
downloaded


now download other repgistry 
]# podman pull registry.redhat.io/rhscl/httpd-24-rhel7     	->give error require redhat credentioal
Trying to pull registry.redhat.io/rhscl/httpd-24-rhel7:latest...
Error: initializing source docker://registry.redhat.io/rhscl/httpd-24-rhel7:latest: unable to retrieve auth token: invalid username/password: unauthorized: Please login to the Red Hat Registry using your Customer Portal credentials. Further instructions can be found here: https://access.redhat.com/RegistryAuthentication



# podman login registry.redhat.io
Username: 2015ajays
Password: 
Login Succeeded!


# podman pull registry.redhat.io/rhscl/httpd-24-rhel7 	->no error of authentication already downloaded from other server


# podman images		->to all list images
REPOSITORY                                       TAG         IMAGE ID      CREATED      SIZE
registry.redhat.io/rhscl/httpd-24-rhel7          latest      a8d6d7d38edf  2 weeks ago  329 MB
registry.access.redhat.com/rhscl/httpd-24-rhel7  latest      a8d6d7d38edf  2 weeks ago  329 MB
registry.access.redhat.com/ubi8/httpd-24         latest      c137096dbe41  4 weeks ago  470 MB


# podman inspect registry.access.redhat.com/rhscl/httpd-24-rhel7		->all conf data in this image in json
 "Config": {
            "User": "1001",
            "ExposedPorts": {
                "8080/tcp": {},
                "8443/tcp": {}

ENV{
"SUMMARY=
 "DESCRIPTION=A
 "HTTPD_DATA_ORIG_PATH=/opt/rh/httpd24/root/var/www",		->path
 
get particulart values from json output --format
# podman inspect --format '{{ .Config }}' registry.access.redhat.com/rhscl/httpd-24-rhel7


# podman inspect --format '{{ .Config.ExposedPorts }}' registry.access.redhat.com/rhscl/httpd-24-rhel7
map[8080/tcp:{} 8443/tcp:{}]






77)  Run the httpd Container in background from image downloaded in previous task.

• Assign name myweb to this container.
• Verify using podman ps if container is running.
• Stop the container and verify again if container is stopped.
• Delete the container and container image.

# podman run --name myweb -d IMAGE_PATH 					To run webserver container in background

# podman ps 												Listing running containers

# podman stop myweb 										Stopping container

# podman rm myweb 											Deleting container

# podman rmi IMAGE_PATH 									Deleting container image




# podman images				->all container images
REPOSITORY                                       TAG         IMAGE ID      CREATED      SIZE
registry.redhat.io/rhscl/httpd-24-rhel7          latest      a8d6d7d38edf  2 weeks ago  329 MB
registry.access.redhat.com/rhscl/httpd-24-rhel7  latest      a8d6d7d38edf  2 weeks ago  329 MB
registry.access.redhat.com/ubi8/httpd-24         latest      c137096dbe41  4 weeks ago  470 MB


# podman run --help | more
Description:
  Runs a command in a new container from the given image
Usage:
  podman run [options] IMAGE [COMMAND [ARG...]]
  -a, --attach strings                           Attach to STDIN, STDOUT or STDERR
  -d, --detach                                   Run container in background and print container ID

  -e, --env stringArray                          Set environment variables in container (default [PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/b
in:/sbin:/bin,TERM=xterm])

  -h, --hostname string                          Set container hostname
  -i, --interactive                              Keep STDIN open even if not attached(we use this option with -d to open terminal inside container)

  -t, --tty                                      Allocate a pseudo-TTY for container
  -v, --volume stringArray                       Bind mount a volume into the container

      --name string                              Assign a name to the container


# podman run --name myweb -d registry.access.redhat.com/rhscl/httpd-24-rhel7
53d4872e63fe65393cd6ed3133cc73af9c9c19e1a51bd41cea9904738df342c5	->container id

--name -> to assign name to container myweb name
-d ->to run the http container in background
IMAGE_PATH -> image path


# podman ps
CONTAINER ID  IMAGE                                                   COMMAND               CREATED         STATUS             PORTS       NAMES
53d4872e63fe  registry.access.redhat.com/rhscl/httpd-24-rhel7:latest  /usr/bin/run-http...  36 seconds ago  Up 26 seconds ago              myweb

53d4872e63fe ->truncated container id


# netstat -an | grep 8080		->no service listening on port 8080

]# podman stop myweb 
]# podman start myweb 

# podman ps		->no container is running
CONTAINER ID  IMAGE       COMMAND     CREATED     STATUS      PORTS       NAMES

# podman ps -a		->status of container is stop
CONTAINER ID  IMAGE                                                   COMMAND               CREATED       STATUS                     PORTS       NAMES
53d4872e63fe  registry.access.redhat.com/rhscl/httpd-24-rhel7:latest  /usr/bin/run-http...  21 hours ago  Exited (0) 36 seconds ago              myweb


# podman rm myweb 			->delete a container
53d4872e63fe65393cd6ed3133cc73af9c9c19e1a51bd41cea9904738df342c5
	
# podman ps -a		->no container running
CONTAINER ID  IMAGE       COMMAND     CREATED     STATUS      PORTS  

# podman rmi registry.access.redhat.com/rhscl/httpd-24-rhel7		->container image also deleted
Untagged: registry.access.redhat.com/rhscl/httpd-24-rhel7:latest


# podman images 		->only one container image left
REPOSITORY                               TAG         IMAGE ID      CREATED      SIZE
registry.redhat.io/rhscl/httpd-24-rhel7  latest      a8d6d7d38edf  2 weeks




78)  Pull Apache Web server image (httpd 2.4) and run the container with name webserver.

• Configure webserver to display content “Welcome to container-based web server”.
• Port 3333 should be used on host machine to receive http requests.
• Start bash shell in container to verify configurations.


# podman search httpd 							Searching httpd 2.4 container image

# podman pull IMAGE_PATH 						Pulling/downloading image to local System

# podman inspect IMAGE_PATH 					Displaying config info contained in Image

# podman run --name webserver -d -p 3333:EXPOSED_PORT -v	Running container and publishing port(s)
/var/www/html:ORIG_DATA_PATH IMAGE_PATH 

# vim /var/www/html/index.html		->Creating index.html on host and adding message to be displayed.
Welcome to container-based web server
:wq 

# podman restart webserver 						Restarting container webserver

# curl http://system.example.com:3333 			Verifying if webserver serves index.html

# podman run --help 							Getting help for podman command line


8080 -> port for http
--name -> to assign name to container myweb name
-d ->to run the http container in background
IMAGE_PATH -> image path
-p ->publish expose port 8080 for http
-v ->to map directory path document root for web server

# ip a
cmi-podman0	->interface added bridege interface when we use podman run or add container 

# dnf install httpd	->configure web server first

# systemctl enable --now httpd
# systemctl status httpd


# more /etc/httpd/conf/httpd.con
ServerRoot "/etc/httpd"
Listen 80
DocumentRoot "/var/www/html"
<Directory "/var/www">

# ls -ldZ /var/www/html/	->check selinux context on dir httpd_sys_content_t
drwxr-xr-x. 2 root root system_u:object_r:httpd_sys_content_t:s0 6 Nov 12 10:28 /var/www/html/

# vim /var/www/html/index.html
welcome to web server

# systemctl restart httpd

# curl http://localhost		->show webserver
welcome to web server
		or
# curl http://system.example.com
welcome to web server


# netstat -an | grep :80			->web server listening on port 80
tcp6       0      0 :::80                   :::*                    LISTEN   

# dnf remove httpd	->now we remove this httpd service and run httpd from container

# netstat -an | grep :80	->no service lisening
# curl http://localhost	->becaue we stop the server
curl: (7) Failed to connect to localhost port 80: Connection refused

inspect image json
# podman inspect registry.redhat.io/rhscl/httpd-24-rhel7
 "ExposedPorts": {
                "8080/tcp": {},
                "8443/tcp": {}
            },

this path using in container instead of /var/wwe/html/
 "HTTPD_DATA_ORIG_PATH=/opt/rh/httpd24/root/var/www",
so we need map this path from host create html file

we can publish port -p two time
--name -> name of container
-d -> run webserver container in background
-p -> publish expose port
3333:8080->3333 map on port 8080
(-v option to mount FS from HOST TO CONTAINER)
-v ->to mount document root from host to coreesponding path
path of host: path inside container image
/var/www/html:/opt/rh/httpd24/root/var/www/html


]# podman run --name webserver -d -p 3333:8080 -v /var/www/html:/opt/rh/httpd24/root/var/www/html registry.redhat.io/rhscl/httpd-24-rhel7
9dc26fef3dcfa030ffa83f920d9a1a94682280a2a00c81427be09cda757ff617

# podman ps
CONTAINER ID  IMAGE                                           COMMAND               CREATED        STATUS            PORTS                   NAMES
9dc26fef3dcf  registry.redhat.io/rhscl/httpd-24-rhel7:latest  /usr/bin/run-http...  9 seconds ago  Up 5 seconds ago  0.0.0.0:3333->8080/tcp  webserver

# podman container list 
CONTAINER ID  IMAGE                                           COMMAND               CREATED         STATUS             PORTS                   NAMES
9dc26fef3dcf  registry.redhat.io/rhscl/httpd-24-rhel7:latest  /usr/bin/run-http...  17 seconds ago  Up 13 seconds ago  0.0.0.0:3333->8080/tcp  webserver


# netstat -an | grep :3333
tcp        0      0 0.0.0.0:3333            0.0.0.0:*               LISTEN  


inspect selinux context set on documetn root path define inside container for this
start bash shell inside container. -i->interactive -t->to open temanal

# podman exec -it webserver /bin/bash	->start bash shell inside container
bash-4.2$ exit

# podman exec -it -u 0 webserver /bin/bash	->-u user as 0(root) option to login as root
bash-4.2# 

bash-4.2# cd /	->we are inside container
bash-4.2# ls -l		->it is container file system
total 12
lrwxrwxrwx.   1 root root     7 Nov 16 13:07 bin -> usr/bin
dr-xr-xr-x.   2 root root     6 Dec 14  2017 boot
drwxr-xr-x.   5 root root   340 Dec  5 08:07 dev
drwxr-xr-x.   1 root root    32 Nov 19 09:41 etc
-rw-r--r--.   1 root root 10974 Nov 19 09:40 help.1
drwxr-xr-x.   2 root root     6 Nov 16 13:08 home
lrwxrwxrwx.   1 root root     7 Nov 16 13:07 lib -> usr/lib
lrwxrwxrwx.   1 root root     9 Nov 16 13:07 lib64 -> usr/lib64
drwxr-xr-x.   2 root root     6 Dec 14  2017 media
drwxr-xr-x.   2 root root     6 Dec 14  2017 mnt
drwxr-xr-x.   1 root root    22 Nov 19 09:40 opt
dr-xr-xr-x. 227 root root     0 Dec  5 08:07 proc
dr-xr-x---.   1 root root    23 Nov 16 13:16 root
drwxr-xr-x.   1 root root    40 Dec  5 08:07 run
lrwxrwxrwx.   1 root root     8 Nov 16 13:07 sbin -> usr/sbin
drwxr-xr-x.   2 root root     6 Dec 14  2017 srv
dr-xr-xr-x.  13 root root     0 Dec  5 07:36 sys
drwxrwxrwt.   1 root root     6 Dec  5 08:08 tmp
drwxr-xr-x.   1 root root    81 Nov 19 09:40 usr
drwxr-xr-x.   1 root root    17 Nov 19 09:41 var


bash-4.2# cd /opt/rh/httpd24/root/var/www/html/
bash-4.2# ls	->permission deny se selinux context type
ls: cannot open directory .: Permission denied

bash-4.2# ls -ldZ		->correct selinux context
drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 .
bash-4.2# exit
exit
[root@system ~]# 

we can also use podman mount for same action
# podman mount webserver 	->we are mounting container file system on this path
/var/lib/containers/storage/overlay/1d0b29e5b26ef7c0c77e11dba402467fd76b140b55b62ac813f7ca4537a2a50b/merged

containre file system
]# cd /var/lib/containers/storage/overlay/1d0b29e5b26ef7c0c77e11dba402467fd76b140b55b62ac813f7ca4537a2a50b/merged
[root@system merged]# 


merged]# ls		->container FS
bin   dev  help.1  lib    media  opt   root  sbin  sys  usr
boot  etc  home    lib64  mnt    proc  run   srv   tmp  var

[root@system merged]# cd opt/rh/httpd24/root/var/www/html/
[root@system html]# ls
index.html
[root@system html]# cat index.html 	-> we are see this file inside container because
welcome to web server
we map document root from the host to this directory path inside contianer

1)we map ports
2)we map docment root directory to this directory

# podman umount webserver 	->unmount the container
webserver

# cd /var/www/html/
# vim index.html
welcome to Container-based webserver

]# curl http://localhost		->error because container based webserver not listing on this port 80
curl: (7) Failed to connect to localhost port 80: Connection refused

for host side we need to use port 3333 works
# curl http://localhost:3333
welcome to Container-based webserver



its host->container(non-privileges)


79)  Configure System to start webserver container at boot as SYSTEMD service.
• Start/enable SYSTEMD service to make sure container will start at boot.
• Reboot System and verify if container is running as expected.


# podman generate systemd webserver				 Generating systemd unit file for container

->Creating service unit file with name httpd-container.service
# vim /etc/systemd/system/httpd-container.service	
#Paste generated systemdd unit file contents here#
:wq 

# systemctl daemon-reload 						Reloading systemd to make changes effective

# systemctl start httpd-container.service 		Starting httpd-container.service service

# systemctl enable httpd-container.service 		Enabling httpd-container.service service

# systemctl status httpd-container.service 		Displaying status of httpd-container.service service

# systemctl reboot Reboot System

# systemctl status httpd-container.service 		Displaying status of httpd-container.service service again to verify service is Active(running).

# man systemd.service 							To display man page for systemd service units


->generate content for systemd unit file we will be using systemd service 

# cd /usr/lib/systemd/system	->Systemd service present on system
# ls -lrt =>different systemd unit not change anything lib based service

# ls -lrt | grep .service		->service define as systemd service

# more rsyslog.service 
[Unit]
Description=System Logging Service
;Requires=syslog.socket
Wants=network.target network-online.target
After=network.target network-online.target
Documentation=man:rsyslogd(8)
Documentation=https://www.rsyslog.com/doc/

[Service]
Type=notify
EnvironmentFile=-/etc/sysconfig/rsyslog
ExecStart=/usr/sbin/rsyslogd -n $SYSLOGD_OPTIONS
UMask=0066
StandardOutput=null
Restart=on-failure

# Increase the default a bit in order to allow many simultaneous
# files to be monitored, we might need a lot of fds.
LimitNOFILE=16384

[Install]
WantedBy=multi-user.target
;Alias=syslog.service


#podman generate --help
Generate structured data based on containers, pods or volumes.

Description:
  Generate structured data (e.g., Kubernetes YAML or systemd units) based on containers, pods or volumes.

Usage:
  podman generate [command]

Available Commands:
  kube        Generate Kubernetes YAML from containers, pods or volumes.
  systemd     Generate systemd units.



=>Generating systemd unit file for container
# podman generate systemd webserver  	-> systemd unit file creaed
# container-9dc26fef3dcfa030ffa83f920d9a1a94682280a2a00c81427be09cda757ff617.service
# autogenerated by Podman 3.3.1
# Sun Dec  5 17:40:02 IST 2021

[Unit]
Description=Podman container-9dc26fef3dcfa030ffa83f920d9a1a94682280a2a00c81427be09cda757ff617.service
Documentation=man:podman-generate-systemd(1)
Wants=network-online.target
After=network-online.target
RequiresMountsFor=/run/containers/storage

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=on-failure
TimeoutStopSec=70
ExecStart=/usr/bin/podman start 9dc26fef3dcfa030ffa83f920d9a1a94682280a2a00c81427be09cda757ff617
ExecStop=/usr/bin/podman stop -t 10 9dc26fef3dcfa030ffa83f920d9a1a94682280a2a00c81427be09cda757ff617
ExecStopPost=/usr/bin/podman stop -t 10 9dc26fef3dcfa030ffa83f920d9a1a94682280a2a00c81427be09cda757ff617
PIDFile=/run/containers/storage/overlay-containers/9dc26fef3dcfa030ffa83f920d9a1a94682280a2a00c81427be09cda757ff617/userdata/conmon.pid
Type=forking

[Install]
WantedBy=multi-user.target default.target





#vim httpd-container.service	->paste output of generate command
# container-9dc26fef3dcfa030ffa83f920d9a1a94682280a2a00c81427be09cda757ff617.service
# autogenerated by Podman 3.3.1
# Sun Dec  5 17:40:02 IST 2021

[Unit]
Description=Podman container-9dc26fef3dcfa030ffa83f920d9a1a94682280a2a00c81427be09cda757ff617.service
Documentation=man:podman-generate-systemd(1)
Wants=network-online.target
After=network-online.target
RequiresMountsFor=/run/containers/storage

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=on-failure
TimeoutStopSec=70
ExecStart=/usr/bin/podman start 9dc26fef3dcfa030ffa83f920d9a1a94682280a2a00c81427be09cda757ff617
ExecStop=/usr/bin/podman stop -t 10 9dc26fef3dcfa030ffa83f920d9a1a94682280a2a00c81427be09cda757ff617
ExecStopPost=/usr/bin/podman stop -t 10 9dc26fef3dcfa030ffa83f920d9a1a94682280a2a00c81427be09cda757ff617
PIDFile=/run/containers/storage/overlay-containers/9dc26fef3dcfa030ffa83f920d9a1a94682280a2a00c81427be09cda757ff617/userdata/conmon.pid
Type=forking

[Install]
WantedBy=multi-user.target default.target



# systemctl daemon-reload 		->reload systemd
# systemctl start httpd-container.service
# systemctl enable httpd-container.service 

# systemctl status httpd-container.service 	->active

# podman ps		->one container running it must be running after reboot we enable service
CONTAINER ID  IMAGE                                           COMMAND               CREATED      STATUS          PORTS                   NAMES
9dc26fef3dcf  registry.redhat.io/rhscl/httpd-24-rhel7:latest  /usr/bin/run-http...  4 hours ago  Up 4 hours ago  0.0.0.0:3333->8080/tcp  webserver


# systemctl status httpd-container.service 	->active after reboot running 
# podman ps		->container based service started at boot
CONTAINER ID  IMAGE                                           COMMAND               CREATED      STATUS          PORTS                   NAMES
9dc26fef3dcf  registry.redhat.io/rhscl/httpd-24-rhel7:latest  /usr/bin/run-http...  4 hours ago  Up 4 hours ago  0.0.0.0:3333->8080/tcp  webserver

Note:.Configuring System to Start Container as Systemd Service at boot









80)  Pull Mariadb Server image to your System.

• Run container mariadb from the image and publish Exposed port.
• Set root password for mariadb service as mysql.
• Verify if you can login as root from local host.


# podman search mariadb 						Searching mariadb image

# podman login REGISTRY_PATH 					Authenticating to pull image

# podman pull REGISTRY_PATH/IMAGE_NAME 			Downloading image to System

# podman inspect IMAGE_PATH 					Displaying configs inside image e.g. Exposed Ports

# podman run --name mariadb -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=mysql -v /var/lib/mysql:PREFIX/var/lib/mysql IMAGE_PATH 				->Running mariadb Container and publishing Exposed port.

# dnf install mysql 							Installing mysql on System Host

# podman inspect --format ‘{{ NetworkSettings.IPAddress }}’ mariadb 		->Listing IP address assigned

# mysql -h IPAddress -u root -p 				Connecting to mariadb database









# podman search mariadb
redhat.io   registry.redhat.io/rhel8/mariadb-103                       MariaDB is a multi-user, multi-threaded SQL .


# podman login registry.redhat.io/rhel8/mariadb-103
Username: 2015ajays
Password: 
Login Succeeded!


# podman pull registry.redhat.io/rhel8/mariadb-103
Trying to pull registry.redhat.io/rhel8/mariadb-103:latest.



]# podman images
REPOSITORY                               TAG         IMAGE ID      CREATED      SIZE
registry.redhat.io/rhscl/httpd-24-rhel7  latest      a8d6d7d38edf  2 weeks ago  329 MB
registry.redhat.io/rhel8/mariadb-103     latest      a51114320907  4 weeks ago  582 MB
registry.redhat.io/rhel8/httpd-24        latest      c137096dbe41  4 weeks ago  470 MB
registry.redhat.io/rhel8/rsyslog         latest      bec76e2fd143  4 weeks ago  257 MB


# podman inspect registry.redhat.io/rhel8/mariadb-103
        "Config": {
            "User": "27",
            "ExposedPorts": {
                "3306/tcp": {}
            },

"MYSQL_PREFIX=/usr"


# dnf install mysql


-e option ->to set this enviorment variable like mysql password


# podman run --name mariadb -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=mysql -v /var/lib/mysql:/var/lib/mysql registry.redhat.io/rhel8/mariadb-103
495319106f2aacc552a864febfb914c42503e7a9f7f88402198198ece9812327






now container(privilege) to host

# Opening Privileges container to Host

There is possibility to run privileged or non-privileged containers using podman. They behave and act differently on the Host.
Below are features that can be opened from a container to host .

• Privileges : A privileged container ( --privileged) runs applications on host as root user. So, you can delete files/directories mounted from host to container even if they are owned by root.

• Process Tables: A non-privileged containers can see only processes running inside container but can not see processes running on host. Privileged container (--pid=host) on the other hand can see all processes (use ps -e) running on host as well.

• Network Interfaces : By default, container has one external network interface and one loop back interface, but privileged container ( --net=host) allows to access all network interfaces directly from container.

• Inter-process communications: A privileged container can use IPC facility to see information about active messages queues ,shared memory segments etc.

To explore different options , check podman run --help or man podman-run.





# Running Containers Using Runlabels

Some Special RedHat container images come with labels which provide pre-defined command lines to work with those images.

To run the pre-set command line in IMAGE, we need to use below command:
#podman container runlabel <label> IMAGE

Different Labels include:
• install : Sets up host system to run the container. It creates different files and directories on host that container will user later .

• run : Run the container with different command line options. Normally it opens privileges to host and mount the filesystems from host to container.

• uninstall: Cleans up the host system when container has been run.

Example of RedHat image which includes runlabels is rsyslog. In next task, we will run rsyslog container using runlabels.




# podman container runlabel --help
Description:
  Executes a command as described by a container image label.
Usage: 
  podman container runlabel [options] LABEL IMAGE [ARG...]
options:
      --display             Preview the command that the label would run
  -n, --name string         Assign a name to the container









81)  Pull rsyslog image (registry.redhat.io/rhel8/rsyslog) to your System.

• Run container as root user using runlabels defined within the container image.
• Verify working of container and create systemd unit file to start container at boot.

# podman login registry.redhat.io 								Authenticating to registry

# podman pull registry.redhat.io/rhel8/rsyslog 					Pulling image to System

# podman container runlabel install --display					Displaying install runlabel
registry.redhat.io/rhel8/rsyslog 

# podman container runlabel install registry.redhat.io/rhel8/rsyslog 	   ->Running install runlabel

# podman container runlabel run --display registry.redhat.io/rhel8/rsyslog  ->Displaying run runlabel

# podman container runlabel run registry.redhat.io/rhel8/rsyslog 			 ->Running run runlabel

# podman generate systemd -f rsyslog 		->Execute this command at path /etc/systemd/system to create unit file

# systemctl start *.service and systemctl enable *.service 		->Starting and enabling service to start container at boot


rsyslog ->Rsyslogd is a system utility providing support for message logging. gather differnet log message from different sources. and store them into  /var/log


# more /etc/rsyslog.conf
#### MODULES ####		->different module to recive log message
#### RULES ####			->define different rule what to do with these logs
	# Log cron stuff
	cron.*                                                  /var/log/cron


# podman login registry.redhat.io 
Username: 2015ajays
Password: 
Login Succeeded!

# podman pull registry.redhat.io/rhel8/rsyslog		->download image
Trying to pull registry.redhat.io/rhel8/rsyslog:latest...

# podman images
REPOSITORY                               TAG         IMAGE ID      CREATED      SIZE
registry.redhat.io/rhscl/httpd-24-rhel7  latest      a8d6d7d38edf  2 weeks ago  329 MB
registry.redhat.io/rhel8/rsyslog         latest      bec76e2fd143  4 weeks ago  257 MB


# systemctl status rsyslog
active

# systemctl stop rsyslog		->stop rsylog service

#dnf remove rsyslog					->remove packages releated to rsyslog alos
								
# more /etc/rsyslog.conf		->all files removed
more: stat of /etc/rsyslog.conf failed: No such file or directory


Note: we run rsyslog container to provide same funtionality

--display show what this command do. only display not run command
# podman container runlabel install --display registry.redhat.io/rhel8/rsyslog
command: podman run --rm --privileged -v /:/host -e HOST=/host -e IMAGE=registry.redhat.io/rhel8/rsyslog:latest -e NAME=rsyslog registry.redhat.io/rhel8/rsyslog:latest /bin/install.sh


# podman container runlabel install registry.redhat.io/rhel8/rsyslog	->running install runlabel
Creating directory at /host//etc/pki/rsyslog
Creating directory at /host//etc/rsyslog.d
Installing file at /host//etc/rsyslog.conf
Installing file at /host//etc/sysconfig/rsyslog
Installing file at /host//etc/logrotate.d/syslog


# more /etc/rsyslog.conf 	->config file is exists again after remove


# podman container runlabel run --display registry.redhat.io/rhel8/rsyslog	->display run label
command: podman run -d --privileged --name rsyslog --net=host --pid=host -v /etc/pki/rsyslog:/etc/pki/rsyslog -v /etc/rsyslog.conf:/etc/rsyslog.conf -v /etc/sysconfig/rsyslog:/etc/sysconfig/rsyslog -v /etc/rsyslog.d:/etc/rsyslog.d -v /var/log:/var/log -v /var/lib/rsyslog:/var/lib/rsyslog -v /run:/run -v /etc/machine-id:/etc/machine-id -v /etc/localtime:/etc/localtime -e IMAGE=registry.redhat.io/rhel8/rsyslog:latest -e NAME=rsyslog --restart=always registry.redhat.io/rhel8/rsyslog:latest /bin/rsyslog.sh


# podman container runlabel run registry.redhat.io/rhel8/rsyslog	->run the container in background
3afce1431641f9a357610996030f8815f06762675e7df781773de2688f68fa9f

-d ->to run container in background
--preivileged  -> run container as privileged
--name->redefine name of container
--net=host ->to open all network privileged from  container to host
--pid=host ->same for proces ryslog need to all pivileged funtioality of rsyslog
-v -> differnet FS mounted from host to container
/bin/rsyslog.sh	->run this script

# podman ps
CONTAINER ID  IMAGE                                           COMMAND               CREATED        STATUS            PORTS                   NAMES
9dc26fef3dcf  registry.redhat.io/rhscl/httpd-24-rhel7:latest  /usr/bin/run-http...  7 hours ago    Up 2 hours ago    0.0.0.0:3333->8080/tcp  webserver
3afce1431641  registry.redhat.io/rhel8/rsyslog:latest         /bin/rsyslog.sh       7 minutes ago  Up 6 minutes ago                          rsyslog


# podman exec -it rsyslog /bin/bash		->to start terminal in container
-it ->interactive terminal
[root@system /]# 		->inside the container

[root@system /]# cd /var/log/
[root@system log]# ls -l		->same content of FS of the host

[root@system log]# clear		->in container possible you will not found every command
bash: clear: command not found

[root@system log]# rm -rf *			->remove all file able to remove all file beacuase it privelge container and we have all root privilege

[root@system log # ls -l 		-> no files
[root@system log]# exit

# cd /var/log
# ls -l 	-> no files on system

]# podman restart rsyslog 			->to verify funtioanlity of this container we restrt it
WARN[0000] lstat /sys/fs/cgroup/devices/machine.slice/libpod-3afce1431641f9a357610996030f8815f06762675e7df781773de2688f68fa9f.scope: no such file or directory 
3afce1431641f9a357610996030f8815f06762675e7df781773de2688f68fa9f


# ls -l			->files now genrating rsyslog working fine
message

log# tail messages

# cd /etc/systemd/system/


# podman generate systemd -f rsyslog 		->create systemd unit file for rsyslog container
/etc/systemd/system/container-3afce1431641f9a357610996030f8815f06762675e7df781773de2688f68fa9f.service
-f -> create file with rsyslog name instead displaying content on standard output on screen

rename the file
# mv container-3afce1431641f9a357610996030f8815f06762675e7df781773de2688f68fa9f.service rsyslog-container.service

# ls -lrt 		->file in systemd unit
-rw-r--r--. 1 root root  989 Dec  5 20:33 rsyslog-container.service

# systemctl daemon-reload		->restart systemd
# systemctl start rsyslog-container.service 
# systemctl enable rsyslog-container.service 
# systemctl status rsyslog-container.service  ->active

# systemctl reboot
# podman ps						->container running
CONTAINER ID  IMAGE                                           COMMAND               CREATED      STATUS          PORTS                   NAMES
9dc26fef3dcf  registry.redhat.io/rhscl/httpd-24-rhel7:latest  /usr/bin/run-http...  9 hours ago  Up 2 hours ago  0.0.0.0:3333->8080/tcp  webserver
3afce1431641  registry.redhat.io/rhel8/rsyslog:latest         /bin/rsyslog.sh       2 hours ago  Up 2 hours ago                          rsyslog


# cd /var/log
# ls -l 						->many log file syslog container working
 log]# podman exec -it rsyslog /bin/bash		->inside container
[root@system /]# 


/]# cd /usr/bin/
# ls -l 		->all binarires of command available in container


# ls -lrt			->script which is used to install rsyslog container
-rwxr-xr-x. 1 root root    2354 Nov  3 21:39  install.sh


# more insall.sh






# Running Rootless Containers

podman allows us to run rootless containers (as normal user) which is good feature and provides more security. To run rootless

containers, execute below steps as root user.
• Install podman and slirp4netns packages (If not installed already):
# dnf install podman slirp4netns -y

• Increase Username spaces in Kernel : User namespaces isolate security related identifiers e.g., User IDs and Group IDs.
# echo “user.max_user_namespaces=28633” > /etc/sysctl.d/userns.conf
# sysctl -p /etc/sysctl.d/userns.conf

For more information, check manual page, man user_namespaces



# rpm -qa podman slirp4netns
podman-3.3.1-9.module_el8.5.0+988+b1f0b741.x86_64
slirp4netns-1.1.8-1.module_el8.5.0+890+6b136101.x86_64


# dnf install podman slirp4netns -y





# cd /proc/sys/user
# cat max_user_namespaces 
4989

]# sysctl user.max_user_namespaces=15000		->change kernel paramentrer max usernamespaces
user.max_user_namespaces = 15000

]# cat max_user_namespaces 
15000

# echo "user.max_user_namespaces=28633" > /etc/sysctl.d/userns.conf
# sysctl --help
-p ->read values from file

# sysctl -p /etc/sysctl.d/userns.conf 
user.max_user_namespaces = 28633

# cat max_user_namespaces 
28633






82)  Run rootless httpd container with name web as user rhcsa using image (registry.redhat.io/rhel8/httpd-24).

• Pull image to system and inspect the image.
• Use same index.html file we used earlier and port 3400 should be used on host to receive http requests
• Create user rhcsa and set password as password.

# useradd rhcsa 									Creating user

# passwd rhcsa 										Setting password

# podman login registry.redhat.io 	 			Authenticating login to Registry (execute command as user rhcsa)

# podman pull registry.redhat.io/rhel8/httpd-24 	Pulling image (execute command as user rhcsa)

# podman run -d --name web -p 3400:EXPOSED_PORT -v	   ->Running container (execute command as user rhcsa)
/var/www:HTTPD_DATA_ORIG_PATH IMAGE 

# podman ps 										Verify if container is running

# curl http://localhost:3400 						Verifying working of httpd service


Note: As normal user you must use port number greater than 1024.




# useradd rhcsa
# passwd rhcsa

# su - rhcsa
rhcsa@system ~]$ id rhcsa
uid=1001(rhcsa) gid=1001(rhcsa) groups=1001(rhcsa)

rhcsa$ podman login registry.redhat.io 
Username: 2015ajays
Password: 
Login Succeeded!

$ podman pull registry.redhat.io/rhel8/httpd-24
Trying to pull registry.redhat.io/rhel8/httpd-24:latest..

$ podman images		->all images
REPOSITORY                         TAG         IMAGE ID      CREATED      SIZE
registry.redhat.io/rhel8/httpd-24  latest      c137096dbe41  4 weeks ago  470 MB


$ podman inspect registry.redhat.io/rhel8/httpd-24 		->json inspect 
        "Config": {
            "User": "1001",
            "ExposedPorts": {
                "8080/tcp": {},
                "8443/tcp": {}
            },
    "HTTPD_DATA_ORIG_PATH=/var/www",


]$ podman run -d --name web -p 3400:8080 -v /var/www:/var/www registry.redhat.io/rhel8/httpd-24
8ceb7a46913532d2c1fb855112283d60304fdddcd12c1474713b51692cf35989


-v -> to mount FS from host to container to specific path inside image
-p ->port mapping  port_of_host_side(3400):EXPOSED_PORT()
-d -> run container in background
--name ->name of container

$ podman ps									->running container by user rhcsa only
CONTAINER ID  IMAGE                                     COMMAND               CREATED         STATUS             PORTS                   NAMES
8ceb7a469135  registry.redhat.io/rhel8/httpd-24:latest  /usr/bin/run-http...  20 seconds ago  Up 18 seconds ago  0.0.0.0:3400->8080/tcp  web



$ curl http://localhost:3400
welcome to Container-based webserver






83)  Configure System to start container web at boot.

• Create system unit file with name web-container.service for same purpose.
• You must perform this action as user rhcsca.

# mkdir -p /home/rhcsa/.config/systemd/user 				Creating Directory Path

# podman generate systemd web 					Generate systemd unit file and put the contents in /home/rhcsa/.config/systemd/user/web-container.service file 

# loginctl enable-linger rhcsa 					Enabling lingering capability for user to start service at boot with systemd user service manager.

# systemctl --user daemon-reload

# systemctl --user start web-container.service 		  Starting service using user instance of systemd

# systemctl --user start web-container.service 		  Enabling service using user instance of systemd

# systemctl --user status web-container.service 			 Checking status of containerized service

# systemctl reboot 					Rebooting system to verify if containerized service is started at
boot (as root user)

Note : Comment out PIDFile directive in unit file if service does not start. Also replace multi-user.target with default.target
You might need to add line export XDG_RUNTIME_DIR=/run/user/$(id -u) in .bashrc file for rhcsa user.





















#shell script

Conditional Execution: if Statement

Syntax of if Statement :

Example 1: Using Command as condition

if some command
then
	Command(s) to be executed
else
	Command(s) to be executed
fi


If statement decides to execute code based on exit status($?) of command . Zero exit status means SUCCESS and non-zero exit status means FAILURE.


# id rhcsa		->command fail 
id: ‘rhcsa’: no such user

# echo $?
1

# useradddd rhcsa
bash: useradddd: command not found...

# echo $?		->exit status 127,success->0
127



Conditional Execution: if Statement

Example 2:

if [ some test ] or if test some test
then
	Command(s) to be executed
elif [ some test ]
then
	Command(s) to be executed
else
	Command(s) to be executed
fi

For different tests, We can check man page for test , man test



# vim test.sh
#!/bin/bash
if id rhcsa
then
        echo "Condition is true"
else
        echo "Condition is false"
fi
~  
# chmod u+x test.sh 
# sh test.sh 
	or
#./test.sh
id: ‘rhcsa’: no such user
Condition is false

# vim test.sh	
#!/bin/bash
if id rhcsa &> /dev/null  ->send error and output to null device
then
        echo "Condition is true"
else
        echo "Condition is false"
fi


]# man test
test - check file types and compare values
test EXPRESSION
       test
       [ EXPRESSION ]
       [ ]
       [ OPTION

       EXPRESSION1 -a EXPRESSION2
              both EXPRESSION1 and EXPRESSION2 are true
       -n STRING
              the length of STRING is nonzero
	        STRING equivalent to -n STRING
       -z STRING
              the length of STRING is zero


       STRING1 = STRING2
              the strings are equal

       STRING1 != STRING2
              the strings are not equal

       INTEGER1 -eq INTEGER2
              INTEGER1 is equal to INTEGER2

       INTEGER1 -ge INTEGER2
              INTEGER1 is greater than or equal to INTEGER2

       INTEGER1 -gt INTEGER2
              INTEGER1 is greater than INTEGER2

       INTEGER1 -le INTEGER2
              INTEGER1 is less than or equal to INTEGER2

       INTEGER1 -lt INTEGER2
              INTEGER1 is less than INTEGER2


       FILE1 -ef FILE2
              FILE1 and FILE2 have the same device and inode numbers

       FILE1 -nt FILE2
              FILE1 is newer (modification date) than FILE2

       FILE1 -ot FILE2
              FILE1 is older than FILE2


       -d FILE
              FILE exists and is a directory

       -e FILE
              FILE exists

       -f FILE
              FILE exists and is a regular file

       -h FILE
              FILE exists and is a symbolic link (same as -L)

       -k FILE
              FILE exists and has its sticky bit set



# vim test1.sh 
#!/bin/bash
if [ -d /home/ajay ]
then
	echo "Directory exists"
else
	echo "Does not  exist"
fi
# ./test1.sh 
Directory exists

# vim test1.sh
#!/bin/bash
if [ -f /home/ajay ]		->test for file if file is exists
then
	echo "Directory exists"
else
	echo "Does not  exist"
fi

# ./test1.sh
Does not  exist

# vim test1.sh 
#!/bin/bash
a=10
b=20
if [ $a -eq $b ]; then
	echo "a=b"
else
	echo "a!=b"
fi

# ./test1.sh 
a!=b



94)  Create a script compare.sh to find largest number out of three numbers.
• On execution, It should ask to enter numbers.

-p prompt to read input from keyboard

#!/bin/bash
read -p “Enter first number:” num1
read -p “Enter second number:” num2
read -p “Enter third number:” num3

if [ $num1 -gt $num2 ] && [ $num1 -gt $num3 ]; then
	echo “$num1 is largest number”
elif [ $num2 -gt $num1 ] && [ $num2 -gt $num3 ]; then
	echo “$num2 is largest number”
else
	echo “$num3 is largest number”
fi

we can also use "test" command [] brackets 
# vim compare.sh 
#!/bin/bash
read -p "Enter first number:" num1
read -p "Enter second number:" num2
read -p "Enter third number:" num3
if [ $num1 -gt $num2 ] && [ $num1 -gt $num3 ];then
        echo "$num1 is largest number"
elif test $num2 -gt $num1 && [ $num2 -gt $num3 ];then
        echo "$num2 is largest number"
else
        echo "$num3 is largest number"
fi


# sh compare.sh 
Enter first number:23
Enter second number:22
Enter third number:11
23 is largest number




# loop: for Statement

Syntax of for Statement:
for VAR in VALUE1 VALUE2 .... VALUEn
do
	Some Command(s) using $VAR
done

Practical example 1:
for username in ex200 ex294
do
	useradd $username
done




# loop: for Statement

Practical example 2:
for username in `cat userlist`
do
	useradd $username
done


# for var in user1 user2		->for loop on terminal as command
> do
> useradd $var
> done
# tail /etc/passwd
user1:x:1006:1006::/home/user1:/bin/bash
user2:x:1007:1007::/home/user2:/bin/bash



# vim userlist 
user3
user4
# vim test2.sh
#!/bin/bash
for user in `cat /home/ajay/Desktop/udemy/userlist`
do
	useradd $user
done
# sh test2.sh
# tail /etc/passwd
user1:x:1006:1006::/home/user1:/bin/bash
user2:x:1007:1007::/home/user2:/bin/bash
user3:x:1008:1008::/home/user3:/bin/bash
user4:x:1009:1009::/home/user4:/bin/bash


 



95)  Create a script create_user.sh under root directory to create users.

• It should read usernames from file /root/userlist and display on STDOUT “User ‘username’ already exists” if user already exists.
• Otherwise, It should prompt for password for user.
• Set password password for each user.

#!/bin/bash
for user in `cat /root/userlist`
do
if grep $user /etc/passwd > /dev/null
then
	echo “User ‘$user’ already exists”
else
	useradd $user
	passwd --stdin $user
fi
done

--stdin -> it will prompt to enter passwd from keyword
# vim create_user.sh
#!/bin/bash
for user in `cat /home/ajay/Desktop/udemy/userlist`
do      
        if grep $user /etc/passwd > /dev/null
        then
                echo "User '$user' already exists"
        else
                useradd $user
                passwd --stdin $user
        fi      
done  
# sh create_user.sh
Changing password for user user5.
password

# tail /etc/passwd
user1:x:1006:1006::/home/user1:/bin/bash
user2:x:1007:1007::/home/user2:/bin/bash
user3:x:1008:1008::/home/user3:/bin/bash
user4:x:1009:1009::/home/user4:/bin/bash
user5:x:1010:1010::/home/user5:/bin/bash


# tail /etc/shadow  ->password for user5 created
user1:!!:18965:0:99999:7:::
user2:!!:18965:0:99999:7:::
user3:!!:18965:0:99999:7:::
user4:!!:18965:0:99999:7:::
user5:$6$B8vr5t8ZLLPW1.mz$WXMKuQNIeUxQc7TTkf5WXXvwwlXvH5SFNf/LodxBraKMWLa/VcV20y4NAealmbeKtu/dgPXtnotWYEgO5l54N0:18965:0:99999:7:::








# Processing Script Inputs Using $1,$2....
We can create script to accept variable values as command line arguments.

$0 - Script Name
$1 - First Argument
$2 - Second Argument and so on
$# - Total number of arguments provided
#@ - List of all arguments provided

We will understand this with the help of simple example.


# vim test3.sh 
#!/bin/bash
echo "Script name: $0"
echo "First arg: $1"
echo "Second arg: $2"
echo "Number of arg: $#"
echo "List of args: $@"

# sh test3.sh
Script name: test3.sh
First arg: 
Second arg: 
Number of arg: 0
List of args: 


# sh test3.sh 1 2 3 4
Script name: test3.sh
First arg: 1
Second arg: 2
Number of arg: 4
List of args: 1 2 3 4





96)  Create a script users.sh under root directory to create users.

• It should accept username(s) as command line arguments.
• It should display “No username provided” if executed without any argument.
• It should display “User already exists, or something wrong happened” if user is not created.

#!/bin/bash
if [ “$#” -eq 0 ]; then
	echo “No username provided”
else
	for user in “$@”
		do
			useradd $user 2> /dev/null
		if [ “$?” = “0” ]; then
			echo “User $user has been created”
		else
			echo “User $user already exists, or something wrong happened”
		fi
	done
fi


# vim users.sh
#!/bin/bash
if [ "$#" -eq 0 ];then
        echo "No Username provided"
else
        for user in "$@"
        do
                useradd $user 2> /dev/null
                  if [ "$?" = "0" ]; then
                          echo "User $user has been created"
                  else
                          echo "User $user already exists, or something wrong happened"
                  fi
        done
fi


# sh users.sh 
No Username provided
# sh users.sh user6
User user6 has been created

]# sh users.sh user6 user7 user4
User user6 already exists, or something wrong happened
User user7 has been created
User user4 already exists, or something wrong happened

# tail /etc/passwd
user1:x:1006:1006::/home/user1:/bin/bash
user2:x:1007:1007::/home/user2:/bin/bash
user3:x:1008:1008::/home/user3:/bin/bash
user4:x:1009:1009::/home/user4:/bin/bash
user5:x:1010:1010::/home/user5:/bin/bash
user6:x:1011:1011::/home/user6:/bin/bash
user7:x:1012:1012::/home/user7:/bin/bash
	









/dev/sda1  *        2048   616447   614400  300M 83 Linux		/boot
/dev/sda2         616448 15296511 14680064    7G 83 Linux		/root
/dev/sda3       15296512 19490815  4194304    2G 83 Linux		/home


# more /proc/partitions
major minor  #blocks  name

   8        0   17825792 sda			main partition
   8        1     307200 sda1			boot
   8        2    7340032 sda2			root
   8        3    2097152 sda3			home
   8        4          1 sda4			extended partition
   8        5     512000 sda5			500M stratis
   8        6     512000 sda6			500M stratis
  11        0    1048575 sr0






